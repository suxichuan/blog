{"meta":{"version":1,"warehouse":"5.0.1"},"models":{"Asset":[{"_id":"source/images/avator.jpg","path":"images/avator.jpg","modified":0,"renderable":0},{"_id":"source/images/favi.png","path":"images/favi.png","modified":0,"renderable":0},{"_id":"themes/butterfly/source/css/barber-shop.css","path":"css/barber-shop.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/loading-bar.css","path":"css/loading-bar.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/loading-stroke-feather.css","path":"css/loading-stroke-feather.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/avator.jpg","path":"img/avator.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/banner.jpeg","path":"img/banner.jpeg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/butterfly-icon.png","path":"img/butterfly-icon.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/error-page.png","path":"img/error-page.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/favi.png","path":"img/favi.png","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/css/all.min.css","path":"custom/css/all.min.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/css/fancybox.min.css","path":"custom/css/fancybox.min.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/css/heoMainColor.css","path":"custom/css/heoMainColor.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/css/poem.css","path":"custom/css/poem.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/css/share.min.css","path":"custom/css/share.min.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/css/waline.min.css","path":"custom/css/waline.min.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/fonts/fonts.css","path":"custom/fonts/fonts.css","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/fonts/iconfont.woff","path":"custom/fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/activate-power-mode.min.js","path":"custom/js/activate-power-mode.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/algoliasearch-lite.umd.min.js","path":"custom/js/algoliasearch-lite.umd.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/base64.min.js","path":"custom/js/base64.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/busuanzi.pure.mini.js","path":"custom/js/busuanzi.pure.mini.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/canvas-fluttering-ribbon.min.js","path":"custom/js/canvas-fluttering-ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/canvas-ribbon.min.js","path":"custom/js/canvas-ribbon.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/click_heart.min.js","path":"custom/js/click_heart.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/click-show-text.min.js","path":"custom/js/click-show-text.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/fancybox.umd.min.js","path":"custom/js/fancybox.umd.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/fireworks.min.js","path":"custom/js/fireworks.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/jinrishici.js","path":"custom/js/jinrishici.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/jquery.js","path":"custom/js/jquery.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/lazyload.iife.min.js","path":"custom/js/lazyload.iife.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/location.js","path":"custom/js/location.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/medium-zoom.min.js","path":"custom/js/medium-zoom.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/owo.json","path":"custom/js/owo.json","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/pace.min.js","path":"custom/js/pace.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/prism.js","path":"custom/js/prism.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/snow.js","path":"custom/js/snow.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/social-share.min.js","path":"custom/js/social-share.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/twikoo.all.min.js","path":"custom/js/twikoo.all.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/typed.umd.min.js","path":"custom/js/typed.umd.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/js/waline.min.js","path":"custom/js/waline.min.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/webfonts/UnidreamLED.ttf","path":"custom/webfonts/UnidreamLED.ttf","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/webfonts/fa-regular-400.woff2","path":"custom/webfonts/fa-regular-400.woff2","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/webfonts/fa-brands-400.woff2","path":"custom/webfonts/fa-brands-400.woff2","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/webfonts/fa-solid-900.woff2","path":"custom/webfonts/fa-solid-900.woff2","modified":0,"renderable":1},{"_id":"themes/butterfly/source/custom/webfonts/iconfont.woff","path":"custom/webfonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/0.jpg","path":"img/img/0.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/1.jpg","path":"img/img/1.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/10.jpg","path":"img/img/10.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/11.jpg","path":"img/img/11.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/12.jpg","path":"img/img/12.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/13.jpg","path":"img/img/13.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/14.jpg","path":"img/img/14.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/15.jpg","path":"img/img/15.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/16.jpg","path":"img/img/16.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/17.jpg","path":"img/img/17.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/18.jpg","path":"img/img/18.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/19.jpg","path":"img/img/19.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/2.jpg","path":"img/img/2.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/20.jpg","path":"img/img/20.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/3.jpg","path":"img/img/3.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/4.jpg","path":"img/img/4.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/5.jpg","path":"img/img/5.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/6.jpg","path":"img/img/6.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/7.jpg","path":"img/img/7.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/8.jpg","path":"img/img/8.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/img/img/9.jpg","path":"img/img/9.jpg","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":0,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/_data/applications.yml","hash":"5c72d00d9d7f7bee01b85dffa7e798122676c6dd","modified":1731297876226},{"_id":"source/_data/shuoshuo.yml","hash":"358e6c34ef1c4096562fde487da2a31beda1d40a","modified":1729676299446},{"_id":"source/_data/link.yml","hash":"6c3241c71d9ef369654883a26d25a29650a10b69","modified":1732330594134},{"_id":"source/_data/widget.yml","hash":"1288aab2b1c6fb1b967a3cd32c54653856d0e648","modified":1730804774239},{"_id":"source/_posts/Flume基础学习.md","hash":"8f481ac9afe6a640a7dde4ca4f3a0bc1f419c8c1","modified":1731926303379},{"_id":"source/_posts/Picgo+Typora+SM.MS图床配置.md","hash":"85c1f274da4d9958727a7b9f01c4cc381564c38f","modified":1731925859426},{"_id":"source/_posts/Oracle笔记.md","hash":"b6779073a98755b3598ec62f4c3c4175c574cb0e","modified":1731925389144},{"_id":"source/_posts/云部署Hexo和Certbot申请.md","hash":"f2cbc943268beb4cd49ae59a4a16d962984c5cff","modified":1731926569709},{"_id":"source/about/index.md","hash":"2534a3e779b4b34b77de9a240289ff599173942d","modified":1731633275878},{"_id":"source/addlink/index.md","hash":"3183fd89be1d3c44a5a74efc567022c20fd521bf","modified":1731639885860},{"_id":"source/applications/index.md","hash":"16157d934cadb44b95a7f1b482703d782ddbd797","modified":1731389334469},{"_id":"source/friend/index.md","hash":"fa2f1bd09a7808b4ef2a619589b09f9bac6bdb82","modified":1732341191112},{"_id":"source/categories/index.md","hash":"905aaa6ab2101a38db03bf494c6288823c588a31","modified":1729770161249},{"_id":"source/memos/index.md","hash":"1d9ff79bed6f0822418014798c2c11d16a38a5fa","modified":1731406474363},{"_id":"source/images/favi.png","hash":"5c8d1dce50d2344060fee408bde517d5b3a660db","modified":1716351717562},{"_id":"source/link/index.md","hash":"7cfc6d4aafbabf65bc54dbafb62dd95266f904a3","modified":1729770176963},{"_id":"source/messages/index.md","hash":"94e9ee853c297e013f96f36c0c012cc960b7b8f6","modified":1730953318401},{"_id":"source/images/avator.jpg","hash":"6d909b8bec3f138090fe8087d748aae5046abffa","modified":1729336833711},{"_id":"source/tags/index.md","hash":"55aff447e71e48e314366bbfc91ae83b68cb7884","modified":1729770000145},{"_id":"source/movie/index.md","hash":"acebb21932431472ce67e7258fbd106c130d704c","modified":1731927162667},{"_id":"source/timeline/index.md","hash":"404a15a12516e7a7279c7e335ae561952413fe5a","modified":1730861526997},{"_id":"themes/butterfly/source/css/barber-shop.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216900},{"_id":"themes/butterfly/source/custom/css/waline.min.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216904},{"_id":"themes/butterfly/source/custom/fonts/iconfont.woff","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216950},{"_id":"themes/butterfly/source/custom/js/activate-power-mode.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216911},{"_id":"themes/butterfly/source/custom/js/canvas-fluttering-ribbon.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216908},{"_id":"themes/butterfly/source/custom/js/canvas-ribbon.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216917},{"_id":"themes/butterfly/source/custom/js/lazyload.iife.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216914},{"_id":"themes/butterfly/source/custom/webfonts/UnidreamLED.ttf","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216939},{"_id":"themes/butterfly/source/custom/js/waline.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216897},{"_id":"themes/butterfly/source/custom/webfonts/fa-regular-400.woff2","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216942},{"_id":"themes/butterfly/source/custom/webfonts/fa-brands-400.woff2","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216928},{"_id":"themes/butterfly/source/custom/webfonts/fa-solid-900.woff2","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216924},{"_id":"themes/butterfly/source/custom/webfonts/iconfont.woff","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1731044216932},{"_id":"themes/butterfly/_config.yml","hash":"26b57cec7e7178c368308ef6c8e5673f7c16e44f","modified":1731044219503},{"_id":"themes/butterfly/package.json","hash":"0bf01e3f1834f98589beda5549358d8f435dd025","modified":1731044213696},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1729658313103},{"_id":"themes/butterfly/plugins.yml","hash":"8029d29d3f618f341a981ff154d1af52f24655ce","modified":1732288789281},{"_id":"themes/butterfly/README_CN.md","hash":"1c711ba472f83b539434d37e6cd34168b96c6072","modified":1729658313104},{"_id":"themes/butterfly/README.md","hash":"14986f184ddbd5094bcc6cdd97597ac5e6f45283","modified":1729658313104},{"_id":"themes/butterfly/.github/FUNDING.yml","hash":"3b572099a992e30267f5fe4cd3c582ff7ac9f083","modified":1729658313099},{"_id":"themes/butterfly/languages/default.yml","hash":"a2c938b1ef69195aec10c90dc7d1871953548e01","modified":1729658313105},{"_id":"themes/butterfly/languages/en.yml","hash":"a2c938b1ef69195aec10c90dc7d1871953548e01","modified":1729658313106},{"_id":"themes/butterfly/languages/ja.yml","hash":"a281d3cc3e117e90597b783dc5569dba3976d2eb","modified":1729658313107},{"_id":"themes/butterfly/languages/ko.yml","hash":"c7d861c58f204f47a5b4d6e118e1f1e8fb8a852f","modified":1729658313107},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"e0bf36edf18cf3380b900be7528b536252990c26","modified":1729658313108},{"_id":"themes/butterfly/languages/zh-HK.yml","hash":"bac3063ad2892be232f7d91361c28585a3cc7eb5","modified":1729658313108},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"bd7ee35aa30964493d2729ef105bb86331b096c3","modified":1729658313109},{"_id":"themes/butterfly/layout/archive.pug","hash":"bc77220dfc269b8faad0930e1a4142ebf68165e5","modified":1729658313110},{"_id":"themes/butterfly/layout/category.pug","hash":"a7e9805a781e34e38d27462e6ce2a5821c34bb9f","modified":1729658313111},{"_id":"themes/butterfly/layout/index.pug","hash":"a93004cc8ec8050df603d32a6e6e02cd96fd9875","modified":1729658313180},{"_id":"themes/butterfly/layout/page.pug","hash":"7ebd0dc4eb2aea32069afe31ede1d16036412655","modified":1731580132314},{"_id":"themes/butterfly/layout/post.pug","hash":"747dd6bda1b33268017e81beea9ed0035d5e628b","modified":1731044213696},{"_id":"themes/butterfly/layout/tag.pug","hash":"ca5333bd262cb58c195c844b593a0eed0c721766","modified":1729658313181},{"_id":"themes/butterfly/scripts/friend-json-generator.js","hash":"bc4892279d01b5bb7ca702707123598e4b209c8c","modified":1732335033632},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1729658313102},{"_id":"themes/butterfly/.github/workflows/stale.yml","hash":"4040c76547e270aaf184e9b219a44ca41bbb1b9f","modified":1729658313102},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"10ce05c8dbde09f53bdabe40b5388de9ccc71a31","modified":1729658313100},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"63ad2249ad09fb3fe21bd5ff9adefb304a7ab24a","modified":1729658313101},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1729658313101},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"875f6710d2b286461d13df349fff82c9f8ee501e","modified":1729658313112},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"a32ae10f48f6ca013811c69c718e676d7369ea1b","modified":1732249860791},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"161ba6f4c6095f6b02639a3253a3d0d60bd05dfc","modified":1731044219439},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"f05e0f3bdfd34e41c1e5615672cf54864fd9c9e5","modified":1729658313122},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"10d834891758e25becb005fd69ef2bb602c6ea79","modified":1729658313131},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"d7031886a76503f4f34ca35df8fd504e298e56b1","modified":1731412265988},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"f28e1f91551a855c1f0deadf9d9293c46731f8ea","modified":1729658313133},{"_id":"themes/butterfly/scripts/common/postDesc.js","hash":"272613a71d16f0de6dac883be4839259f774be76","modified":1729658313183},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"d588ed376929f8350ed8ba46e9c6f7deb3a403fc","modified":1731044219413},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"0df22d7dbfa766a65cb6032a1f003348f4307cfe","modified":1729658313222},{"_id":"themes/butterfly/scripts/events/404.js","hash":"039fc75f363d79669b0b2177d929cdff6f2ef7a4","modified":1729658313184},{"_id":"themes/butterfly/scripts/events/cdn.js","hash":"b36bbea2fef1d65b9c5687b8029ed46d131329e3","modified":1732076536728},{"_id":"themes/butterfly/scripts/events/comment.js","hash":"7b1b16e1e8e08245a345764616956be50487eb53","modified":1731044213696},{"_id":"themes/butterfly/scripts/events/init.js","hash":"ce68e84a9ccfcf91100befbaa9afc392a0cd93bb","modified":1729658313185},{"_id":"themes/butterfly/scripts/events/merge_config.js","hash":"c01ebae2480196857462df99caac4481f211048d","modified":1729658313186},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"bac639c404588ea62e601ef0bcd368c3bd0119af","modified":1729658313220},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"f59e10305fef59ea3e62a7395106c0927582879d","modified":1729658313220},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"7a293094ced8b8b73611929962d8974367a6d2d9","modified":1729658313222},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"0cdf781a8c14d7b50d309e69f282ec7b178804bb","modified":1729658313223},{"_id":"themes/butterfly/scripts/helpers/getArchiveLength.js","hash":"bf77635e920eaf52bceebc95f87c7c87a7ca8038","modified":1729658313223},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"088493dca2a157b49d232db482ef916207240b46","modified":1731044213697},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"950b7d0966429bf0f9e6c5e1161e50e545e320b4","modified":1729658313225},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"1c0ff289b44e7a65848c6f28b89bf020186eee11","modified":1731044213698},{"_id":"themes/butterfly/scripts/helpers/series.js","hash":"45367c4ce827329867dbcc750ec125da9ccb2cfd","modified":1729658313226},{"_id":"themes/butterfly/scripts/tag/applications.js","hash":"e6208e25d0322c7b513133b568bc21e34f5893f6","modified":1731312275543},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"2f44e1b3ccd170b256eae178299d6fa933a8d490","modified":1729658313226},{"_id":"themes/butterfly/scripts/tag/chartjs.js","hash":"195ba802d7e8406c155124a9c939a2318f82938b","modified":1729658313226},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"25eefe10189caf3910a0e5d5b2f2043ae9255531","modified":1729658313226},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"3aeda1e8ce2e2e29ab106b4d5140a07026a7411a","modified":1731044213698},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"5d08c3552f7d3c80a724ca628bff66321abe2e5a","modified":1729658313227},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"c863d2732ce4bdc084f2d0db92f50f80328c1007","modified":1729658313228},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"cf0bc17d0180231167cc6aa8a00fc64f198cb9f9","modified":1729658313229},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"289f85847c58f0b2b7d98a68e370a2896edb8949","modified":1729658313229},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"e68d8d21f3a86e3646907a3685550ee20e8d4a9f","modified":1729658313230},{"_id":"themes/butterfly/scripts/tag/score.js","hash":"35d54adc92e717cc32e13515122b025fd1a98ea2","modified":1729658313230},{"_id":"themes/butterfly/scripts/tag/series.js","hash":"db53997ed81a4df7d35f5e835a8634ddce3d9774","modified":1731044219336},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"3c486b149e28edd1a06843f05a5c355000991b82","modified":1729658313231},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"514b7df58d1197a9224dc8981cbb9a4a9a6429b5","modified":1729658313231},{"_id":"themes/butterfly/source/css/index.styl","hash":"b13d96924a5534bff91d75566b196ac87b4fac22","modified":1731044213030},{"_id":"themes/butterfly/source/css/loading-stroke-feather.css","hash":"1c9984a14b4e10b0726e64ed6729609ad47fab34","modified":1732355211001},{"_id":"themes/butterfly/source/css/var.styl","hash":"a5b7497ca871742070cf16b09706c9e9cf27ec2d","modified":1729658313259},{"_id":"themes/butterfly/source/css/loading-bar.css","hash":"6d60f89586126bc19e030cd1def0ba4ca2421f1b","modified":1730286100481},{"_id":"themes/butterfly/source/img/avator.jpg","hash":"6d909b8bec3f138090fe8087d748aae5046abffa","modified":1729336833711},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1729658313261},{"_id":"themes/butterfly/source/js/main.js","hash":"110f2787fa3906aff505a88efd38a5e85f7a9e34","modified":1731044270771},{"_id":"themes/butterfly/source/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1729658313266},{"_id":"themes/butterfly/source/js/utils.js","hash":"48637ad8e405306772b93837f33400bde1055819","modified":1731044213710},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"940a4c2472924237055a34a51606c8b49cd51a21","modified":1729658313114},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"f3e0cf1e7f889f622338870b24b790e55de8d44e","modified":1729658313114},{"_id":"themes/butterfly/source/img/favi.png","hash":"5c8d1dce50d2344060fee408bde517d5b3a660db","modified":1716351717562},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"9b8a1d2715a0eee3c907212792155ad5946ccf12","modified":1731044213683},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"1d586ac035ca9497ed12c2cfa47e977678378d08","modified":1731044213684},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1729658313116},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1729658313268},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"a7c929b90ae52b78b39b1728e3ab0e3db1cb7b9a","modified":1729658313117},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"83ed05ef1e39f2ee70c3fba2cf96e488d8ffec66","modified":1729658313117},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"efbfedd864c3c9a374269cd9648ee80b0b2ace61","modified":1731044217107},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1729658313118},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"733184f88e3a586a5fcc9d193ad500556b6c8eed","modified":1729658313120},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"6079a905222f09a5f77042635b8b7eacb60256bd","modified":1732362632581},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"7d799c4694adb6e265e3f4b975d7f7f6a7021a17","modified":1729658313121},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"e2d31e0f450ad42c47f7ee96375799342bf2f19b","modified":1729658313121},{"_id":"themes/butterfly/layout/includes/loading/fullpage-loading.pug","hash":"de42be8c952e65fdf09912e872edbe4bedd7133a","modified":1732356027691},{"_id":"themes/butterfly/layout/includes/loading/pace.pug","hash":"9d2d539555bab495959b9df734ed5c43a9f9e5a9","modified":1729658313124},{"_id":"themes/butterfly/layout/includes/loading/index.pug","hash":"d76ce71ba106e350670c021a3dcae57547d01830","modified":1729658313124},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"ef7afe0df7a3746744ac8185da7163b7406120ca","modified":1729658313125},{"_id":"themes/butterfly/layout/includes/page/404.pug","hash":"15d32c511e4875066fcbe9cb84c3ada07b5a7c41","modified":1729658313126},{"_id":"themes/butterfly/layout/includes/mixins/indexPostUI.pug","hash":"7c3b5bb3a731f075667430e97bb51d8822105488","modified":1729658313126},{"_id":"themes/butterfly/layout/includes/page/addlink.pug","hash":"cf2b719d6deeba1d22270d31fc1f4fd6dc63a64b","modified":1731892522320},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"fdb5482d04a75bd79946ad1ed291d281d0e9362d","modified":1729658313271},{"_id":"themes/butterfly/layout/includes/page/application.pug","hash":"63bffc6d64c487febb468136d374edf6faeb33df","modified":1732266590529},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1729658313127},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"efb40388e37cca0b5e7c3c66e811a42f8d32c910","modified":1731044213685},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"848efa49cf25c37afcd6233d0021281cd06c0f40","modified":1731044213685},{"_id":"themes/butterfly/layout/includes/page/memos.pug","hash":"5320562c378bd182275974eb2f8c2704ad013653","modified":1732284359201},{"_id":"themes/butterfly/layout/includes/page/messages.pug","hash":"e1fa61d6210dcbf1e0caee7d32e2b14a4697615a","modified":1731044219384},{"_id":"themes/butterfly/layout/includes/page/shuoshuo.pug","hash":"b2423cfc57a5e3a0e1112ff7c18d5c5c720d89d5","modified":1731044213686},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"79ad31eb72a9e14007770b18a426406a25315b38","modified":1729658313130},{"_id":"themes/butterfly/layout/includes/post/outdate-notice.pug","hash":"b7ce9484bc5c97ea6154f0b78fb9b8951fafedbd","modified":1731044213687},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"6ad86be3523fdea62ac799118e53792e1f4f883c","modified":1731409133004},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"db92f25ff3fd061882f81bf74ca560ff66983a0c","modified":1729658313132},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"ed79fef5b5025415ea12eaed970f3fe7f6ef9596","modified":1729658313135},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"43014bfc63583d3ee8808d526dd165848c0ed52f","modified":1729658313154},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"e5b5eb5833d5c324c3d29164235313800d5dedba","modified":1729658313163},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"01ef6240a136c0df4478fabd3844b21cda970d16","modified":1729658313164},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"88f979a0b1a19eeb0db229247833bf9c6865c3b9","modified":1729658313164},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"a11455e294d32d2795eb1ee9d54a2906f064a1cb","modified":1729658313170},{"_id":"themes/butterfly/layout/includes/third-party/umami_analytics.pug","hash":"4a309a47274c218d65f3a1f6462a21bd6c2f839d","modified":1729658313171},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1729658313172},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1729658313172},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1729658313173},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"a22caf6c81bab67780182ccba982ebd7ab1a8a5a","modified":1729658313173},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1729658313174},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1729658313174},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"d8753772889b5d0f4d15639ed6af5e91e53b1d03","modified":1729658313175},{"_id":"themes/butterfly/layout/includes/widget/card_poem.pug","hash":"a1d6943b2acf4e4319efcf714372d79b763f3599","modified":1732331711493},{"_id":"themes/butterfly/layout/includes/widget/card_post_series.pug","hash":"e0bb72fa0ce15964b11b8fe421cae3432394e35f","modified":1729658313176},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"d48d77af1670bd568d784794408bf524a448bfcc","modified":1729658313176},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"bb842d2aa6469d65bf06af1372f0a19a9e4ef44c","modified":1729658313177},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"842b772a387b576550fa127030e1c2e9bf65716d","modified":1729658313177},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1729658313178},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"0144919df09c62c9c8526d985c7465eb92ad6f5c","modified":1729658313178},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"59d846de00cf868d54e9ac755ef1d6a443bdb86c","modified":1731044219326},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"d12340a7df4601b9a23f070e16645861aeb3bb0a","modified":1729658313233},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"814053dd7499284a5c185382eb43c8f8db25baf2","modified":1730283882312},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"67062d597408068e4a59e95851e98fed34b745da","modified":1731044213699},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"a51edfd3e499e7d38c32241c40e8e4d371efca73","modified":1729658313239},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"ba174889e770ae9f6683379b9eae9d8c94253080","modified":1729658313240},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"fbfce4d67cacd1df22fb73d89d008693f59d9d91","modified":1729658313241},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"4cc02bcbaa4a1933a82a9ea57a603fe2d059fc77","modified":1729658313241},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"d7b988d8588207086670f39aa49fce442c429f7a","modified":1729658313241},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"28e79a16ec012fcdac91bb874d40808d73d4fe0e","modified":1732362555094},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"672bad31b744703d20fb67d7ab7ab882c5ff37b3","modified":1732356210182},{"_id":"themes/butterfly/source/css/_layout/loading.styl.bak","hash":"f0b01bbf321c2c24fdccaee367dd9fd448031a72","modified":1729658313243},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"4c64cd9225437cbb83f411dc7531527b33730923","modified":1729658313243},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"5ca41737919c5576b12660ad47c2984ea9f02b14","modified":1731410161469},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"ef8e8549fe7ad4b99793844a93b4a89f77f417d5","modified":1729658313244},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"d9cdf564a822a585e67fd5bac8573ba87eeb3743","modified":1729658313244},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"a0f5835f04358122e8b1d38dd3e8da09a1b5b431","modified":1729658313245},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"084dc4dfb41f55e237a9d6cf8c2f5dba729b83be","modified":1729658313245},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"0af7c8754f04bdd9a02a14d880774753bd2e35ee","modified":1731044213703},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"93fe5a7ed83ceb11b888f946be94cf1ee7648f8c","modified":1731044213703},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"ad66212554468b7067590308ed4cf40524fea662","modified":1731044213704},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"205ccc7d0ec6ce1193b46bc0c9ce0385594581fb","modified":1729658313248},{"_id":"themes/butterfly/source/css/_page/addlink.styl","hash":"1dfe6c36bc65333b58f7feb0d27e269217114c8c","modified":1731829183977},{"_id":"themes/butterfly/source/css/_page/applications.styl","hash":"d349ce00579c7da6ec5c66a796fabdc7efebfd0b","modified":1731847688272},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"5abe5480d83ff8b452a780a484d50a44091475bf","modified":1729658313248},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"c4cda7b0c99015df29ce00fdfddd2f7679653754","modified":1729658313248},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"dcff804c4c237e1e908481b44c1ac4e39ac0da34","modified":1729658313249},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"1f8d715faf3b91b53426e38195c0920afb3bfa1c","modified":1731044213705},{"_id":"themes/butterfly/source/css/_page/memos.styl","hash":"7cdaacaa5ff64ec87d913000d9b4fec6e3b53bac","modified":1732281480564},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"992d192db7d1c96e995b85ed11c20c571d33fbad","modified":1729658313250},{"_id":"themes/butterfly/source/css/_page/messages.styl","hash":"8e53107380a386ea9d9c375429801fa1ba5ad1bb","modified":1730888460718},{"_id":"themes/butterfly/source/css/_page/movie.styl","hash":"ec7fa0d3ec42db93f3284a031525c1ec967f55ff","modified":1731044219348},{"_id":"themes/butterfly/source/css/_page/shuoshuo.styl","hash":"79bb1d9a27822ed5675d1e52f5dbd0e2f5d5010a","modified":1731044213705},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"7543bb688876a946538d66b991c71b94b5216277","modified":1729658313251},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"d8a8275a68a1421c4c09b604cf78bea16c1d0463","modified":1729658313252},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"56b2299073848efec4839b5d43155c829726d5ee","modified":1731410899764},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"de8437a058a315d14d7e7034066f095b7b3ed4b4","modified":1731044213706},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"30d1f809efd252ed0233d96d4374efd2b01d2292","modified":1731044213707},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"d27dbccaf3de1c9158d19e4fd49a25953cb5778d","modified":1729658313255},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1729658313254},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"3be8d0a75e7cc96548667cae0cb6a474279bd0b5","modified":1731044213707},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"216f52fefc2274b542b549d8470503e6f1a308fb","modified":1729658313256},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"1f2b86df86df81c3a59377b29102314ffc73dfa6","modified":1729658313253},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"4929382bd60788d34752a66e2fe764ef797a72a0","modified":1729658313256},{"_id":"themes/butterfly/source/css/_tags/series.styl","hash":"0657169849bc4bf4d93b5492ade040c8f58c1901","modified":1731044213708},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"dfbce718d528dd241664ff8fd28b37da92c29cef","modified":1731044213708},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"e846ddaef494d46cdfa2379deacfe74fa1cc5264","modified":1731044213709},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1729658313259},{"_id":"themes/butterfly/source/custom/css/poem.css","hash":"4dbc7b29455a8ea93ed288a19f1e23966d63044d","modified":1732331738518},{"_id":"themes/butterfly/source/custom/css/fancybox.min.css","hash":"05474abe725b0160aef8fe8c7be326b02bb622ce","modified":1731044219315},{"_id":"themes/butterfly/source/custom/css/share.min.css","hash":"7126de5cec8371e580b7b1f22512da0985cc39e5","modified":1731044217082},{"_id":"themes/butterfly/source/custom/css/heoMainColor.css","hash":"1d82015d3e1a8ba0b1680d65f27cee71bddaf6a6","modified":1731044218974},{"_id":"themes/butterfly/source/custom/fonts/fonts.css","hash":"448176660b4a6893f4683a0dedeae278f5811664","modified":1732340885286},{"_id":"themes/butterfly/source/custom/js/algoliasearch-lite.umd.min.js","hash":"4222a4d145c2f4f2747689948a515a3c352b6df2","modified":1732288789276},{"_id":"themes/butterfly/source/custom/css/all.min.css","hash":"055ebba7cf3130891c684d8c85815181a987e670","modified":1731044219469},{"_id":"themes/butterfly/source/custom/js/base64.min.js","hash":"418c0ca911bf937cfcff0ee01917b23b15e00536","modified":1731734702671},{"_id":"themes/butterfly/source/custom/js/busuanzi.pure.mini.js","hash":"4950dd342a4872ea68dbde31d511a5b596ff2525","modified":1731044219449},{"_id":"themes/butterfly/source/custom/js/click_heart.min.js","hash":"8f49831b7e7ad9937ba88cf7bd06a0997348126e","modified":1731044219396},{"_id":"themes/butterfly/source/custom/js/fireworks.min.js","hash":"99eae3fdd60a27f471b58bf03f89745afe48da59","modified":1731044218952},{"_id":"themes/butterfly/source/custom/js/click-show-text.min.js","hash":"5ed559540bf1dc77d7e3c5034b3dec08455dbd65","modified":1731044219390},{"_id":"themes/butterfly/source/custom/js/jinrishici.js","hash":"38c00c795e5c64fb89ccf818e68891d9e3c742b9","modified":1731044219298},{"_id":"themes/butterfly/source/custom/js/owo.json","hash":"0e7edf98616e354669f9a8072e4692a60fcaaa51","modified":1732073864964},{"_id":"themes/butterfly/source/custom/js/prism.js","hash":"0b2ae45f908c13aba7a5239d2378bb2ed51a381c","modified":1732073982359},{"_id":"themes/butterfly/source/custom/js/location.js","hash":"5c0e5627f49e654b818ee74c751fb44a46a1cc5a","modified":1732074620635},{"_id":"themes/butterfly/source/custom/js/snow.js","hash":"d4aa90ecbb7b814944559c221981d11b96b61e4b","modified":1731901716276},{"_id":"themes/butterfly/source/custom/js/medium-zoom.min.js","hash":"7caba791202d75a71bdee27c1fb7c0cf2d29ab8c","modified":1731044219430},{"_id":"themes/butterfly/source/custom/js/social-share.min.js","hash":"ba635a17a9d9d132369f9fe4b1fbcaf001ea6ac9","modified":1731044217070},{"_id":"themes/butterfly/source/custom/js/typed.umd.min.js","hash":"c0d45e2267b8e5600227b447b405b55019555c5a","modified":1731044219288},{"_id":"themes/butterfly/source/custom/js/pace.min.js","hash":"21f2794328fbe45a6091567a16591a5a10451499","modified":1731044218941},{"_id":"themes/butterfly/source/img/img/0.jpg","hash":"281f908d92fa2873031f839239ec66d3abc3d1cf","modified":1731463657128},{"_id":"themes/butterfly/source/img/img/1.jpg","hash":"d07ec7e73f0ef76e1b7bad19e86d236ea30b3042","modified":1731463674369},{"_id":"themes/butterfly/source/img/img/10.jpg","hash":"d55d851644d5a75c0e0e33dfaab7eeb559e0871e","modified":1731464820079},{"_id":"themes/butterfly/source/img/img/11.jpg","hash":"f9ca7fb1f694e8e96ba225dc445981650e76d6d1","modified":1731464858860},{"_id":"themes/butterfly/source/img/img/12.jpg","hash":"ba486c64607fa54f689cb85a1d7454695a2db960","modified":1731464868743},{"_id":"themes/butterfly/source/img/img/13.jpg","hash":"2d4bc29d68a7581ebf9e0290ed2aee2d8337fec3","modified":1731464878028},{"_id":"themes/butterfly/source/img/img/15.jpg","hash":"d53608593b71d6afcc37d1f6ff3fcfb9a3698e6c","modified":1731464895831},{"_id":"themes/butterfly/source/img/img/14.jpg","hash":"9a83aa4dbff7432ea31075ace4683bf742b67475","modified":1731464888435},{"_id":"themes/butterfly/source/img/img/16.jpg","hash":"00d312f14b2af8b742102a5df286f4f11e6a579b","modified":1731464906209},{"_id":"themes/butterfly/source/img/img/2.jpg","hash":"8bab280bbd993ad7f5611d4370ffe749ae3a1e21","modified":1731464697899},{"_id":"themes/butterfly/source/img/img/17.jpg","hash":"c70984f81fcf4d08432dda8917de76b506308290","modified":1731464915578},{"_id":"themes/butterfly/source/img/img/20.jpg","hash":"79c2eb5651e44ab96b6ac671dd479658207827bf","modified":1731464943905},{"_id":"themes/butterfly/source/img/img/18.jpg","hash":"21a5f6e5df27fff3190b9fef3d4646c370c8f025","modified":1731464924959},{"_id":"themes/butterfly/source/img/img/4.jpg","hash":"29f07464ebb3fc1efbe5a880b372b2f3302e0e79","modified":1731464730926},{"_id":"themes/butterfly/source/img/img/19.jpg","hash":"4e105cdf669cc27cf8c372eb419e6a0368f59a9f","modified":1731464934358},{"_id":"themes/butterfly/source/img/img/3.jpg","hash":"8d09ef8c3e95a5e98e586593adbbcfeda1adaab9","modified":1731464716423},{"_id":"themes/butterfly/source/img/img/6.jpg","hash":"ca6ab55a48dc94d14c4a5813fadea2607d965173","modified":1731464761277},{"_id":"themes/butterfly/source/img/img/8.jpg","hash":"4bbdddf14868e424b6d899ae4cc5797fac5a7b5a","modified":1731464790912},{"_id":"themes/butterfly/source/img/img/7.jpg","hash":"8d4499c59c9420be23022d6af3911ef3eecafb30","modified":1731464780740},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"58d1a3e57516771f7ed2f17c889ecf5a00c07907","modified":1732288064923},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/abcjs.pug","hash":"00b4073dbe0687a80e6d58c104c6f59ec01a84fd","modified":1729658313134},{"_id":"themes/butterfly/source/img/img/5.jpg","hash":"e732af75c0595bf908306ee8f51996ef8a5afbe8","modified":1731464743878},{"_id":"themes/butterfly/layout/includes/third-party/abcjs/index.pug","hash":"d59d43a8caad801222608a341f6845c6f8d1b265","modified":1729658313134},{"_id":"themes/butterfly/source/img/img/9.jpg","hash":"9952d20708b68aaccc975125d2ebedbf84d2bb5c","modified":1731464809187},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/artalk.pug","hash":"b03ee8625149191f9d5d057bbc9824b68d8dd0c4","modified":1729658313136},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"d6fff5a7f84c8b09f282f9ddc0020a68a8aac9ea","modified":1729658313136},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"cbfbcf34a24d21ba2b21cf9eedb76f4c3c563c5a","modified":1729658313137},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"846cabae287ae31b3bbfac3da022475713dd5ecc","modified":1729658313137},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/remark42.pug","hash":"716dc463fe4ef5112e7018ed60804125fdfa5cad","modified":1729658313138},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"b5db4203a1392385838c73549ddeae0a4be67eba","modified":1729658313139},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"7884883ec15792f7e54daacb3c62b851dde2b66a","modified":1729658313140},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"fd2320ee25507bb8ef49f932c2d170586b44ea4d","modified":1729658313141},{"_id":"themes/butterfly/layout/includes/third-party/comments/artalk.pug","hash":"3dea5867237c10a1ea2c0d31f41461f266fc6db8","modified":1731044213687},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"1514dd857900160dc20ee7c440e332bc0192a67d","modified":1731044213688},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"93568e60016a26c3d33701d0cbaa1dcff8b317db","modified":1731044213689},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"82ff21ff50a268c77dd4a13a37dca7b99f817e52","modified":1731044213690},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"dabf6a1784c18b870174ad2bb741877d0bef49ff","modified":1731044213689},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"09c304041972a5a5a4697e0694bee2ac3d20e399","modified":1731044213691},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"db6713d2b90eb8183f86ac92c26761a8501c0ddb","modified":1729658313148},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"3abbaaa4ea575c45b3cebffd40bad1acc6ffce84","modified":1729658313149},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"6ce7e93223ba7f619c0314bf7dee6fb14065f28c","modified":1731044213691},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"a2b783230a9143de69004cfc914d9f55e6fc1660","modified":1729658313271},{"_id":"themes/butterfly/layout/includes/third-party/comments/remark42.pug","hash":"082515896cbbec4757d3dcfdc6370d097d9ea8cb","modified":1731044213692},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"f3a72c31cc2a0ee1ee799b17e147f958b440d9ea","modified":1732076590405},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"f1ef673275dfab087fd465c5a5d89d1e3ea47024","modified":1731044213693},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"f934f434c41d5ec6304e1812eeeb5555ee7b3c0f","modified":1731044213694},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"23d97d4334d741daa76886776f6b33016efc0d6e","modified":1729658313141},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"8d7f62dd8d057046bb55b411c16022802e69429c","modified":1729658313142},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"e8438941085def0591a72fc9b0d705dbf107f54f","modified":1729658313143},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"6d41b60f48f94516e17c5fc20dc027db3213a089","modified":1729658313144},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"fb39a928512f13fa8bf376e8c10f37699a571bfe","modified":1731044213694},{"_id":"themes/butterfly/layout/includes/third-party/math/chartjs.pug","hash":"7650f6584fde8f7f9d1ba7057dc2e6befc1cd9a8","modified":1729658313155},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"451391d5367cae3f89efce2c37d431c5434b127a","modified":1729658313157},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"b83db9fa64d42a0bfd97efb660e09be3f166a144","modified":1729658313156},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"ca2fc5928ca292f29fd8333c73733344994096fb","modified":1729658313157},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/common.pug","hash":"0d730894f537e63c427b24535303e3378c6aea90","modified":1732249222113},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"dd7aef682b3164d45aa5bb56c646e549a903537a","modified":1729658313159},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"f8b65460c399973090c1fb7ab81e3708c252e7cc","modified":1729658313161},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/artalk.pug","hash":"b6f7ddce953770660370dc147828151a63d208de","modified":1729658313158},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"1a9e0239add2759b78511ea51b7a6630b2f75095","modified":1729658313156},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"adde60871bb8cf1a307ba822e8f602884a4e5f31","modified":1729658313160},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/remark42.pug","hash":"20063e72c61a512ff0beab6a8b308fba42258532","modified":1731044213695},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"81a7cfd0485bb77a6ea857208377c998cd1eceec","modified":1732248975889},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"ba16e30bd223f7312e6a01415665f27f9c98c26d","modified":1729658313162},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"90338ac4cd114d324fe1caaaeea8be9ca05d6a46","modified":1729658313165},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"f93269eed585ebe6328265d2dd6b171cefba08cf","modified":1729658313163},{"_id":"themes/butterfly/layout/includes/third-party/search/docsearch.pug","hash":"013756ff3363344987cc00fc9bd833baf193c341","modified":1729658313166},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"f8557548d2ad8dd149c562193991c6c6cda02415","modified":1729658313166},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"2622b4cf9189fa23e4a422aaf9ef272e4f2c6137","modified":1729658313167},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1729658313167},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"e51e896ccb13900de38dc81cf44dc789e2418a12","modified":1729658313168},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"efef352c1d122409575386bf3894dce8e87032e2","modified":1729658313169},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"9f02598b5e4296aec6470639d4bac4c9ac46392e","modified":1729658313235},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"ef52ebf1e8e751a412f9456fdaeee7d88afd9a72","modified":1731044213700},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"1883c91d43bff10aae55122a21e0b064b6f5c9dd","modified":1731044213700},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"077ec530831be1d80e93da380406b9f5abd0918a","modified":1729658313237},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"de4bb5fc2dfca368b35e4c1109c92f7abc9e2245","modified":1731044213701},{"_id":"themes/butterfly/source/custom/js/jquery.js","hash":"f3f468ccf735476c87e3b49e274eb3752a884607","modified":1731734592010},{"_id":"themes/butterfly/source/custom/js/fancybox.umd.min.js","hash":"ed077f7dc675c1937ffbcf442ee9b7957dc5aaf6","modified":1731044219155},{"_id":"themes/butterfly/source/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1729658313264},{"_id":"themes/butterfly/source/img/banner.jpeg","hash":"a9ffeec20697da77e9c3e7b7c60110528579ae52","modified":1730286853293},{"_id":"themes/butterfly/source/custom/js/twikoo.all.min.js","hash":"808f1206e7625a0de601593eb6fe1217b1558717","modified":1732074341185},{"_id":"public/go.html","hash":"93382733c0b13a039675c25ad206dd0c425790e2","modified":1732356277202},{"_id":"public/search.xml","hash":"c6fb389f23e2b62f76eb63b4e4a8c69ca8b7999d","modified":1732356277202},{"_id":"public/rss.xml","hash":"69f36eead27a1d60ecc521fd889304d7876bba80","modified":1732356277202},{"_id":"public/random.html","hash":"d5a906cb5970bed178df5d7dfb16b7dfeba85714","modified":1732356277202},{"_id":"public/friend.json","hash":"f17b653dcbf996343e8886f2d9babfbe9c6bca24","modified":1732356277202},{"_id":"public/custom/fonts/iconfont.woff","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/custom/webfonts/UnidreamLED.ttf","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/custom/webfonts/fa-regular-400.woff2","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/custom/webfonts/fa-brands-400.woff2","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/custom/webfonts/fa-solid-900.woff2","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/custom/webfonts/iconfont.woff","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/404.html","hash":"0abd2a8c6b55225f717980c20463de90c5320cd2","modified":1732356277202},{"_id":"public/about/index.html","hash":"7bf1b51751f30225e0ae417f34399b58370d86d4","modified":1732356277202},{"_id":"public/addlink/index.html","hash":"532be12ea866f12002adb28bde42e6f874d7b9e9","modified":1732356277202},{"_id":"public/applications/index.html","hash":"67f1edb6612165e62bee365b397f60cb0fa71eba","modified":1732356277202},{"_id":"public/categories/index.html","hash":"087cbf5f422ebdc8783dd5bee0dff0625b09775a","modified":1732356277202},{"_id":"public/friend/index.html","hash":"fd79240ec453bfdba06b5fcf01eb24a18c179020","modified":1732356277202},{"_id":"public/link/index.html","hash":"5149a6738b2d9bad61f46dac5302e01d282d24fd","modified":1732356277202},{"_id":"public/memos/index.html","hash":"0f4aa59d1355ff612bdb9d79ab0d0ed0844a7ae5","modified":1732356277202},{"_id":"public/messages/index.html","hash":"4d0d37a4ba86187954f036494de9dddc9f021571","modified":1732356277202},{"_id":"public/movie/index.html","hash":"5678c028d354855b97c60bcfc831c8b5aa417984","modified":1732356277202},{"_id":"public/tags/index.html","hash":"d0767e9f3d991e8621d7b61adc25873210828dc1","modified":1732356277202},{"_id":"public/timeline/index.html","hash":"b26f4649cef0b512877ca754106e1b05dd3eae7a","modified":1732356277202},{"_id":"public/posts/b632734/index.html","hash":"660ef98885bfb85ab3273fb26f7b3bbfbce80339","modified":1732356277202},{"_id":"public/posts/1e46a8be/index.html","hash":"9f472f34483a19bb04736c66ea5206cae550571b","modified":1732356277202},{"_id":"public/posts/7b34242e/index.html","hash":"d887f945a3796622529a9b5e061ebaca2c3fb692","modified":1732356277202},{"_id":"public/posts/532806c/index.html","hash":"18fcc46c2a76c40bd8eb89a21f4acf131ee75c00","modified":1732356277202},{"_id":"public/archives/index.html","hash":"47272270d70a220d791c32c9f06f4a7e0431d501","modified":1732356277202},{"_id":"public/archives/2024/index.html","hash":"7068c32f7e698b91cbe1fe64e9a3401edfdc34fe","modified":1732356277202},{"_id":"public/archives/2024/10/index.html","hash":"9f18acb3bdaf66650b1c4ce5aef58ec5bfc3298c","modified":1732356277202},{"_id":"public/archives/2024/11/index.html","hash":"9eb329dc78d6e8ff9bea86d3ee04bef133f1060b","modified":1732356277202},{"_id":"public/categories/大数据/index.html","hash":"e7ade2bf8b7e7df59d2ce34c8405178d9dcf4397","modified":1732356277202},{"_id":"public/categories/数据库/index.html","hash":"b9e456be956dbba1b406684a70f3202f0bab2283","modified":1732356277202},{"_id":"public/categories/工具/index.html","hash":"1b8f7d25be636591ea219434d513214781643672","modified":1732356277202},{"_id":"public/categories/云服务/index.html","hash":"022c03d3054bc50aff714452eef57d4dd01fc1e0","modified":1732356277202},{"_id":"public/categories/大数据/数据采集/index.html","hash":"906b4a3f165e174a5c729750ba04706f166dbcdd","modified":1732356277202},{"_id":"public/index.html","hash":"370079fa9a554df35739f2477c4b5c88614986f0","modified":1732356277202},{"_id":"public/tags/工具/index.html","hash":"b25a48d442e50fa5c632bda644971f76a2dde57a","modified":1732356277202},{"_id":"public/tags/Flume/index.html","hash":"83e87a50509c6253a8cb1c7bd7ec16fa4cf4f9a6","modified":1732356277202},{"_id":"public/tags/数据采集/index.html","hash":"ac99833ba5045295f790997bf6c4cd734b6ea7e4","modified":1732356277202},{"_id":"public/tags/分布式/index.html","hash":"b5804219f2b33d06557fa7e8122c7919edc44bfb","modified":1732356277202},{"_id":"public/tags/Oracle/index.html","hash":"d06220a3165a4b7736522035f0c4b8dec6bf3b54","modified":1732356277202},{"_id":"public/tags/关系型数据库/index.html","hash":"882dc0ef3c59fa91379f9a4c577d76942f063875","modified":1732356277202},{"_id":"public/tags/表/index.html","hash":"11e470ba4ecbed8249a9813acfeb30588db28ed5","modified":1732356277202},{"_id":"public/tags/视图/index.html","hash":"f0d9aef07ea9c76444a698a744dfc25020d3cde5","modified":1732356277202},{"_id":"public/tags/表空间/index.html","hash":"4179231f0dda0b918d45e5da86f5c342b6402323","modified":1732356277202},{"_id":"public/categories/工具/图床/index.html","hash":"8236791c51ad7f73ee7d6f8574d6a0d22f7dc6b1","modified":1732356277202},{"_id":"public/tags/序列/index.html","hash":"993ec232f95ee23988411d83c637f3930cbf235e","modified":1732356277202},{"_id":"public/tags/函数/index.html","hash":"6d0f4a119c34cbd00e5bf300dd77bdfd8d0b121e","modified":1732356277202},{"_id":"public/tags/索引/index.html","hash":"aa5521da1d28a473cad075f5c320528a29405d4e","modified":1732356277202},{"_id":"public/tags/触发器/index.html","hash":"dcb5145fbaceef9542731e54467adc2a16449278","modified":1732356277202},{"_id":"public/tags/存储函数/index.html","hash":"b0eab0c1cf5113cd34d7879f9fb982cebcafa5eb","modified":1732356277202},{"_id":"public/tags/存储过程/index.html","hash":"328042084221d0e17af0a55dbe9cbe23466b6eae","modified":1732356277202},{"_id":"public/tags/图床配置/index.html","hash":"a0758d2d803a99932b0a2a2a1dfa960767487528","modified":1732356277202},{"_id":"public/tags/Picgo/index.html","hash":"24ee2d2c254014ee103d22201981d7b12f1e9a09","modified":1732356277202},{"_id":"public/tags/云存储服务/index.html","hash":"06523c02821665aff34f75c47bac3600e089bdcf","modified":1732356277202},{"_id":"public/tags/hexo/index.html","hash":"c6eb42d0a5f89a7079a59f5f492b4516cf0a3011","modified":1732356277202},{"_id":"public/tags/云服务/index.html","hash":"1a8cc8827bab09a915123cc1a522f27b15f272e7","modified":1732356277202},{"_id":"public/images/avator.jpg","hash":"6d909b8bec3f138090fe8087d748aae5046abffa","modified":1732356277202},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1732356277202},{"_id":"public/images/favi.png","hash":"5c8d1dce50d2344060fee408bde517d5b3a660db","modified":1732356277202},{"_id":"public/img/avator.jpg","hash":"6d909b8bec3f138090fe8087d748aae5046abffa","modified":1732356277202},{"_id":"public/img/favi.png","hash":"5c8d1dce50d2344060fee408bde517d5b3a660db","modified":1732356277202},{"_id":"public/img/error-page.png","hash":"d2519710498a871ca3e913c57e2ba20a805b6430","modified":1732356277202},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1732356277202},{"_id":"public/img/img/0.jpg","hash":"281f908d92fa2873031f839239ec66d3abc3d1cf","modified":1732356277202},{"_id":"public/img/img/1.jpg","hash":"d07ec7e73f0ef76e1b7bad19e86d236ea30b3042","modified":1732356277202},{"_id":"public/img/img/10.jpg","hash":"d55d851644d5a75c0e0e33dfaab7eeb559e0871e","modified":1732356277202},{"_id":"public/img/img/11.jpg","hash":"f9ca7fb1f694e8e96ba225dc445981650e76d6d1","modified":1732356277202},{"_id":"public/img/img/12.jpg","hash":"ba486c64607fa54f689cb85a1d7454695a2db960","modified":1732356277202},{"_id":"public/img/img/13.jpg","hash":"2d4bc29d68a7581ebf9e0290ed2aee2d8337fec3","modified":1732356277202},{"_id":"public/img/img/14.jpg","hash":"9a83aa4dbff7432ea31075ace4683bf742b67475","modified":1732356277202},{"_id":"public/img/img/15.jpg","hash":"d53608593b71d6afcc37d1f6ff3fcfb9a3698e6c","modified":1732356277202},{"_id":"public/img/img/16.jpg","hash":"00d312f14b2af8b742102a5df286f4f11e6a579b","modified":1732356277202},{"_id":"public/img/img/17.jpg","hash":"c70984f81fcf4d08432dda8917de76b506308290","modified":1732356277202},{"_id":"public/img/img/18.jpg","hash":"21a5f6e5df27fff3190b9fef3d4646c370c8f025","modified":1732356277202},{"_id":"public/img/img/20.jpg","hash":"79c2eb5651e44ab96b6ac671dd479658207827bf","modified":1732356277202},{"_id":"public/img/img/19.jpg","hash":"4e105cdf669cc27cf8c372eb419e6a0368f59a9f","modified":1732356277202},{"_id":"public/img/img/2.jpg","hash":"8bab280bbd993ad7f5611d4370ffe749ae3a1e21","modified":1732356277202},{"_id":"public/img/img/3.jpg","hash":"8d09ef8c3e95a5e98e586593adbbcfeda1adaab9","modified":1732356277202},{"_id":"public/img/img/4.jpg","hash":"29f07464ebb3fc1efbe5a880b372b2f3302e0e79","modified":1732356277202},{"_id":"public/img/img/5.jpg","hash":"e732af75c0595bf908306ee8f51996ef8a5afbe8","modified":1732356277202},{"_id":"public/img/img/6.jpg","hash":"ca6ab55a48dc94d14c4a5813fadea2607d965173","modified":1732356277202},{"_id":"public/img/img/7.jpg","hash":"8d4499c59c9420be23022d6af3911ef3eecafb30","modified":1732356277202},{"_id":"public/img/img/8.jpg","hash":"4bbdddf14868e424b6d899ae4cc5797fac5a7b5a","modified":1732356277202},{"_id":"public/img/img/9.jpg","hash":"9952d20708b68aaccc975125d2ebedbf84d2bb5c","modified":1732356277202},{"_id":"public/live2dw/assets/hijiki.model.json","hash":"feff43bf7498d213982c3736c2c029664e4bcbd2","modified":1732356277202},{"_id":"public/live2dw/assets/hijiki.pose.json","hash":"81438bf69b32c7c11e311b4fe043730cdc7b7ec2","modified":1732356277202},{"_id":"public/live2dw/assets/mtn/00_idle.mtn","hash":"b224c60e463b9f71ddbfc0c720e430496c175f4f","modified":1732356277202},{"_id":"public/live2dw/assets/mtn/02.mtn","hash":"7eafc52edc73b7cb80ae70d34b43c6ac778fa47b","modified":1732356277202},{"_id":"public/live2dw/assets/mtn/01.mtn","hash":"fb550833ae22c9954c3e01df37ed29b2d61700f2","modified":1732356277202},{"_id":"public/live2dw/assets/mtn/03.mtn","hash":"f900737c7a98441cbb2e05255427e6260e19ae68","modified":1732356277202},{"_id":"public/live2dw/assets/mtn/04.mtn","hash":"c7a25d3c5d783639bae18db2f3cd284b819c3c85","modified":1732356277202},{"_id":"public/live2dw/assets/mtn/05.mtn","hash":"dd20ad24b5d1830a5d44b9bccb28f922eea5e0e5","modified":1732356277202},{"_id":"public/live2dw/assets/mtn/06.mtn","hash":"ad404bd852d276cdd3d054c953e23f90e4e45ae1","modified":1732356277202},{"_id":"public/live2dw/assets/mtn/07.mtn","hash":"b7f2e3a9fa4f3ffbb6e64a08f8d9f45ca1868ffb","modified":1732356277202},{"_id":"public/live2dw/lib/L2Dwidget.min.js","hash":"5f1a807437cc723bcadc3791d37add5ceed566a2","modified":1732356277202},{"_id":"public/live2dw/assets/mtn/08.mtn","hash":"4411c7651ff65195b113d95e7d5ebef8a59a37d9","modified":1732356277202},{"_id":"public/css/barber-shop.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/css/index.css","hash":"c33db473efd84c7014c755e4e61b93ac4b28fa3a","modified":1732356277202},{"_id":"public/css/loading-bar.css","hash":"6d60f89586126bc19e030cd1def0ba4ca2421f1b","modified":1732356277202},{"_id":"public/css/loading-stroke-feather.css","hash":"8a195379a9239b41a30aec0a9f454efab2ef298d","modified":1732356277202},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/js/main.js","hash":"9fb88eb196f9368768aaa554c679129e4969f069","modified":1732356277202},{"_id":"public/js/tw_cn.js","hash":"7ef59df188ea523da89f4caf69c5c0f14e78da69","modified":1732356277202},{"_id":"public/js/utils.js","hash":"fd3c26366c78dd82bc87d4ddebe76c582122e1b7","modified":1732356277202},{"_id":"public/custom/css/heoMainColor.css","hash":"24fd5ea914477e28b4dfc041d16c7de5d1d86759","modified":1732356277202},{"_id":"public/custom/css/all.min.css","hash":"a31a52589520977c3d2cb3a4641560caf032975c","modified":1732356277202},{"_id":"public/custom/css/fancybox.min.css","hash":"7f79bd0828a87b8ebf0740ace3bfb6c545267048","modified":1732356277202},{"_id":"public/custom/css/poem.css","hash":"9b31c2508bbefc3425ed1e712642d9689b266ef2","modified":1732356277202},{"_id":"public/custom/css/share.min.css","hash":"8a778a86f3ce9a042df6be63a9f1039631e351a5","modified":1732356277202},{"_id":"public/custom/css/waline.min.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/custom/fonts/fonts.css","hash":"3ada4e5cfbdb2de3a60d2b0e1509b12eefc0379d","modified":1732356277202},{"_id":"public/custom/js/activate-power-mode.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/custom/js/algoliasearch-lite.umd.min.js","hash":"38c49c53702e59598c7b1ec4cdec6bf2e19463b5","modified":1732356277202},{"_id":"public/custom/js/base64.min.js","hash":"15556825deaf54ecc3f45434c34065b7ae21c3b0","modified":1732356277202},{"_id":"public/custom/js/busuanzi.pure.mini.js","hash":"a30fcd42f277944e6524b99f2412b1f01880b813","modified":1732356277202},{"_id":"public/custom/js/canvas-fluttering-ribbon.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/custom/js/canvas-ribbon.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/custom/js/click_heart.min.js","hash":"bca772dfd8763bf013befd28d9842385c82a1e1e","modified":1732356277202},{"_id":"public/custom/js/click-show-text.min.js","hash":"8a9fc255965bce8076ea7f711b21effc7181183d","modified":1732356277202},{"_id":"public/custom/js/fireworks.min.js","hash":"48b700c2cb9864b77a67e19f62d633ed25bb784c","modified":1732356277202},{"_id":"public/custom/js/jinrishici.js","hash":"06952018bb1bb89d5953ac70bafe567aa98fdc18","modified":1732356277202},{"_id":"public/custom/js/fancybox.umd.min.js","hash":"65b4543d6c5509d37342cbed8090992342733644","modified":1732356277202},{"_id":"public/custom/js/lazyload.iife.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/custom/js/jquery.js","hash":"ee48592d1fff952fcf06ce0b666ed4785493afdc","modified":1732356277202},{"_id":"public/custom/js/location.js","hash":"5e356dd38372ffebf417a8d4451e96d3e9540033","modified":1732356277202},{"_id":"public/custom/js/medium-zoom.min.js","hash":"ded611d294060e40f360f563a92cec80e1cfbdc0","modified":1732356277202},{"_id":"public/custom/js/owo.json","hash":"998f5ad05c89f4c643e90e4de2b0211980a12c17","modified":1732356277202},{"_id":"public/custom/js/pace.min.js","hash":"167da09bcd855864f0fda03cb0e83840e299c048","modified":1732356277202},{"_id":"public/custom/js/prism.js","hash":"44194b30f4bcad31bf7730bae4dec8c0c06eae49","modified":1732356277202},{"_id":"public/custom/js/social-share.min.js","hash":"a3090a02786dcd4efc6355c1c1dc978add8d6827","modified":1732356277202},{"_id":"public/custom/js/snow.js","hash":"dcf43e9ced3a6100ccf92846762cec6e2cb25287","modified":1732356277202},{"_id":"public/custom/js/typed.umd.min.js","hash":"23b6a5be0bbc2212ef9787ce9f91c1822862d98f","modified":1732356277202},{"_id":"public/custom/js/waline.min.js","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1732356277202},{"_id":"public/js/search/algolia.js","hash":"3b98c2cf6f070743e01449359ee81262cb15bea0","modified":1732356277202},{"_id":"public/js/search/local-search.js","hash":"4e11d033fb58563f5e1b497f1a6f1c62d3501ee6","modified":1732356277202},{"_id":"public/live2dw/assets/moc/hijiki.moc","hash":"44289e62545a7046e0f5231103a851750b78524e","modified":1732356277202},{"_id":"public/custom/js/twikoo.all.min.js","hash":"3060c525d24b6b611efed144073a08c8d7f9f6c7","modified":1732356277202},{"_id":"public/live2dw/lib/L2Dwidget.min.js.map","hash":"3290fe2df45f065b51a1cd7b24ec325cbf9bb5ce","modified":1732356277202},{"_id":"public/live2dw/assets/moc/hijiki.2048/texture_00.png","hash":"66464e0d96439695b5542c5e2f5be60739c29999","modified":1732356277202},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js","hash":"35bb5b588b6de25c9be2dd51d3fd331feafac02d","modified":1732356277202},{"_id":"public/img/butterfly-icon.png","hash":"f5dd732fed5c3bcd4aa76bac3441bac8485fb432","modified":1732356277202},{"_id":"public/img/banner.jpeg","hash":"a9ffeec20697da77e9c3e7b7c60110528579ae52","modified":1732356277202},{"_id":"public/live2dw/lib/L2Dwidget.0.min.js.map","hash":"35e71cc2a130199efb167b9a06939576602f0d75","modified":1732356277202}],"Category":[{"name":"大数据","_id":"cm3u077s10004ogst13g3hpdk"},{"name":"数据库","_id":"cm3u077sf000bogstbyanfoa9"},{"name":"工具","_id":"cm3u077sh000fogst9x4hadlf"},{"name":"云服务","_id":"cm3u077sm000kogstdcbn0mjo"},{"name":"数据采集","parent":"cm3u077s10004ogst13g3hpdk","_id":"cm3u077sp000oogstaojjg00r"},{"name":"图床","parent":"cm3u077sh000fogst9x4hadlf","_id":"cm3u077sq000togsta10t9zey"}],"Data":[{"_id":"applications","data":[{"class_name":"我的应用","link_list":[{"name":"Memos","link":"https://memos.hudi.space/auth","mshot":"https://s0.wp.com/mshots/v1/https://memos.hudi.space/auth/?w=400&h=300","descr":"这就是一个类似备忘录的小软件，记录一些小想法。感觉有哲理的小句子。"}]}]},{"_id":"link","data":[{"class_name":"友情链接","class_desc":"那些人，那些事","link_list":[{"name":"清羽飞扬","link":"https://blog.liushen.fun/","avatar":"https://blog.liushen.fun/info/avatar.ico","descr":"柳影曳曳，清酒孤灯，扬笔撒墨，心境如霜"},{"name":"雾林博客","link":"https://www.baiwulin.com","avatar":"https://cravatar.cn/avatar/6069656389d12d0741da383e40f82e8f?s=400","descr":"不敢奢求活在梦中，但依然向往梦中世界"},{"name":"一四三随笔","link":"https://www.young143.top/","avatar":"http://www.young143.top/a.jpg","descr":"如果我死在追逐自由的路上,那便是我的终点."},{"name":"刘郎阁","link":"https://vjo.cc/","avatar":"https://vjo.cc/usr/uploads/logo.jpeg","descr":"一个积极向上的生活探索者！"},{"name":"随风落叶","link":"https://www.7zsk.cn","avatar":"https://www.7zsk.cn/photo/ico.png","descr":"秋风生渭水，落叶满长安。"},{"name":"XINGYE's Blog","link":"https://blog.xing-ye.top/","avatar":"https://blog.xing-ye.top/avatar.webp","descr":"不要放弃，坚持学习，坚守理想，等待时机！"}]},{"class_name":"网站","class_desc":"值得推荐的网站","link_list":[{"name":"Webgradients","link":"https://webgradients.com/","avatar":"https://files.codelife.cc/icons/webgradients.svg","descr":"颜色渐变"}]}]},{"_id":"shuoshuo","data":[{"author":"Butterfly","avatar":"https://butterfly.js.org/img/avatar.png","date":"2024-06-21T23:33:26.000Z","content":"This is a sample content for **Author 1**.\n![Sample Image](https://via.placeholder.com/150)\n","tags":["tags1","tags2"]},{"author":"Butterfly","avatar":"https://butterfly.js.org/img/avatar.png","date":"2024-06-20T23:33:26.000Z","content":"This is a sample content for **Author 2**.\n![Sample Image](https://via.placeholder.com/150)\n","tags":["tag2","tag3"]},{"author":"Butterfly","avatar":"https://butterfly.js.org/img/avatar.png","date":"2024-06-19T23:33:26.000Z","content":"This is a sample content for **Author 3**.\n"}]}],"Page":[{"title":"关于我","date":"2024-10-19T05:24:50.000Z","type":"about","comments":0,"toc":false,"top_img":"linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)","_content":"\n### 关于本站\n\nHi,朋友别来无恙！感谢你得空访问我的博客。这里是我的自留地。用来记录我的***学习，思考，和生活***。\n\n\n### 为什么建站？\n\n主要是摆烂比较严重，想找个事来做，打发打发时间，也可以记录记录自己的生活和学习笔记，心得等等。还有一个原因是我一个朋友老是激励我去学习自己感兴趣的东西。也非常感谢他，让我有信心去学习，而不是内耗的去摆烂。\n\n\n### 简短介绍\n\n昵称Hudi,来自大数据***Apache Hudi*** 是一个开源的数据湖工具，用于管理大规模数据湖中的数据。至于网站名字***短巷与雨***,只是单纯给网站起个名字而已。可能和喜欢下雨天有关。性格所致，我是一个极其***内耗***的人，可能和有想的多，做的少有关系。也可能和教育环境等有关，不知道从何时开始，我们做每件事都要求***有意义***。出去旅游，看书就是有意义，看电视，睡觉就是***没意义***。也不知道为何会有这种观念。或许我们早就忽视了时间最本质的意义。\n\n\n\n\n\n### 梦想与目标\n\n希望会拥有选择的权利，选择有意义、有时间的工作，而不是被迫谋生。当然能**暴富**最好了，哈哈哈哈。\n\n\n\n### 兴趣爱好\n\n- 魔幻电影🎬、书籍📚\n\n- 旅游🥾，摄影(学习中技术很烂)📷\n\n- 前端技术学习ing（技术很烂）\n\n- 🏃‍♂️city walk\n\n- 吃🥣\n\n\n\n### 如何联系\n\n感谢你的阅读和了解，你可以给我发送一封电子 [邮件](mailto:71478355@qq.com)。或者是订阅我的[RSS](/rss.xml)吧\n\n","source":"about/index.md","raw":"---\ntitle: 关于我\ndate: 2024-10-19 13:24:50\ntype: 'about'\ncomments: false\ntoc: false\ntop_img: 'linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%)'\n---\n\n### 关于本站\n\nHi,朋友别来无恙！感谢你得空访问我的博客。这里是我的自留地。用来记录我的***学习，思考，和生活***。\n\n\n### 为什么建站？\n\n主要是摆烂比较严重，想找个事来做，打发打发时间，也可以记录记录自己的生活和学习笔记，心得等等。还有一个原因是我一个朋友老是激励我去学习自己感兴趣的东西。也非常感谢他，让我有信心去学习，而不是内耗的去摆烂。\n\n\n### 简短介绍\n\n昵称Hudi,来自大数据***Apache Hudi*** 是一个开源的数据湖工具，用于管理大规模数据湖中的数据。至于网站名字***短巷与雨***,只是单纯给网站起个名字而已。可能和喜欢下雨天有关。性格所致，我是一个极其***内耗***的人，可能和有想的多，做的少有关系。也可能和教育环境等有关，不知道从何时开始，我们做每件事都要求***有意义***。出去旅游，看书就是有意义，看电视，睡觉就是***没意义***。也不知道为何会有这种观念。或许我们早就忽视了时间最本质的意义。\n\n\n\n\n\n### 梦想与目标\n\n希望会拥有选择的权利，选择有意义、有时间的工作，而不是被迫谋生。当然能**暴富**最好了，哈哈哈哈。\n\n\n\n### 兴趣爱好\n\n- 魔幻电影🎬、书籍📚\n\n- 旅游🥾，摄影(学习中技术很烂)📷\n\n- 前端技术学习ing（技术很烂）\n\n- 🏃‍♂️city walk\n\n- 吃🥣\n\n\n\n### 如何联系\n\n感谢你的阅读和了解，你可以给我发送一封电子 [邮件](mailto:71478355@qq.com)。或者是订阅我的[RSS](/rss.xml)吧\n\n","updated":"2024-11-15T01:14:35.878Z","path":"about/index.html","layout":"page","_id":"cm3u077rm0000ogst84uc3lqc","content":"<h3 id=\"关于本站\"><a href=\"#关于本站\" class=\"headerlink\" title=\"关于本站\"></a>关于本站</h3><p>Hi,朋友别来无恙！感谢你得空访问我的博客。这里是我的自留地。用来记录我的<em><strong>学习，思考，和生活</strong></em>。</p>\n<h3 id=\"为什么建站？\"><a href=\"#为什么建站？\" class=\"headerlink\" title=\"为什么建站？\"></a>为什么建站？</h3><p>主要是摆烂比较严重，想找个事来做，打发打发时间，也可以记录记录自己的生活和学习笔记，心得等等。还有一个原因是我一个朋友老是激励我去学习自己感兴趣的东西。也非常感谢他，让我有信心去学习，而不是内耗的去摆烂。</p>\n<h3 id=\"简短介绍\"><a href=\"#简短介绍\" class=\"headerlink\" title=\"简短介绍\"></a>简短介绍</h3><p>昵称Hudi,来自大数据<em><strong>Apache Hudi</strong></em> 是一个开源的数据湖工具，用于管理大规模数据湖中的数据。至于网站名字<em><strong>短巷与雨</strong></em>,只是单纯给网站起个名字而已。可能和喜欢下雨天有关。性格所致，我是一个极其<em><strong>内耗</strong></em>的人，可能和有想的多，做的少有关系。也可能和教育环境等有关，不知道从何时开始，我们做每件事都要求<em><strong>有意义</strong></em>。出去旅游，看书就是有意义，看电视，睡觉就是<em><strong>没意义</strong></em>。也不知道为何会有这种观念。或许我们早就忽视了时间最本质的意义。</p>\n<h3 id=\"梦想与目标\"><a href=\"#梦想与目标\" class=\"headerlink\" title=\"梦想与目标\"></a>梦想与目标</h3><p>希望会拥有选择的权利，选择有意义、有时间的工作，而不是被迫谋生。当然能<strong>暴富</strong>最好了，哈哈哈哈。</p>\n<h3 id=\"兴趣爱好\"><a href=\"#兴趣爱好\" class=\"headerlink\" title=\"兴趣爱好\"></a>兴趣爱好</h3><ul>\n<li><p>魔幻电影🎬、书籍📚</p>\n</li>\n<li><p>旅游🥾，摄影(学习中技术很烂)📷</p>\n</li>\n<li><p>前端技术学习ing（技术很烂）</p>\n</li>\n<li><p>🏃‍♂️city walk</p>\n</li>\n<li><p>吃🥣</p>\n</li>\n</ul>\n<h3 id=\"如何联系\"><a href=\"#如何联系\" class=\"headerlink\" title=\"如何联系\"></a>如何联系</h3><p>感谢你的阅读和了解，你可以给我发送一封电子 <a href=\"mailto:71478355@qq.com\">邮件</a>。或者是订阅我的<a href=\"/rss.xml\">RSS</a>吧</p>\n","cover":false,"excerpt":"","more":"<h3 id=\"关于本站\"><a href=\"#关于本站\" class=\"headerlink\" title=\"关于本站\"></a>关于本站</h3><p>Hi,朋友别来无恙！感谢你得空访问我的博客。这里是我的自留地。用来记录我的<em><strong>学习，思考，和生活</strong></em>。</p>\n<h3 id=\"为什么建站？\"><a href=\"#为什么建站？\" class=\"headerlink\" title=\"为什么建站？\"></a>为什么建站？</h3><p>主要是摆烂比较严重，想找个事来做，打发打发时间，也可以记录记录自己的生活和学习笔记，心得等等。还有一个原因是我一个朋友老是激励我去学习自己感兴趣的东西。也非常感谢他，让我有信心去学习，而不是内耗的去摆烂。</p>\n<h3 id=\"简短介绍\"><a href=\"#简短介绍\" class=\"headerlink\" title=\"简短介绍\"></a>简短介绍</h3><p>昵称Hudi,来自大数据<em><strong>Apache Hudi</strong></em> 是一个开源的数据湖工具，用于管理大规模数据湖中的数据。至于网站名字<em><strong>短巷与雨</strong></em>,只是单纯给网站起个名字而已。可能和喜欢下雨天有关。性格所致，我是一个极其<em><strong>内耗</strong></em>的人，可能和有想的多，做的少有关系。也可能和教育环境等有关，不知道从何时开始，我们做每件事都要求<em><strong>有意义</strong></em>。出去旅游，看书就是有意义，看电视，睡觉就是<em><strong>没意义</strong></em>。也不知道为何会有这种观念。或许我们早就忽视了时间最本质的意义。</p>\n<h3 id=\"梦想与目标\"><a href=\"#梦想与目标\" class=\"headerlink\" title=\"梦想与目标\"></a>梦想与目标</h3><p>希望会拥有选择的权利，选择有意义、有时间的工作，而不是被迫谋生。当然能<strong>暴富</strong>最好了，哈哈哈哈。</p>\n<h3 id=\"兴趣爱好\"><a href=\"#兴趣爱好\" class=\"headerlink\" title=\"兴趣爱好\"></a>兴趣爱好</h3><ul>\n<li><p>魔幻电影🎬、书籍📚</p>\n</li>\n<li><p>旅游🥾，摄影(学习中技术很烂)📷</p>\n</li>\n<li><p>前端技术学习ing（技术很烂）</p>\n</li>\n<li><p>🏃‍♂️city walk</p>\n</li>\n<li><p>吃🥣</p>\n</li>\n</ul>\n<h3 id=\"如何联系\"><a href=\"#如何联系\" class=\"headerlink\" title=\"如何联系\"></a>如何联系</h3><p>感谢你的阅读和了解，你可以给我发送一封电子 <a href=\"mailto:71478355@qq.com\">邮件</a>。或者是订阅我的<a href=\"/rss.xml\">RSS</a>吧</p>\n"},{"title":"友链申请","date":"2024-10-23T04:19:58.000Z","type":"addlink","comments":1,"top_img":false,"aside":false,"_content":"\n\n","source":"addlink/index.md","raw":"---\ntitle: 友链申请\ndate: 2024-10-23 12:19:58\ntype: \"addlink\"\ncomments: true\n#top_img: 'linear-gradient(to top, #fff1eb 0%, #ace0f9 100%)'\ntop_img: false\naside: false\n---\n\n\n","updated":"2024-11-15T03:04:45.860Z","path":"addlink/index.html","layout":"page","_id":"cm3u077ry0002ogstetxw1wbf","content":"","cover":false,"excerpt":"","more":""},{"title":"我的应用","date":"2024-11-11T04:20:16.000Z","type":"applications","comments":0,"top_img":false,"aside":false,"page":false,"_content":"","source":"applications/index.md","raw":"---\ntitle: 我的应用\ndate: 2024-11-11 12:20:16\ntype: 'applications'\ncomments: false\n#top_img: 'linear-gradient(to top, #a7a6cb 0%, #8989ba 52%, #8989ba 100%)'\ntop_img: false\naside: false\npage: false\n---\n","updated":"2024-11-12T05:28:54.469Z","path":"applications/index.html","layout":"page","_id":"cm3u077s70006ogstha22e3zd","content":"","cover":false,"excerpt":"","more":""},{"title":"分类","date":"2024-10-23T04:19:58.000Z","type":"categories","comments":0,"top_img":"linear-gradient(to top, #fff1eb 0%, #ace0f9 100%)","_content":"","source":"categories/index.md","raw":"---\ntitle: 分类\ndate: 2024-10-23 12:19:58\ntype: \"categories\"\ncomments: false\ntop_img: 'linear-gradient(to top, #fff1eb 0%, #ace0f9 100%)'\n---\n","updated":"2024-10-24T11:42:41.249Z","path":"categories/index.html","layout":"page","_id":"cm3u077sb0008ogst5y08d9pb","content":"","cover":false,"excerpt":"","more":""},{"title":"看看小伙伴都在干啥","date":"2024-10-23T04:19:58.000Z","type":"friend","comments":1,"top_img":false,"aside":false,"_content":"<div id=\"friend-circle-lite-root\"></div>\n<script>\n    if (typeof UserConfig === 'undefined') {\n        var UserConfig = {\n            // 填写你的fc Lite地址\n            private_api_url: 'https://friends.hudi.space/',\n            // 点击加载更多时，一次最多加载几篇文章，默认20\n            page_turning_number: 24,\n            // 头像加载失败时，默认头像地址\n            error_img: 'https://pic.imgdb.cn/item/6695daa4d9c307b7e953ee3d.jpg',\n        }\n    }\n</script>\n<link rel=\"stylesheet\" href=\"https://fastly.jsdelivr.net/gh/willow-god/Friend-Circle-Lite/main/fclite.min.css\">\n<script src=\"https://fastly.jsdelivr.net/gh/willow-god/Friend-Circle-Lite/main/fclite.min.js\"></script>\n","source":"friend/index.md","raw":"---\ntitle: 看看小伙伴都在干啥\ndate: 2024-10-23 12:19:58\ntype: \"friend\"\ncomments: true\n#top_img: 'linear-gradient(to top, #fff1eb 0%, #ace0f9 100%)'\ntop_img: false\naside: false\n---\n<div id=\"friend-circle-lite-root\"></div>\n<script>\n    if (typeof UserConfig === 'undefined') {\n        var UserConfig = {\n            // 填写你的fc Lite地址\n            private_api_url: 'https://friends.hudi.space/',\n            // 点击加载更多时，一次最多加载几篇文章，默认20\n            page_turning_number: 24,\n            // 头像加载失败时，默认头像地址\n            error_img: 'https://pic.imgdb.cn/item/6695daa4d9c307b7e953ee3d.jpg',\n        }\n    }\n</script>\n<link rel=\"stylesheet\" href=\"https://fastly.jsdelivr.net/gh/willow-god/Friend-Circle-Lite/main/fclite.min.css\">\n<script src=\"https://fastly.jsdelivr.net/gh/willow-god/Friend-Circle-Lite/main/fclite.min.js\"></script>\n","updated":"2024-11-23T05:53:11.112Z","path":"friend/index.html","layout":"page","_id":"cm3u077se000aogst9tlt6atv","content":"<div id=\"friend-circle-lite-root\"></div>\n<script>\n    if (typeof UserConfig === 'undefined') {\n        var UserConfig = {\n            // 填写你的fc Lite地址\n            private_api_url: 'https://friends.hudi.space/',\n            // 点击加载更多时，一次最多加载几篇文章，默认20\n            page_turning_number: 24,\n            // 头像加载失败时，默认头像地址\n            error_img: 'https://pic.imgdb.cn/item/6695daa4d9c307b7e953ee3d.jpg',\n        }\n    }\n</script>\n<link rel=\"stylesheet\" href=\"https://fastly.jsdelivr.net/gh/willow-god/Friend-Circle-Lite/main/fclite.min.css\">\n<script src=\"https://fastly.jsdelivr.net/gh/willow-god/Friend-Circle-Lite/main/fclite.min.js\"></script>\n","cover":false,"excerpt":"","more":"<div id=\"friend-circle-lite-root\"></div>\n<script>\n    if (typeof UserConfig === 'undefined') {\n        var UserConfig = {\n            // 填写你的fc Lite地址\n            private_api_url: 'https://friends.hudi.space/',\n            // 点击加载更多时，一次最多加载几篇文章，默认20\n            page_turning_number: 24,\n            // 头像加载失败时，默认头像地址\n            error_img: 'https://pic.imgdb.cn/item/6695daa4d9c307b7e953ee3d.jpg',\n        }\n    }\n</script>\n<link rel=\"stylesheet\" href=\"https://fastly.jsdelivr.net/gh/willow-god/Friend-Circle-Lite/main/fclite.min.css\">\n<script src=\"https://fastly.jsdelivr.net/gh/willow-god/Friend-Circle-Lite/main/fclite.min.js\"></script>\n"},{"title":"友情链接","date":"2024-10-23T04:20:16.000Z","type":"link","comments":0,"top_img":"linear-gradient(-20deg, #e9defa 0%, #fbfcdb 100%)","_content":"","source":"link/index.md","raw":"---\ntitle: 友情链接\ndate: 2024-10-23 12:20:16\ntype: 'link'\ncomments: false\ntop_img: 'linear-gradient(-20deg, #e9defa 0%, #fbfcdb 100%)'\n---\n","updated":"2024-10-24T11:42:56.963Z","path":"link/index.html","layout":"page","_id":"cm3u077sg000dogst9f5748rq","content":"","cover":false,"excerpt":"","more":""},{"title":"发发牢骚","date":"2024-10-23T04:20:16.000Z","type":"memos","comments":1,"top_img":"linear-gradient(to right, #eea2a2 0%, #bbc1bf 19%, #57c6e1 42%, #b49fda 79%, #7ac5d8 100%)","aside":false,"_content":"\n\n","source":"memos/index.md","raw":"---\ntitle: 发发牢骚\ndate: 2024-10-23 12:20:16\ntype: 'memos'\ncomments: true\ntop_img: 'linear-gradient(to right, #eea2a2 0%, #bbc1bf 19%, #57c6e1 42%, #b49fda 79%, #7ac5d8 100%)'\n#top_img: false\naside: false\n---\n\n\n","updated":"2024-11-12T10:14:34.363Z","path":"memos/index.html","layout":"page","_id":"cm3u077sh000eogstdzbgb30s","content":"","cover":false,"excerpt":"","more":""},{"title":"留下你宝贵的建议吧~","date":"2024-10-23T04:19:58.000Z","type":"comment","comments":1,"top_img":"linear-gradient(to top, #fff1eb 0%, #ace0f9 100%)","_content":"\n\n","source":"messages/index.md","raw":"---\ntitle: 留下你宝贵的建议吧~\ndate: 2024-10-23 12:19:58\ntype: \"comment\"\ncomments: true\ntop_img: 'linear-gradient(to top, #fff1eb 0%, #ace0f9 100%)'\n---\n\n\n","updated":"2024-11-07T04:21:58.401Z","path":"messages/index.html","layout":"page","_id":"cm3u077si000hogstb09y20yp","content":"","cover":false,"excerpt":"","more":""},{"title":"电影清单","date":"2024-11-07T04:19:58.000Z","type":"movie","comments":0,"top_img":false,"aside":true,"_content":"\n{% note simple %}\n  2024电影清单\n{% endnote %}\n\n{% tabs 2024movies %}\n\n<!-- tab 已看-->\n\n<div class=\"movie_item\">\n     {% inlineImg https://bitiful.hudi.space/movie/p2913215934.jpeg 150px %} \n    <p class=\"info\">\n       <span>危机航线 (2024)</span>\n       <span>主演: 刘德华 / 张子枫 / 屈楚萧 / 刘涛 / 郭晓东 </span>\n       <span>制片国家/地区: 中国香港 / 中国大陆</span>\n       <span>上映日期: 2024-09-30(中国大陆)</span>\n       <span>片长: 119分钟</span>\n    </p>\n</div>  \n<div class=\"movie_item\">\n     {% inlineImg https://bitiful.hudi.space/movie/p2913374899.jpeg 150px %} \n    <p class=\"info\">\n       <span>志愿军：存亡之战 (2024)</span>\n       <span>主演: 朱一龙 / 辛柏青 / 张子枫 / 朱亚文 / 陈飞宇 </span>\n       <span>制片国家/地区: 中国大陆</span>\n       <span>上映日期: 2024-09-30(中国大陆)</span>\n       <span>片长: 144分钟</span>\n    </p>\n</div>  \n\n<div class=\"movie_item\">\n     {% inlineImg https://bitiful.hudi.space/movie/p2904477111.jpeg 150px %} \n    <p class=\"info\">\n       <span>哥斯拉大战金刚2:帝国崛起(2024)</span>\n       <span>主演: 丽贝卡·豪尔 /布莱恩·泰里·亨利 /丹·史蒂文斯 /凯莉·霍特尔</span>\n       <span>制片国家/地区: 美国 / 澳大利亚</span>\n       <span>上映日期: 2024-03-29(美国/中国大陆) </span>\n       <span>片长: 115分钟</span>\n    </p>\n</div>  \n\n\n\n  <div class=\"movie_item\">\n     {% inlineImg https://bitiful.hudi.space/movie/p2902227445.webp 150px %} \n    <p class=\"info\">\n       <span>沙丘2 Dune(2024)</span>\n       <span>主演: 提莫西·查拉梅/赞达亚/丽贝卡·弗格森/</span>\n       <span>制片国家/地区: 美国 / 加拿大</span>\n       <span>上映日期: 2024-03-08(中国大陆)</span>\n       <span>片长: 166分钟</span>\n    </p>\n</div>  \n\n<div class=\"movie_item\">\n     {% inlineImg https://bitiful.hudi.space/movie/p2903145026.jpeg 150px %} \n    <p class=\"info\">\n       <span>第二十条 (2024)</span>\n       <span>主演: 雷佳音 / 马丽 / 赵丽颖 / 高叶 / 刘耀文</span>\n       <span>制片国家/地区: 中国大陆</span>\n       <span>上映日期: 2024-02-10(中国大陆) </span>\n       <span>片长: 141分钟</span>\n    </p>\n</div>  \n\n\n<!-- endtab -->\n\n<!-- tab 想看-->\n\n<div class=\"movie_item\">\n     {% inlineImg https://bitiful.hudi.space/movie/p2914777370.jpeg 150px %} \n    <p class=\"info\">\n       <span>焚城 (2024)</span>\n       <span>主演: 刘德华 / 白宇 / 莫文蔚 / 谢君豪 / 王菀之 </span>\n       <span>制片国家/地区: 中国香港 / 中国大陆</span>\n       <span>上映日期: 2024-11-01(中国大陆)</span>\n       <span>片长: 136分钟</span>\n    </p>\n</div>  \n\n\n<!-- endtab -->\n\n{% endtabs %}\n\n","source":"movie/index.md","raw":"---\ntitle: 电影清单\ndate: 2024-11-07 12:19:58\ntype: \"movie\"\ncomments: false\n#top_img: 'linear-gradient(to top, #fff1eb 0%, #ace0f9 100%)'\ntop_img: false\naside: true\n---\n\n{% note simple %}\n  2024电影清单\n{% endnote %}\n\n{% tabs 2024movies %}\n\n<!-- tab 已看-->\n\n<div class=\"movie_item\">\n     {% inlineImg https://bitiful.hudi.space/movie/p2913215934.jpeg 150px %} \n    <p class=\"info\">\n       <span>危机航线 (2024)</span>\n       <span>主演: 刘德华 / 张子枫 / 屈楚萧 / 刘涛 / 郭晓东 </span>\n       <span>制片国家/地区: 中国香港 / 中国大陆</span>\n       <span>上映日期: 2024-09-30(中国大陆)</span>\n       <span>片长: 119分钟</span>\n    </p>\n</div>  \n<div class=\"movie_item\">\n     {% inlineImg https://bitiful.hudi.space/movie/p2913374899.jpeg 150px %} \n    <p class=\"info\">\n       <span>志愿军：存亡之战 (2024)</span>\n       <span>主演: 朱一龙 / 辛柏青 / 张子枫 / 朱亚文 / 陈飞宇 </span>\n       <span>制片国家/地区: 中国大陆</span>\n       <span>上映日期: 2024-09-30(中国大陆)</span>\n       <span>片长: 144分钟</span>\n    </p>\n</div>  \n\n<div class=\"movie_item\">\n     {% inlineImg https://bitiful.hudi.space/movie/p2904477111.jpeg 150px %} \n    <p class=\"info\">\n       <span>哥斯拉大战金刚2:帝国崛起(2024)</span>\n       <span>主演: 丽贝卡·豪尔 /布莱恩·泰里·亨利 /丹·史蒂文斯 /凯莉·霍特尔</span>\n       <span>制片国家/地区: 美国 / 澳大利亚</span>\n       <span>上映日期: 2024-03-29(美国/中国大陆) </span>\n       <span>片长: 115分钟</span>\n    </p>\n</div>  \n\n\n\n  <div class=\"movie_item\">\n     {% inlineImg https://bitiful.hudi.space/movie/p2902227445.webp 150px %} \n    <p class=\"info\">\n       <span>沙丘2 Dune(2024)</span>\n       <span>主演: 提莫西·查拉梅/赞达亚/丽贝卡·弗格森/</span>\n       <span>制片国家/地区: 美国 / 加拿大</span>\n       <span>上映日期: 2024-03-08(中国大陆)</span>\n       <span>片长: 166分钟</span>\n    </p>\n</div>  \n\n<div class=\"movie_item\">\n     {% inlineImg https://bitiful.hudi.space/movie/p2903145026.jpeg 150px %} \n    <p class=\"info\">\n       <span>第二十条 (2024)</span>\n       <span>主演: 雷佳音 / 马丽 / 赵丽颖 / 高叶 / 刘耀文</span>\n       <span>制片国家/地区: 中国大陆</span>\n       <span>上映日期: 2024-02-10(中国大陆) </span>\n       <span>片长: 141分钟</span>\n    </p>\n</div>  \n\n\n<!-- endtab -->\n\n<!-- tab 想看-->\n\n<div class=\"movie_item\">\n     {% inlineImg https://bitiful.hudi.space/movie/p2914777370.jpeg 150px %} \n    <p class=\"info\">\n       <span>焚城 (2024)</span>\n       <span>主演: 刘德华 / 白宇 / 莫文蔚 / 谢君豪 / 王菀之 </span>\n       <span>制片国家/地区: 中国香港 / 中国大陆</span>\n       <span>上映日期: 2024-11-01(中国大陆)</span>\n       <span>片长: 136分钟</span>\n    </p>\n</div>  \n\n\n<!-- endtab -->\n\n{% endtabs %}\n\n","updated":"2024-11-18T10:52:42.667Z","path":"movie/index.html","layout":"page","_id":"cm3u077sk000iogstg6q8eh7p","content":"<div class=\"note simple\"><p>2024电影清单</p>\n</div>\n\n<div class=\"tabs\"><div class=\"nav-tabs\"><button type=\"button\" class=\"tab active\">已看</button><button type=\"button\" class=\"tab\">想看</button></div><div class=\"tab-contents\"><div class=\"tab-item-content active\"><div class=\"movie_item\">\n     <img class=\"inline-img\" src=\"https://bitiful.hudi.space/movie/p2913215934.jpeg\" style=\"height:150px\" /> \n    <p class=\"info\">\n       <span>危机航线 (2024)</span>\n       <span>主演: 刘德华 / 张子枫 / 屈楚萧 / 刘涛 / 郭晓东 </span>\n       <span>制片国家/地区: 中国香港 / 中国大陆</span>\n       <span>上映日期: 2024-09-30(中国大陆)</span>\n       <span>片长: 119分钟</span>\n    </p>\n</div>  \n<div class=\"movie_item\">\n     <img class=\"inline-img\" src=\"https://bitiful.hudi.space/movie/p2913374899.jpeg\" style=\"height:150px\" /> \n    <p class=\"info\">\n       <span>志愿军：存亡之战 (2024)</span>\n       <span>主演: 朱一龙 / 辛柏青 / 张子枫 / 朱亚文 / 陈飞宇 </span>\n       <span>制片国家/地区: 中国大陆</span>\n       <span>上映日期: 2024-09-30(中国大陆)</span>\n       <span>片长: 144分钟</span>\n    </p>\n</div>  \n\n<div class=\"movie_item\">\n     <img class=\"inline-img\" src=\"https://bitiful.hudi.space/movie/p2904477111.jpeg\" style=\"height:150px\" /> \n    <p class=\"info\">\n       <span>哥斯拉大战金刚2:帝国崛起(2024)</span>\n       <span>主演: 丽贝卡·豪尔 /布莱恩·泰里·亨利 /丹·史蒂文斯 /凯莉·霍特尔</span>\n       <span>制片国家/地区: 美国 / 澳大利亚</span>\n       <span>上映日期: 2024-03-29(美国/中国大陆) </span>\n       <span>片长: 115分钟</span>\n    </p>\n</div>  \n\n\n\n  <div class=\"movie_item\">\n     <img class=\"inline-img\" src=\"https://bitiful.hudi.space/movie/p2902227445.webp\" style=\"height:150px\" /> \n    <p class=\"info\">\n       <span>沙丘2 Dune(2024)</span>\n       <span>主演: 提莫西·查拉梅/赞达亚/丽贝卡·弗格森/</span>\n       <span>制片国家/地区: 美国 / 加拿大</span>\n       <span>上映日期: 2024-03-08(中国大陆)</span>\n       <span>片长: 166分钟</span>\n    </p>\n</div>  \n\n<div class=\"movie_item\">\n     <img class=\"inline-img\" src=\"https://bitiful.hudi.space/movie/p2903145026.jpeg\" style=\"height:150px\" /> \n    <p class=\"info\">\n       <span>第二十条 (2024)</span>\n       <span>主演: 雷佳音 / 马丽 / 赵丽颖 / 高叶 / 刘耀文</span>\n       <span>制片国家/地区: 中国大陆</span>\n       <span>上映日期: 2024-02-10(中国大陆) </span>\n       <span>片长: 141分钟</span>\n    </p>\n</div></div><div class=\"tab-item-content\"><div class=\"movie_item\">\n     <img class=\"inline-img\" src=\"https://bitiful.hudi.space/movie/p2914777370.jpeg\" style=\"height:150px\" /> \n    <p class=\"info\">\n       <span>焚城 (2024)</span>\n       <span>主演: 刘德华 / 白宇 / 莫文蔚 / 谢君豪 / 王菀之 </span>\n       <span>制片国家/地区: 中国香港 / 中国大陆</span>\n       <span>上映日期: 2024-11-01(中国大陆)</span>\n       <span>片长: 136分钟</span>\n    </p>\n</div></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n\n","cover":false,"excerpt":"","more":"<div class=\"note simple\"><p>2024电影清单</p>\n</div>\n\n<div class=\"tabs\"><div class=\"nav-tabs\"><button type=\"button\" class=\"tab active\">已看</button><button type=\"button\" class=\"tab\">想看</button></div><div class=\"tab-contents\"><div class=\"tab-item-content active\"><div class=\"movie_item\">\n     <img class=\"inline-img\" src=\"https://bitiful.hudi.space/movie/p2913215934.jpeg\" style=\"height:150px\" /> \n    <p class=\"info\">\n       <span>危机航线 (2024)</span>\n       <span>主演: 刘德华 / 张子枫 / 屈楚萧 / 刘涛 / 郭晓东 </span>\n       <span>制片国家/地区: 中国香港 / 中国大陆</span>\n       <span>上映日期: 2024-09-30(中国大陆)</span>\n       <span>片长: 119分钟</span>\n    </p>\n</div>  \n<div class=\"movie_item\">\n     <img class=\"inline-img\" src=\"https://bitiful.hudi.space/movie/p2913374899.jpeg\" style=\"height:150px\" /> \n    <p class=\"info\">\n       <span>志愿军：存亡之战 (2024)</span>\n       <span>主演: 朱一龙 / 辛柏青 / 张子枫 / 朱亚文 / 陈飞宇 </span>\n       <span>制片国家/地区: 中国大陆</span>\n       <span>上映日期: 2024-09-30(中国大陆)</span>\n       <span>片长: 144分钟</span>\n    </p>\n</div>  \n\n<div class=\"movie_item\">\n     <img class=\"inline-img\" src=\"https://bitiful.hudi.space/movie/p2904477111.jpeg\" style=\"height:150px\" /> \n    <p class=\"info\">\n       <span>哥斯拉大战金刚2:帝国崛起(2024)</span>\n       <span>主演: 丽贝卡·豪尔 /布莱恩·泰里·亨利 /丹·史蒂文斯 /凯莉·霍特尔</span>\n       <span>制片国家/地区: 美国 / 澳大利亚</span>\n       <span>上映日期: 2024-03-29(美国/中国大陆) </span>\n       <span>片长: 115分钟</span>\n    </p>\n</div>  \n\n\n\n  <div class=\"movie_item\">\n     <img class=\"inline-img\" src=\"https://bitiful.hudi.space/movie/p2902227445.webp\" style=\"height:150px\" /> \n    <p class=\"info\">\n       <span>沙丘2 Dune(2024)</span>\n       <span>主演: 提莫西·查拉梅/赞达亚/丽贝卡·弗格森/</span>\n       <span>制片国家/地区: 美国 / 加拿大</span>\n       <span>上映日期: 2024-03-08(中国大陆)</span>\n       <span>片长: 166分钟</span>\n    </p>\n</div>  \n\n<div class=\"movie_item\">\n     <img class=\"inline-img\" src=\"https://bitiful.hudi.space/movie/p2903145026.jpeg\" style=\"height:150px\" /> \n    <p class=\"info\">\n       <span>第二十条 (2024)</span>\n       <span>主演: 雷佳音 / 马丽 / 赵丽颖 / 高叶 / 刘耀文</span>\n       <span>制片国家/地区: 中国大陆</span>\n       <span>上映日期: 2024-02-10(中国大陆) </span>\n       <span>片长: 141分钟</span>\n    </p>\n</div></div><div class=\"tab-item-content\"><div class=\"movie_item\">\n     <img class=\"inline-img\" src=\"https://bitiful.hudi.space/movie/p2914777370.jpeg\" style=\"height:150px\" /> \n    <p class=\"info\">\n       <span>焚城 (2024)</span>\n       <span>主演: 刘德华 / 白宇 / 莫文蔚 / 谢君豪 / 王菀之 </span>\n       <span>制片国家/地区: 中国香港 / 中国大陆</span>\n       <span>上映日期: 2024-11-01(中国大陆)</span>\n       <span>片长: 136分钟</span>\n    </p>\n</div></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n\n"},{"title":"标签","date":"2024-10-23T04:19:50.000Z","type":"tags","comments":0,"orderby":"name","order":1,"top_img":"linear-gradient(to top, #fdcbf1 0%, #fdcbf1 1%, #e6dee9 100%)","_content":"","source":"tags/index.md","raw":"---\ntitle: 标签\ndate: 2024-10-23 12:19:50\ntype: 'tags'\ncomments: false\norderby: name\norder: 1\ntop_img: 'linear-gradient(to top, #fdcbf1 0%, #fdcbf1 1%, #e6dee9 100%)'\n---\n","updated":"2024-10-24T11:40:00.145Z","path":"tags/index.html","layout":"page","_id":"cm3u077sn000mogst8hos91tz","content":"","cover":false,"excerpt":"","more":""},{"title":"时间轴","date":"2024-11-05T04:19:50.000Z","type":"timeline","comments":0,"top_img":"linear-gradient(to top, #3b41c5 0%, #a981bb 49%, #ffc8a9 100%)","_content":"{% timeline 2024,blue %}\n\n<!-- timeline 10-18 -->\n  用hexo️的Redefine主题搭建博客，挂载在GitHub Page用作测试使用。域名：https://blog.suxichuan.icu 同一天注册了 www.suxichuan.icu 域名，因为便宜。\n<!-- endtimeline -->\n\n\n<!-- timeline 10-22 -->\n  用hexo️的butterfly主题搭建这个博客。域名：https://www.hudi.space\n<!-- endtimeline -->\n\n<!-- timeline 10-25 -->\n  博客中引入了live2d看板娘。注册了多吉云，为后续的cdn和对象存储做准备。\n<!-- endtimeline -->\n\n<!-- timeline 10-29 -->\n  购买了 www.hudi.space 这个域名和华为云的服务器。同时对这个域名做了ICP的备案\n<!-- endtimeline -->\n\n<!-- timeline 11-3 -->\n  博客中加入了诗词的widget看板。\n<!-- endtimeline -->\n\n<!-- timeline 11-5 -->\n  ICP备案完成，正式在华为云部署了该博客系统。\n<!-- endtimeline -->\n\n{% endtimeline %}\n","source":"timeline/index.md","raw":"---\ntitle: 时间轴\ndate: 2024-11-05 12:19:50\ntype: 'timeline'\ncomments: false\ntop_img: 'linear-gradient(to top, #3b41c5 0%, #a981bb 49%, #ffc8a9 100%)'\n---\n{% timeline 2024,blue %}\n\n<!-- timeline 10-18 -->\n  用hexo️的Redefine主题搭建博客，挂载在GitHub Page用作测试使用。域名：https://blog.suxichuan.icu 同一天注册了 www.suxichuan.icu 域名，因为便宜。\n<!-- endtimeline -->\n\n\n<!-- timeline 10-22 -->\n  用hexo️的butterfly主题搭建这个博客。域名：https://www.hudi.space\n<!-- endtimeline -->\n\n<!-- timeline 10-25 -->\n  博客中引入了live2d看板娘。注册了多吉云，为后续的cdn和对象存储做准备。\n<!-- endtimeline -->\n\n<!-- timeline 10-29 -->\n  购买了 www.hudi.space 这个域名和华为云的服务器。同时对这个域名做了ICP的备案\n<!-- endtimeline -->\n\n<!-- timeline 11-3 -->\n  博客中加入了诗词的widget看板。\n<!-- endtimeline -->\n\n<!-- timeline 11-5 -->\n  ICP备案完成，正式在华为云部署了该博客系统。\n<!-- endtimeline -->\n\n{% endtimeline %}\n","updated":"2024-11-06T02:52:06.997Z","path":"timeline/index.html","layout":"page","_id":"cm3u077so000nogst1udzgnrr","content":"<div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2024</p>\n</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-18</p>\n</div></div><div class='timeline-item-content'><p>  用hexo️的Redefine主题搭建博客，挂载在GitHub Page用作测试使用。域名：<a href=\"https://blog.suxichuan.icu/\">https://blog.suxichuan.icu</a> 同一天注册了 <a href=\"http://www.suxichuan.icu/\">www.suxichuan.icu</a> 域名，因为便宜。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-22</p>\n</div></div><div class='timeline-item-content'><p>  用hexo️的butterfly主题搭建这个博客。域名：<a href=\"https://www.hudi.space/\">https://www.hudi.space</a></p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-25</p>\n</div></div><div class='timeline-item-content'><p>  博客中引入了live2d看板娘。注册了多吉云，为后续的cdn和对象存储做准备。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-29</p>\n</div></div><div class='timeline-item-content'><p>  购买了 <a href=\"http://www.hudi.space/\">www.hudi.space</a> 这个域名和华为云的服务器。同时对这个域名做了ICP的备案</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-3</p>\n</div></div><div class='timeline-item-content'><p>  博客中加入了诗词的widget看板。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-5</p>\n</div></div><div class='timeline-item-content'><p>  ICP备案完成，正式在华为云部署了该博客系统。</p>\n</div></div></div>\n","cover":false,"excerpt":"","more":"<div class=\"timeline blue\"><div class='timeline-item headline'><div class='timeline-item-title'><div class='item-circle'><p>2024</p>\n</div></div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-18</p>\n</div></div><div class='timeline-item-content'><p>  用hexo️的Redefine主题搭建博客，挂载在GitHub Page用作测试使用。域名：<a href=\"https://blog.suxichuan.icu/\">https://blog.suxichuan.icu</a> 同一天注册了 <a href=\"http://www.suxichuan.icu/\">www.suxichuan.icu</a> 域名，因为便宜。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-22</p>\n</div></div><div class='timeline-item-content'><p>  用hexo️的butterfly主题搭建这个博客。域名：<a href=\"https://www.hudi.space/\">https://www.hudi.space</a></p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-25</p>\n</div></div><div class='timeline-item-content'><p>  博客中引入了live2d看板娘。注册了多吉云，为后续的cdn和对象存储做准备。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>10-29</p>\n</div></div><div class='timeline-item-content'><p>  购买了 <a href=\"http://www.hudi.space/\">www.hudi.space</a> 这个域名和华为云的服务器。同时对这个域名做了ICP的备案</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-3</p>\n</div></div><div class='timeline-item-content'><p>  博客中加入了诗词的widget看板。</p>\n</div></div><div class='timeline-item'><div class='timeline-item-title'><div class='item-circle'><p>11-5</p>\n</div></div><div class='timeline-item-content'><p>  ICP备案完成，正式在华为云部署了该博客系统。</p>\n</div></div></div>\n"}],"Post":[{"title":"Flume基础学习","thumbnail":"https://bitiful.hudi.space/posts/flume.jpeg","cover":"https://bitiful.hudi.space/posts/flume.jpeg","description":"Flume日志采集工具，可以配合第三方的前端埋点SDK去实现行为日志采集，到目前为止在工作中也没有使用到和涉及到。当时在使用这个工具时，学习的内容的深度相对来说也比较浅薄。后续会根据学习内容和规划做相应的调整，完善相关的学习笔记。本文主要介绍了Flume工具的基本配置使用、各个组件在其中发挥的作用、内部架构等。","abbrlink":"1e46a8be","_content":"\n# Flume基础学习（一）\n\n​\t\tFlume日志采集工具，可以配合第三方的前端埋点SDK去实现行为日志采集，到目前为止在工作中也没有使用到和涉及到。当时在使用这个工具时，学习的内容的深度相对来说也比较浅薄。后续会根据学习内容和规划做相应的调整，完善相关的学习笔记。本文主要介绍了Flume工具的基本配置使用、各个组件在其中发挥的作用、内部架构等。\n\n## 一、Flume概述：\n\n### 1、定义：\n\nFlume是Cloudera提供的一个高可用的，高可靠的，分布式的海量日志采集、聚合和传输的系统。Flume基于流式架构，灵活简单。\n\n### 2、Flume架构\n\n<img src=\"https://bitiful.hudi.space/posts/flume_topology.jpg\" style=\"zoom:150%;\" />\n\n- agent：\n\n  - Agent是一个JVM进程，它以事件的形式将数据从源头送至目的。\n  - Agent主要有3个部分组成，Source、Channel、Sink。\n\n- source\n\n  Source是负责接收数据到Flume Agent的组件。Source组件可以处理各种类型、各种格式的日志数据，包括**avro**、thrift、**exec**、jms、**spooling directory**、**netcat**、 **taildir** 、sequence generator、syslog、http、legacy。\n\n- sink\n\n  - Sink不断地轮询Channel中的事件且批量地移除它们，并将这些事件批量写入到存储或索引系统、或者被发送到另一个Flume Agent。\n  - Sink组件目的地包括**hdfs**、**logger**、**avro**、thrift、ipc、**file**、**HBase**、solr、自定义。\n\n- channel\n\n  - Channel是位于Source和Sink之间的缓冲区。因此，Channel允许Source和Sink运作在不同的速率上。Channel是线程安全的，可以同时处理几个Source的写入操作和几个Sink的读取操作。\n  - Flume自带两种Channel：Memory Channel和File Channel。\n  - Memory Channel是内存中的队列。Memory Channel在不需要关心数据丢失的情景下适用。如果需要关心数据丢失，那么Memory Channel就不应该使用，因为程序死亡、机器宕机或者重启都会导致数据丢失。\n  - File Channel将所有事件写到磁盘。因此在程序关闭或机器宕机的情况下不会丢失数据。\n\n- event\n\n  传输单元，Flume数据传输的基本单元，以Event的形式将数据从源头送至目的地。Event由**Header**和**Body**两部分组成，Header用来存放该event的一些属性，为K-V结构，Body用来存放该条数据，形式为字节数组。\n\n  | header(k,v) | body(byte array) |\n  | ----------- | ---------------- |\n\n## 二、Flume入门\n\n### 1、安装Flume地址\n\n- 官网地址：http://flume.apache.org/\n- 文档地址：http://flume.apache.org/FlumeUserGuide.html\n\n### 2、安装部署\n\nhadoop版本3.x要删除lib文件夹下的guava-11.0.2.jar包以兼容Hadoop 3.x\n\n### 3、官方入门案例\n\n1. 需求：使用Flume监听一个端口，收集该端口数据，并打印到控制台。\n\n2. 安装netcat工具\n\n   ~~~shell\n   sudo yun install -y nc\n   ~~~\n\n1. 创建Flume Agent配置文件flume-netcat-logger.conf\n\n   ~~~\n   添加内容如下：\n   # Name the components on this agent    #a1表示agent的名字\n   a1.sources = r1  ##r1表示a1 agent一个source的名字\n   a1.sinks = k1    ##k1表示a1 agent一个sink的名字\n   a1.channels = c1 ##c1表示a1 agent一个channel的名字\n   \n   # Describe/configure the source\n   a1.sources.r1.type = netcat   ##表示r1 source的类型也就是输入源的类型\n   a1.sources.r1.bind = localhost  ##要监听的主机的IP \n   a1.sources.r1.port = 44444  ###要监听的端口号是多少\n   \n   # Describe the sink\n   a1.sinks.k1.type = logger   ##a1的数据输出的目的地是控制台\n   \n   # Use a channel which buffers events in memory\n   a1.channels.c1.type = memory   ##表示a1 channel的类型是memory内存型\n   a1.channels.c1.capacity = 1000 ##表示a1 channel的事件容量是1000条\n   a1.channels.c1.transactionCapacity = 100  ##表示a1的channel收集到100条event后再去提交事务\n   \n   # Bind the source and sink to the channel\n   a1.sources.r1.channels = c1   ##表示吧r1和c1连接起来\n   a1.sinks.k1.channel = c1      ##表示把k1和c1连接起来\n   ~~~\n\n2. 启动flume\n\n   ~~~\n   bin/flume-ng agent --conf conf/ --name a1 --conf-file job/flume-netcat-logger.conf -Dflume.root.logger=INFO,console\n   ~~~\n\n   ```\n    bin/flume-ng agent -c conf/ -n a1 -f job/flume-netcat-logger.conf -Dflume.root.logger=INFO,console\n   ```\n\n   参数说明：\n\n   ​    --conf/-c：表示配置文件存储在conf/目录\n\n   ​    --name/-n：表示给agent起名为a1\n\n   ​    --conf-file/-f：flume本次启动读取的配置文件是在job文件夹下的flume-telnet.conf文件。\n\n   ​    -Dflume.root.logger=INFO,console ：-D表示flume运行时动态修改flume.root.logger参数属性值，并将控制台日志打印级别设置为INFO级别。日志级别包括:log、info、warn、error。\n\n**#实时监控单个追加文件案例**。\n\n1. 需求说明：实时监控Hive日志，并上传到HDFS中\n\n2. 配置文件编写：\n\n   ~~~\n   ##自己编写的配置\n   a1.sources = r1\n   a1.channels = c1\n   a1.sinks=k1\n   \n   a1.sources.r1.type = TAILDIR\n   a1.sources.r1.positionFile =/home/hdfs/flume/taildir_position.json\n   a1.sources.r1.filegroups = f1\n   a1.sources.r1.filegroups.f1 = /home/hdfs/flume/data/.*\\.txt\n   \n   a1.sinks.k1.type=hdfs\n   a1.sinks.k1.hdfs.path = hdfs://master:8020/flume/events/%Y-%m-%d/%H%M/%S\n   a1.sinks.k1.hdfs.filePrefix = events-\n   a1.sinks.k1.hdfs.round = true\n   a1.sinks.k1.hdfs.roundValue = 10\n   a1.sinks.k1.hdfs.roundUnit = minute\n   a1.sinks.k1.hdfs.useLocalTimeStamp=true\n   \n   \n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   a1.sinks.k1.channel = c1\n   a1.sources.r1.channels = c1\n   \n   #####################################################################################################\n   #####################################################################################################\n   #案例\n   # Name the components on this agent\n   a2.sources = r2\n   a2.sinks = k2\n   a2.channels = c2\n   \n   # Describe/configure the source\n   a2.sources.r2.type = exec\n   a2.sources.r2.command = tail -F /opt/module/hive/logs/hive.log\n   \n   # Describe the sink\n   a2.sinks.k2.type = hdfs\n   a2.sinks.k2.hdfs.path = hdfs://master:8020/flume/%Y%m%d/%H\n   #上传文件的前缀\n   a2.sinks.k2.hdfs.filePrefix = logs-\n   #是否按照时间滚动文件夹\n   a2.sinks.k2.hdfs.round = true\n   #多少时间单位创建一个新的文件夹\n   a2.sinks.k2.hdfs.roundValue = 1\n   #重新定义时间单位\n   a2.sinks.k2.hdfs.roundUnit = hour\n   #是否使用本地时间戳\n   a2.sinks.k2.hdfs.useLocalTimeStamp = true\n   #积攒多少个Event才flush到HDFS一次\n   a2.sinks.k2.hdfs.batchSize = 100\n   #设置文件类型，可支持压缩\n   a2.sinks.k2.hdfs.fileType = DataStream\n   #多久生成一个新的文件\n   a2.sinks.k2.hdfs.rollInterval = 60\n   #设置每个文件的滚动大小\n   a2.sinks.k2.hdfs.rollSize = 134217700\n   #文件的滚动与Event数量无关\n   a2.sinks.k2.hdfs.rollCount = 0\n   \n   # Use a channel which buffers events in memory\n   a2.channels.c2.type = memory\n   a2.channels.c2.capacity = 1000\n   a2.channels.c2.transactionCapacity = 100\n   \n   # Bind the source and sink to the channel\n   a2.sources.r2.channels = c2\n   a2.sinks.k2.channel = c2\n   \n   ##########################################################################################################################################################################################################\n   #案例：\n   2. 入门案例 2.1  实时监控单个追加文件,将内容打印到控制台\n   配置文件名字: exec-flume-logger.conf\n   ##name\n   a1.sources = r1\n   a1.channels = c1\n   a1.sinks = k1\n   \n   ##source\n   a1.sources.r1.type = exec\n   a1.sources.r1.command = tail -F /home/hdfs/test/data.txt\n   \n   ##channel\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   ###sink\n   a1.sinks.k1.type = logger\n   \n   ##bind\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1 \n   ~~~\n\n**＃实时监控目录下多个新文件**\n\n1. 案例需求：使用Flume监听整个目录的文件，并上传至HDFS\n\n2. 配置文件编写\n\n   ~~~\n   ###我配置写的Spooling Directory Source\n   spooling-flume-hdfs.conf 配置文件如下\n   #name\n   a1.sources = r1\n   a1.sinks = k1\n   a1.channels = c1 \n   #sources\n   a1.sources.r1.type = spooldir\n   a1.sources.r1.spoolDir = /home/hdfs/test/spoolDir \n   a1.sources.r1.fileHeader = true\n   #sinks\n   a1.sinks.k1.type = hdfs\n   a1.sinks.k1.hdfs.path =  hdfs://master:8020/flume/events/%Y-%m-%d\n   a1.sinks.k1.hdfs.filePrefix = logs-\n   a1.sinks.k1.hdfs.round = true\n   a1.sinks.k1.hdfs.roundValue = 10\n   a1.sinks.k1.hdfs.roundUnit = second\n   a1.sinks.k1.hdfs.useLocalTimeStamp = true\n   ##channels\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   ##bind\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1\n   ~~~\n\n   ~~~\n   4. 入门案例 3  实时监控目录下的新文件,将内容上传到HDFS中\n   配置文件名字: spooling-flume-hdfs.conf\n   \n   #Named\n   a1.sources = r1\n   a1.channels = c1\n   a1.sinks = k1 \n   \n   #Source\n   a1.sources.r1.type = spooldir\n   a1.sources.r1.spoolDir = /opt/module/flume-1.9.0/jobs/spooling\n   a1.sources.r1.fileSuffix = .COMPLETED\n   a1.sources.r1.ignorePattern = .*\\.tmp\n   \n   \n   #Channel\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   #Sink\n   a1.sinks.k1.type = hdfs\n   a1.sinks.k1.hdfs.path = hdfs://hadoop102:8020/flume/%Y%m%d/%H\n   #上传文件的前缀\n   a1.sinks.k1.hdfs.filePrefix = logs-\n   #是否按照时间滚动文件夹\n   a1.sinks.k1.hdfs.round = true\n   #多少时间单位创建一个新的文件夹\n   a1.sinks.k1.hdfs.roundValue = 1\n   #重新定义时间单位\n   a1.sinks.k1.hdfs.roundUnit = hour\n   #是否使用本地时间戳\n   a1.sinks.k1.hdfs.useLocalTimeStamp = true\n   #积攒多少个Event才flush到HDFS一次\n   a1.sinks.k1.hdfs.batchSize = 100\n   #设置文件类型，可支持压缩\n   a1.sinks.k1.hdfs.fileType = DataStream\n   #多久生成一个新的文件\n   a1.sinks.k1.hdfs.rollInterval = 60\n   #设置每个文件的滚动大小\n   a1.sinks.k1.hdfs.rollSize = 134217700\n   #文件的滚动与Event数量无关\n   a1.sinks.k1.hdfs.rollCount = 0\n   \n   #Bind\n   a1.sources.r1.channels = c1 \n   a1.sinks.k1.channel = c1 \n   ~~~\n\n**＃实时监控多个目录下的多个追加文件**\n\nExec source适用于监控一个实时追加的文件，不能实现断点续传；Spooldir Source适合用于同步新文件，但不适合对实时追加日志的文件进行监听并同步；而Taildir Source适合用于监听多个实时追加的文件，并且能够实现断点续传。\n\n> 案例需求:使用Flume监听整个目录的实时追加文件，并上传至HDFS\n\n- 配置文件编写：\n\n  ~~~\n  #name\n  a1.sources = r1\n  a1.sinks = k1\n  a1.channels = c1\n  \n  #sources\n  a1.sources.r1.type = TAILDIR\n  a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json\n  a1.sources.r1.filegroups = f1 f2\n  a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/.*\\.txt\n  a1.sources.r1.filegroups.f2 = /home/hdfs/test/data/.*\\.log\n  \n  #sinks\n  a1.sinks.k1.type = hdfs\n  a1.sinks.k1.hdfs.path =  hdfs://master:8020/flume/tail/%Y-%m-%d\n  a1.sinks.k1.hdfs.filePrefix = tail-\n  a1.sinks.k1.hdfs.round = true\n  a1.sinks.k1.hdfs.roundValue = 10\n  a1.sinks.k1.hdfs.roundUnit = second\n  a1.sinks.k1.hdfs.useLocalTimeStamp = true\n  \n  ##channels\n  a1.channels.c1.type = memory\n  a1.channels.c1.capacity = 10000\n  a1.channels.c1.transactionCapacity = 100\n  \n  #bind\n  a1.sources.r1.channels = c1\n  a1.sinks.k1.channel = c1\n  ~~~\n\n## 三、Flume进阶\n\n### 1、Flume事务\n\n![](https://bitiful.hudi.space/posts/flume.jpg)\n\n### 2、Agent内部原理\n\n![](https://bitiful.hudi.space/posts/Agent.jpg)\n\n- source采集到日志服务器或者是端口等的数据时，报数据包装成event\n- 在批量的放入临时缓存putlist，并通过channel processor处理事件\n- channel processor将事件传递给拦截器链，对事件进行过滤\n- 再把事件还回channel processor并将每个事件给channel selector\n- 返回写入事件的channel 列表\n- 根据channel选择器的结果，将事件写入对应得channel中\n- doTake将事件批量的取到sink processor中再通过事务写入到相应的目标中\n\n1. ChannelSelector\n\n   ChannelSelector的作用就是选出Event将要被发往哪个Channel。其共有两种类型，分别是Replicating（复制）和Multiplexing（多路复用）。\n\n   ReplicatingSelector会将同一个Event发往所有的Channel，Multiplexing会根据相应的原则，将不同的Event发往不同的Channel。\n\n2. SinkProcessor\n\n   SinkProcessor共有三种类型，分别是DefaultSinkProcessor、LoadBalancingSinkProcessor和FailoverSinkProcessor\n\n   DefaultSinkProcessor对应的是单个的Sink，LoadBalancingSinkProcessor和FailoverSinkProcessor对应的是Sink Group，LoadBalancingSinkProcessor可以实现负载均衡的功能，FailoverSinkProcessor可以错误恢复的功能。\n\n### 3、Flume的拓扑结构\n\n1. 简单串联：这种模式是将多个flume顺序连接起来了，从最初的source开始到最终sink传送的目的存储系统。此模式不建议桥接过多的flume数量， flume数量过多不仅会影响传输速率，而且一旦传输过程中某个节点flume宕机，会影响整个传输系统。\n\n   即，一个agent的sink连接另个agent的source\n\n2. 复制和多虑复用：Flume支持将事件流向一个或者多个目的地。这种模式可以将相同数据复制到多个channel中，或者将不同数据分发到不同的channel中，sink可以选择传送到不同的目的地。\n\n3. 负载均衡和故障转移：Flume支持使用将多个sink逻辑上分到一个sink组，sink组配合不同的SinkProcessor可以实现负载均衡和错误恢复的功能。\n\n4. 聚合：\n\n   这种模式是我们最常见的，也非常实用，日常web应用通常分布在上百个服务器，大者甚至上千个、上万个服务器。产生的日志，处理起来也非常麻烦。用flume的这种组合方式能很好的解决这一问题，每台服务器部署一个flume采集日志，传送到一个集中收集日志的flume，再由此flume上传到hdfs、hive、hbase等，进行日志分析。\n\n### 4、Flume开发案例\n\n>案例需求：使用Flume-1监控文件变动，Flume-1将变动内容传递给Flume-2，Flume-2负责存储到HDFS。同时Flume-1将变动内容传递给Flume-3，Flume-3负责输出到Local FileSystem。\n\n- 配置文件编写：\n\n  ~~~\n  Flume-1\n  #name\n  a1.sources = r1\n  a1.sinks = k1 k2\n  a1.channels = c1 c2\n  \n  #sources\n  a1.sources.r1.type = TAILDIR\n  a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json\n  a1.sources.r1.filegroups = f1\n  a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/log.log\n  \n  a1.sources.r1.selector.type = replicating\n  \n  ##sinks\n  a1.sinks.k1.type = avro\n  a1.sinks.k1.hostname = 192.168.157.10\n  a1.sinks.k1.port = 6666\n  \n  a1.sinks.k2.type = avro\n  a1.sinks.k2.hostname = 192.168.157.10\n  a1.sinks.k2.port = 7777\n  \n  ##channels\n  a1.channels.c1.type = memory\n  a1.channels.c1.capacity = 10000\n  a1.channels.c1.transactionCapacity = 100\n  \n  a1.channels.c2.type = memory\n  a1.channels.c2.capacity = 10000\n  a1.channels.c2.transactionCapacity = 100\n  \n  ##bind\n  a1.sources.r1.channels = c1\n  a1.sinks.k1.channel = c1\n  \n  a1.sources.r1.channels = c2\n  a1.sinks.k2.channel = c2\n  \n  flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume-01.conf -Dflume.root.logger=INFO,console\n  #############################################################################################\n  Flume-2\n  #name\n  a2.sources = r2\n  a2.sinks = k2\n  a2.channels = c2\n  \n  #sources\n  a2.sources.r2.type = avro\n  a2.sources.r2.bind = localhost\n  a2.sources.r2.port = 6666\n  \n  ##sinks\n  a2.sinks.k2.type = hdfs\n  a2.sinks.k2.hdfs.path =  hdfs://master:8020/flume/threeflume/%Y-%m-%d\n  a2.sinks.k2.hdfs.filePrefix = log-\n  a2.sinks.k2.hdfs.round = true\n  a2.sinks.k2.hdfs.roundValue = 10\n  a2.sinks.k2.hdfs.roundUnit = second\n  a2.sinks.k2.hdfs.useLocalTimeStamp = true\n  \n  ##channels\n  a2.channels.c2.type = memory\n  a2.channels.c2.capacity = 10000\n  a2.channels.c2.transactionCapacity = 100\n  \n  ##bind\n  a2.sources.r2.channels = c2\n  a2.sinks.k2.channel = c2\n  \n  flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume-02.conf -Dflume.root.logger=INFO,console\n  ################################################################################################\n  Flume-3\n  #name\n  a3.sources = r3\n  a3.sinks = k3\n  a3.channels = c3\n  \n  #sources\n  a3.sources.r3.type = avro\n  a3.sources.r3.bind = localhost\n  a3.sources.r3.port = 7777\n  \n  ##sinks\n  a3.sinks.k3.type = file_roll   ##采集到的数据放到本地Stores events on the local filesystem. \n  a3.sinks.k3.sink.directory = /opt/module/flume-1.9.0/jobs/fileroll\n  \n  ##channels\n  a3.channels.c3.type = memory\n  a3.channels.c3.capacity = 10000\n  a3.channels.c3.transactionCapacity = 100\n  \n  ##bind\n  a3.sources.r3.channels = c3\n  a3.sinks.k3.channel = c3\n  \n  flume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume-03.conf -Dflume.root.logger=INFO,console\n  ~~~\n\n- 输出的本地目录必须是已经存在的目录，如果该目录不存在，并不会创建新的目录。\n\n**#负载均衡和故障转移**\n\n- ##### 故障转移：案例分析\n\n使用Flume1监控一个端口，其sink组中的sink分别对接Flume2和Flume3，采用FailoverSinkProcessor，实现故障转移的功能。\n\n**使用jps -ml查看Flume进程。**\n\n~~~\nflume01-failover.conf\n\n#name\na1.sources = r1\na1.sinkgroups = g1\na1.sinks = k1 k2\na1.channels = c1\n\n\n#sources\na1.sources.r1.type = netcat\na1.sources.r1.bind = localhost\na1.sources.r1.port = 44444\n\n\n\na1.sinkgroups.g1.processor.type = failover\na1.sinkgroups.g1.processor.priority.k1 = 5\na1.sinkgroups.g1.processor.priority.k2 = 10\na1.sinkgroups.g1.processor.maxpenalty = 10000\n\n##sinks\na1.sinks.k1.type = avro\na1.sinks.k1.hostname = localhost\na1.sinks.k1.port = 6666\n\na1.sinks.k2.type = avro\na1.sinks.k2.hostname = localhost\na1.sinks.k2.port = 7777\n\n##channels\na1.channels.c1.type = memory\na1.channels.c1.capacity = 10000\na1.channels.c1.transactionCapacity = 100\n\n\n##bind\na1.sinkgroups.g1.sinks = k1 k2\na1.sources.r1.channels = c1\na1.sinks.k1.channel = c1\na1.sinks.k2.channel = c1\n\nflume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-failover.conf -Dflume.root.logger=INFO,console\n################################################################################################\nflume02-failover.conf\n#name\na2.sources = r2\na2.sinks = k2\na2.channels = c2\n\n#sources\na2.sources.r2.type = avro\na2.sources.r2.bind = localhost\na2.sources.r2.port = 6666\n\n##sinks\na2.sinks.k2.type = logger\n\n##channels\na2.channels.c2.type = memory\na2.channels.c2.capacity = 10000\na2.channels.c2.transactionCapacity = 100\n\n##bind\na2.sources.r2.channels = c2\na2.sinks.k2.channel = c2\n\nflume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume02-failover.conf -Dflume.root.logger=INFO,console\n\n################################################################################################\n\nflume03-failover.conf\n#name\na3.sources = r3\na3.sinks = k3\na3.channels = c3\n\n#sources\na3.sources.r3.type = avro\na3.sources.r3.bind = localhost\na3.sources.r3.port = 7777\n\n##sinks\na3.sinks.k3.type = logger\n\n##channels\na3.channels.c3.type = memory\na3.channels.c3.capacity = 10000\na3.channels.c3.transactionCapacity = 100\n\n##bind\na3.sources.r3.channels = c3\na3.sinks.k3.channel = c3\n\nflume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume03-failover.conf -Dflume.root.logger=INFO,console\n~~~\n\n- 负载均衡\n\n\n~~~txt\nflume01-balance.conf\n\n#name\na1.sources = r1\na1.sinks = k1 k2\na1.channels = c1\n\n\n#sources\na1.sources.r1.type = netcat\na1.sources.r1.bind = localhost\na1.sources.r1.port = 44444\n\n\n\na1.sinkgroups.g1.processor.type = load_balance\na1.sinkgroups.g1.processor.backoff = true\na1.sinkgroups.g1.processor.selector = random\n\n##sinks\na1.sinks.k1.type = avro\na1.sinks.k1.hostname = localhost\na1.sinks.k1.port = 6666\n\na1.sinks.k2.type = avro\na1.sinks.k2.hostname = localhost\na1.sinks.k2.port = 7777\n\n##channels\na1.channels.c1.type = memory\na1.channels.c1.capacity = 10000\na1.channels.c1.transactionCapacity = 100\n\n\n##bind\na1.sources.r1.channels = c1\na1.sinks.k1.channel = c1\na1.sinks.k2.channel = c1\n\nflume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-balance.conf -Dflume.root.logger=INFO,console\n\n################################################################################################\n\nflume02-balance.conf\n#name\na2.sources = r2\na2.sinks = k2\na2.channels = c2\n\n#sources\na2.sources.r2.type = avro\na2.sources.r2.bind = localhost\na2.sources.r2.port = 6666\n\n##sinks\na2.sinks.k2.type = logger\n\n##channels\na2.channels.c2.type = memory\na2.channels.c2.capacity = 10000\na2.channels.c2.transactionCapacity = 100\n\n##bind\na2.sources.r2.channels = c2\na2.sinks.k2.channel = c2\n\nflume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume02-balance.conf -Dflume.root.logger=INFO,console\n\n################################################################################################\n\n\nflume03-balance.conf\n#name\na3.sources = r3\na3.sinks = k3\na3.channels = c3\n\n#sources\na3.sources.r3.type = avro\na3.sources.r3.bind = localhost\na3.sources.r3.port = 7777\n\n##sinks\na3.sinks.k3.type = logger\n\n##channels\na3.channels.c3.type = memory\na3.channels.c3.capacity = 10000\na3.channels.c3.transactionCapacity = 100\n\n##bind\na3.sources.r3.channels = c3\na3.sinks.k3.channel = c3\n\nflume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume03-balance.conf -Dflume.root.logger=INFO,console\n~~~\n\n- 聚合\n\n\n>案例需求：hadoop102上的Flume-1监控文件/opt/module/group.log，hadoop103上的Flume-2监控某一个端口的数据流，Flume-1与Flume-2将数据发送给hadoop104上的Flume-3，Flume-3将最终数据打印到控制台。\n\n~~~\nflume01-aggre.conf\n\n#name\na1.sources = r1\na1.sinks = k1\na1.channels = c1\n\n#sources\na1.sources.r1.type = TAILDIR\na1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json\na1.sources.r1.filegroups = f1\na1.sources.r1.filegroups.f1 = /home/hdfs/test/data/log.log\n\na1.sources.r1.selector.type = replicating\n\n##sinks\na1.sinks.k1.type = avro\na1.sinks.k1.hostname = slave-02\na1.sinks.k1.port = 6666\n\n##channels\na1.channels.c1.type = memory\na1.channels.c1.capacity = 10000\na1.channels.c1.transactionCapacity = 100\n\n##bind\na1.sources.r1.channels = c1\na1.sinks.k1.channel = c1\n\n\nflume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-aggre.conf -Dflume.root.logger=INFO,console\n\n###############################################################################################\n\nflume02-aggre.conf\n\n#name\na1.sources = r1\na1.sinks = k1\na1.channels = c1\n\n\n#sources\na1.sources.r1.type = netcat\na1.sources.r1.bind = localhost\na1.sources.r1.port = 44444\n\n##sinks\na1.sinks.k1.type = avro\na1.sinks.k1.hostname = slave-02\na1.sinks.k1.port = 6666\n\n\n##channels\na1.channels.c1.type = memory\na1.channels.c1.capacity = 10000\na1.channels.c1.transactionCapacity = 100\n\n\n##bind\na1.sources.r1.channels = c1\na1.sinks.k1.channel = c1\n\nflume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume02-aggre.conf -Dflume.root.logger=INFO,console\n\n################################################################################################\n\n\nflume03-aggre.conf\n#name\na2.sources = r2\na2.sinks = k2\na2.channels = c2\n\n#sources\na2.sources.r2.type = avro\na2.sources.r2.bind = slave-02  ##此处不能写localhost\na2.sources.r2.port = 6666\n\n##sinks\na2.sinks.k2.type = logger\n\n##channels\na2.channels.c2.type = memory\na2.channels.c2.capacity = 10000\na2.channels.c2.transactionCapacity = 100\n\n##bind\na2.sources.r2.channels = c2\na2.sinks.k2.channel = c2\n\nflume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume03-aggre.conf -Dflume.root.logger=INFO,console\n\n\n~~~\n\n- 自定义interceptor\n\n\n>需求：使用Flume采集服务器本地日志，需要按照日志类型的不同，将不同种类的日志发往不同的分析系统。\n\n1. 添加maven依赖\n\n   ~~~xml\n    <dependencies>\n           <dependency>\n               <groupId>org.apache.flume</groupId>\n               <artifactId>flume-ng-core</artifactId>\n               <version>1.9.0</version>\n           </dependency>\n    </dependencies>\n   ~~~\n\n2. 编写interceptor\n\n   ~~~java\n   public class MyInterceptor  implements Interceptor {\n       @Override\n       public void initialize() { }\n       @Override\n       public Event intercept(Event event) {\n           byte[] body = event.getBody();\n           String s = new String(body, StandardCharsets.UTF_8);\n           if (s.contains(\"#\") || s.contains(\"*\")) {\n               event.getHeaders().put(\"type\",\"char\");\n           }else if (s.contains(\"1\")){\n               event.getHeaders().put(\"type\",\"num\");\n           }else {\n               event.getHeaders().put(\"type\",\"word\");\n           }\n           return event;\n       }\n       @Override\n       public List<Event> intercept(List<Event> list) {\n           for (Event event : list) {\n               intercept(event);\n           }\n           return list;\n       }\n       @Override\n       public void close() { }\n       public static class build implements Interceptor.Builder{\n           @Override\n           public Interceptor build() {\n               return new MyInterceptor();\n           }\n           @Override\n           public void configure(Context context) { }\n       }\n   }\n   ~~~\n\n3. 编写flume配置文件\n\n   ~~~\n   flume01-interceptor.conf\n   \n   #name\n   a1.sources = r1\n   a1.sinks = k1 k2 k3\n   a1.channels = c1 c2 c3\n   \n   \n   #sources\n   a1.sources.r1.type = netcat\n   a1.sources.r1.bind = localhost\n   a1.sources.r1.port = 44444\n   a1.sources.r1.interceptors = i1\n   a1.sources.r1.interceptors.i1.type = com.suhe.interceptor.MyInterceptor$Builder\n   a1.sources.r1.selector.type = multiplexing\n   a1.sources.r1.selector.header = type\n   a1.sources.r1.selector.mapping.char = c1\n   a1.sources.r1.selector.mapping.num = c2\n   a1.sources.r1.selector.mapping.word = c3\n   \n   ##sinks\n   a1.sinks.k1.type = avro\n   a1.sinks.k1.hostname = localhost\n   a1.sinks.k1.port = 6666\n   \n   a1.sinks.k2.type = avro\n   a1.sinks.k2.hostname = localhost\n   a1.sinks.k2.port = 7777\n   \n   a1.sinks.k3.type = avro\n   a1.sinks.k3.hostname = localhost\n   a1.sinks.k3.port = 8888\n   \n   \n   \n   ##channels\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   a1.channels.c2.type = memory\n   a1.channels.c2.capacity = 10000\n   a1.channels.c2.transactionCapacity = 100\n   \n   a1.channels.c3.type = memory\n   a1.channels.c3.capacity = 10000\n   a1.channels.c3.transactionCapacity = 100\n   \n   ##bind\n   a1.sources.r1.channels = c1 c2 c3\n   a1.sinks.k1.channel = c1\n   a1.sinks.k2.channel = c2\n   a1.sinks.k3.channel = c3\n   \n   flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-interceptor.conf -Dflume.root.logger=INFO,console\n   #############################################################################################\n   \n   \n   \n   flume02-interceptor.conf\n   #name\n   a1.sources = r1\n   a1.sinks = k1\n   a1.channels = c1\n   \n   #sources\n   a1.sources.r1.type = avro\n   a1.sources.r1.bind = localhost\n   a1.sources.r1.port = 6666\n   \n   ##sinks\n   a1.sinks.k1.type = logger\n   \n   ##channels\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   ##bind\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1\n   \n   flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume02-interceptor.conf -Dflume.root.logger=INFO,console\n   \n   \n   #############################################################################################\n   \n   flume03-interceptor.conf\n   #name\n   a1.sources = r1\n   a1.sinks = k1\n   a1.channels = c1\n   \n   #sources\n   a1.sources.r1.type = avro\n   a1.sources.r1.bind = localhost\n   a1.sources.r1.port = 7777\n   \n   ##sinks\n   a1.sinks.k1.type = logger\n   \n   ##channels\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   ##bind\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1\n   \n   flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume03-interceptor.conf -Dflume.root.logger=INFO,console\n   \n   #############################################################################################\n   \n   flume04-interceptor.conf\n   \n   #name\n   a1.sources = r1\n   a1.sinks = k1\n   a1.channels = c1\n   \n   #sources\n   a1.sources.r1.type = avro\n   a1.sources.r1.bind = localhost\n   a1.sources.r1.port = 8888\n   \n   ##sinks\n   a1.sinks.k1.type = logger\n   \n   ##channels\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   ##bind\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1\n   \n   flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume04-interceptor.conf -Dflume.root.logger=INFO,console\n   ~~~\n\n   ~~~\n   #name\n   a1.sources = r1\n   a1.channels = c1\n   #sources\n   a1.sources.r1.type = TAILDIR\n   a1.sources.r1.positionFile = /home/suxichuan/flume/taildir_position.json\n   a1.sources.r1.filegroups = f1\n   a1.sources.r1.filegroups.f1 = /home/suxichuan/behavior/log\n   #channels\n   a1.channels.channel1.type = org.apache.flume.channel.kafka.KafkaChannel\n   a1.channels.channel1.kafka.bootstrap.servers = hadoop102:9092,hadoop103:9092,hadoop104:9092\n   a1.channels.channel1.kafka.topic = ods_behavor_log\n   a1.channels.channel1.kafka.consumer.group.id = ods_behavor_group_1\t\t\n   ~~~\n\n以上就是，Flume基础学习内容，后续会根据学习的规划调整笔记更新的内容。\n\n\n\n\n\n","source":"_posts/Flume基础学习.md","raw":"---\ntitle: Flume基础学习\nthumbnail: 'https://bitiful.hudi.space/posts/flume.jpeg'\ncover: 'https://bitiful.hudi.space/posts/flume.jpeg'\ndescription: >-\n  Flume日志采集工具，可以配合第三方的前端埋点SDK去实现行为日志采集，到目前为止在工作中也没有使用到和涉及到。当时在使用这个工具时，学习的内容的深度相对来说也比较浅薄。后续会根据学习内容和规划做相应的调整，完善相关的学习笔记。本文主要介绍了Flume工具的基本配置使用、各个组件在其中发挥的作用、内部架构等。\ncategories:\n  - 大数据\n  - 数据采集\ntags:\n  - 工具\n  - Flume\n  - 数据采集\n  - 分布式\nabbrlink: 1e46a8be\n---\n\n# Flume基础学习（一）\n\n​\t\tFlume日志采集工具，可以配合第三方的前端埋点SDK去实现行为日志采集，到目前为止在工作中也没有使用到和涉及到。当时在使用这个工具时，学习的内容的深度相对来说也比较浅薄。后续会根据学习内容和规划做相应的调整，完善相关的学习笔记。本文主要介绍了Flume工具的基本配置使用、各个组件在其中发挥的作用、内部架构等。\n\n## 一、Flume概述：\n\n### 1、定义：\n\nFlume是Cloudera提供的一个高可用的，高可靠的，分布式的海量日志采集、聚合和传输的系统。Flume基于流式架构，灵活简单。\n\n### 2、Flume架构\n\n<img src=\"https://bitiful.hudi.space/posts/flume_topology.jpg\" style=\"zoom:150%;\" />\n\n- agent：\n\n  - Agent是一个JVM进程，它以事件的形式将数据从源头送至目的。\n  - Agent主要有3个部分组成，Source、Channel、Sink。\n\n- source\n\n  Source是负责接收数据到Flume Agent的组件。Source组件可以处理各种类型、各种格式的日志数据，包括**avro**、thrift、**exec**、jms、**spooling directory**、**netcat**、 **taildir** 、sequence generator、syslog、http、legacy。\n\n- sink\n\n  - Sink不断地轮询Channel中的事件且批量地移除它们，并将这些事件批量写入到存储或索引系统、或者被发送到另一个Flume Agent。\n  - Sink组件目的地包括**hdfs**、**logger**、**avro**、thrift、ipc、**file**、**HBase**、solr、自定义。\n\n- channel\n\n  - Channel是位于Source和Sink之间的缓冲区。因此，Channel允许Source和Sink运作在不同的速率上。Channel是线程安全的，可以同时处理几个Source的写入操作和几个Sink的读取操作。\n  - Flume自带两种Channel：Memory Channel和File Channel。\n  - Memory Channel是内存中的队列。Memory Channel在不需要关心数据丢失的情景下适用。如果需要关心数据丢失，那么Memory Channel就不应该使用，因为程序死亡、机器宕机或者重启都会导致数据丢失。\n  - File Channel将所有事件写到磁盘。因此在程序关闭或机器宕机的情况下不会丢失数据。\n\n- event\n\n  传输单元，Flume数据传输的基本单元，以Event的形式将数据从源头送至目的地。Event由**Header**和**Body**两部分组成，Header用来存放该event的一些属性，为K-V结构，Body用来存放该条数据，形式为字节数组。\n\n  | header(k,v) | body(byte array) |\n  | ----------- | ---------------- |\n\n## 二、Flume入门\n\n### 1、安装Flume地址\n\n- 官网地址：http://flume.apache.org/\n- 文档地址：http://flume.apache.org/FlumeUserGuide.html\n\n### 2、安装部署\n\nhadoop版本3.x要删除lib文件夹下的guava-11.0.2.jar包以兼容Hadoop 3.x\n\n### 3、官方入门案例\n\n1. 需求：使用Flume监听一个端口，收集该端口数据，并打印到控制台。\n\n2. 安装netcat工具\n\n   ~~~shell\n   sudo yun install -y nc\n   ~~~\n\n1. 创建Flume Agent配置文件flume-netcat-logger.conf\n\n   ~~~\n   添加内容如下：\n   # Name the components on this agent    #a1表示agent的名字\n   a1.sources = r1  ##r1表示a1 agent一个source的名字\n   a1.sinks = k1    ##k1表示a1 agent一个sink的名字\n   a1.channels = c1 ##c1表示a1 agent一个channel的名字\n   \n   # Describe/configure the source\n   a1.sources.r1.type = netcat   ##表示r1 source的类型也就是输入源的类型\n   a1.sources.r1.bind = localhost  ##要监听的主机的IP \n   a1.sources.r1.port = 44444  ###要监听的端口号是多少\n   \n   # Describe the sink\n   a1.sinks.k1.type = logger   ##a1的数据输出的目的地是控制台\n   \n   # Use a channel which buffers events in memory\n   a1.channels.c1.type = memory   ##表示a1 channel的类型是memory内存型\n   a1.channels.c1.capacity = 1000 ##表示a1 channel的事件容量是1000条\n   a1.channels.c1.transactionCapacity = 100  ##表示a1的channel收集到100条event后再去提交事务\n   \n   # Bind the source and sink to the channel\n   a1.sources.r1.channels = c1   ##表示吧r1和c1连接起来\n   a1.sinks.k1.channel = c1      ##表示把k1和c1连接起来\n   ~~~\n\n2. 启动flume\n\n   ~~~\n   bin/flume-ng agent --conf conf/ --name a1 --conf-file job/flume-netcat-logger.conf -Dflume.root.logger=INFO,console\n   ~~~\n\n   ```\n    bin/flume-ng agent -c conf/ -n a1 -f job/flume-netcat-logger.conf -Dflume.root.logger=INFO,console\n   ```\n\n   参数说明：\n\n   ​    --conf/-c：表示配置文件存储在conf/目录\n\n   ​    --name/-n：表示给agent起名为a1\n\n   ​    --conf-file/-f：flume本次启动读取的配置文件是在job文件夹下的flume-telnet.conf文件。\n\n   ​    -Dflume.root.logger=INFO,console ：-D表示flume运行时动态修改flume.root.logger参数属性值，并将控制台日志打印级别设置为INFO级别。日志级别包括:log、info、warn、error。\n\n**#实时监控单个追加文件案例**。\n\n1. 需求说明：实时监控Hive日志，并上传到HDFS中\n\n2. 配置文件编写：\n\n   ~~~\n   ##自己编写的配置\n   a1.sources = r1\n   a1.channels = c1\n   a1.sinks=k1\n   \n   a1.sources.r1.type = TAILDIR\n   a1.sources.r1.positionFile =/home/hdfs/flume/taildir_position.json\n   a1.sources.r1.filegroups = f1\n   a1.sources.r1.filegroups.f1 = /home/hdfs/flume/data/.*\\.txt\n   \n   a1.sinks.k1.type=hdfs\n   a1.sinks.k1.hdfs.path = hdfs://master:8020/flume/events/%Y-%m-%d/%H%M/%S\n   a1.sinks.k1.hdfs.filePrefix = events-\n   a1.sinks.k1.hdfs.round = true\n   a1.sinks.k1.hdfs.roundValue = 10\n   a1.sinks.k1.hdfs.roundUnit = minute\n   a1.sinks.k1.hdfs.useLocalTimeStamp=true\n   \n   \n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   a1.sinks.k1.channel = c1\n   a1.sources.r1.channels = c1\n   \n   #####################################################################################################\n   #####################################################################################################\n   #案例\n   # Name the components on this agent\n   a2.sources = r2\n   a2.sinks = k2\n   a2.channels = c2\n   \n   # Describe/configure the source\n   a2.sources.r2.type = exec\n   a2.sources.r2.command = tail -F /opt/module/hive/logs/hive.log\n   \n   # Describe the sink\n   a2.sinks.k2.type = hdfs\n   a2.sinks.k2.hdfs.path = hdfs://master:8020/flume/%Y%m%d/%H\n   #上传文件的前缀\n   a2.sinks.k2.hdfs.filePrefix = logs-\n   #是否按照时间滚动文件夹\n   a2.sinks.k2.hdfs.round = true\n   #多少时间单位创建一个新的文件夹\n   a2.sinks.k2.hdfs.roundValue = 1\n   #重新定义时间单位\n   a2.sinks.k2.hdfs.roundUnit = hour\n   #是否使用本地时间戳\n   a2.sinks.k2.hdfs.useLocalTimeStamp = true\n   #积攒多少个Event才flush到HDFS一次\n   a2.sinks.k2.hdfs.batchSize = 100\n   #设置文件类型，可支持压缩\n   a2.sinks.k2.hdfs.fileType = DataStream\n   #多久生成一个新的文件\n   a2.sinks.k2.hdfs.rollInterval = 60\n   #设置每个文件的滚动大小\n   a2.sinks.k2.hdfs.rollSize = 134217700\n   #文件的滚动与Event数量无关\n   a2.sinks.k2.hdfs.rollCount = 0\n   \n   # Use a channel which buffers events in memory\n   a2.channels.c2.type = memory\n   a2.channels.c2.capacity = 1000\n   a2.channels.c2.transactionCapacity = 100\n   \n   # Bind the source and sink to the channel\n   a2.sources.r2.channels = c2\n   a2.sinks.k2.channel = c2\n   \n   ##########################################################################################################################################################################################################\n   #案例：\n   2. 入门案例 2.1  实时监控单个追加文件,将内容打印到控制台\n   配置文件名字: exec-flume-logger.conf\n   ##name\n   a1.sources = r1\n   a1.channels = c1\n   a1.sinks = k1\n   \n   ##source\n   a1.sources.r1.type = exec\n   a1.sources.r1.command = tail -F /home/hdfs/test/data.txt\n   \n   ##channel\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   ###sink\n   a1.sinks.k1.type = logger\n   \n   ##bind\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1 \n   ~~~\n\n**＃实时监控目录下多个新文件**\n\n1. 案例需求：使用Flume监听整个目录的文件，并上传至HDFS\n\n2. 配置文件编写\n\n   ~~~\n   ###我配置写的Spooling Directory Source\n   spooling-flume-hdfs.conf 配置文件如下\n   #name\n   a1.sources = r1\n   a1.sinks = k1\n   a1.channels = c1 \n   #sources\n   a1.sources.r1.type = spooldir\n   a1.sources.r1.spoolDir = /home/hdfs/test/spoolDir \n   a1.sources.r1.fileHeader = true\n   #sinks\n   a1.sinks.k1.type = hdfs\n   a1.sinks.k1.hdfs.path =  hdfs://master:8020/flume/events/%Y-%m-%d\n   a1.sinks.k1.hdfs.filePrefix = logs-\n   a1.sinks.k1.hdfs.round = true\n   a1.sinks.k1.hdfs.roundValue = 10\n   a1.sinks.k1.hdfs.roundUnit = second\n   a1.sinks.k1.hdfs.useLocalTimeStamp = true\n   ##channels\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   ##bind\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1\n   ~~~\n\n   ~~~\n   4. 入门案例 3  实时监控目录下的新文件,将内容上传到HDFS中\n   配置文件名字: spooling-flume-hdfs.conf\n   \n   #Named\n   a1.sources = r1\n   a1.channels = c1\n   a1.sinks = k1 \n   \n   #Source\n   a1.sources.r1.type = spooldir\n   a1.sources.r1.spoolDir = /opt/module/flume-1.9.0/jobs/spooling\n   a1.sources.r1.fileSuffix = .COMPLETED\n   a1.sources.r1.ignorePattern = .*\\.tmp\n   \n   \n   #Channel\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   #Sink\n   a1.sinks.k1.type = hdfs\n   a1.sinks.k1.hdfs.path = hdfs://hadoop102:8020/flume/%Y%m%d/%H\n   #上传文件的前缀\n   a1.sinks.k1.hdfs.filePrefix = logs-\n   #是否按照时间滚动文件夹\n   a1.sinks.k1.hdfs.round = true\n   #多少时间单位创建一个新的文件夹\n   a1.sinks.k1.hdfs.roundValue = 1\n   #重新定义时间单位\n   a1.sinks.k1.hdfs.roundUnit = hour\n   #是否使用本地时间戳\n   a1.sinks.k1.hdfs.useLocalTimeStamp = true\n   #积攒多少个Event才flush到HDFS一次\n   a1.sinks.k1.hdfs.batchSize = 100\n   #设置文件类型，可支持压缩\n   a1.sinks.k1.hdfs.fileType = DataStream\n   #多久生成一个新的文件\n   a1.sinks.k1.hdfs.rollInterval = 60\n   #设置每个文件的滚动大小\n   a1.sinks.k1.hdfs.rollSize = 134217700\n   #文件的滚动与Event数量无关\n   a1.sinks.k1.hdfs.rollCount = 0\n   \n   #Bind\n   a1.sources.r1.channels = c1 \n   a1.sinks.k1.channel = c1 \n   ~~~\n\n**＃实时监控多个目录下的多个追加文件**\n\nExec source适用于监控一个实时追加的文件，不能实现断点续传；Spooldir Source适合用于同步新文件，但不适合对实时追加日志的文件进行监听并同步；而Taildir Source适合用于监听多个实时追加的文件，并且能够实现断点续传。\n\n> 案例需求:使用Flume监听整个目录的实时追加文件，并上传至HDFS\n\n- 配置文件编写：\n\n  ~~~\n  #name\n  a1.sources = r1\n  a1.sinks = k1\n  a1.channels = c1\n  \n  #sources\n  a1.sources.r1.type = TAILDIR\n  a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json\n  a1.sources.r1.filegroups = f1 f2\n  a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/.*\\.txt\n  a1.sources.r1.filegroups.f2 = /home/hdfs/test/data/.*\\.log\n  \n  #sinks\n  a1.sinks.k1.type = hdfs\n  a1.sinks.k1.hdfs.path =  hdfs://master:8020/flume/tail/%Y-%m-%d\n  a1.sinks.k1.hdfs.filePrefix = tail-\n  a1.sinks.k1.hdfs.round = true\n  a1.sinks.k1.hdfs.roundValue = 10\n  a1.sinks.k1.hdfs.roundUnit = second\n  a1.sinks.k1.hdfs.useLocalTimeStamp = true\n  \n  ##channels\n  a1.channels.c1.type = memory\n  a1.channels.c1.capacity = 10000\n  a1.channels.c1.transactionCapacity = 100\n  \n  #bind\n  a1.sources.r1.channels = c1\n  a1.sinks.k1.channel = c1\n  ~~~\n\n## 三、Flume进阶\n\n### 1、Flume事务\n\n![](https://bitiful.hudi.space/posts/flume.jpg)\n\n### 2、Agent内部原理\n\n![](https://bitiful.hudi.space/posts/Agent.jpg)\n\n- source采集到日志服务器或者是端口等的数据时，报数据包装成event\n- 在批量的放入临时缓存putlist，并通过channel processor处理事件\n- channel processor将事件传递给拦截器链，对事件进行过滤\n- 再把事件还回channel processor并将每个事件给channel selector\n- 返回写入事件的channel 列表\n- 根据channel选择器的结果，将事件写入对应得channel中\n- doTake将事件批量的取到sink processor中再通过事务写入到相应的目标中\n\n1. ChannelSelector\n\n   ChannelSelector的作用就是选出Event将要被发往哪个Channel。其共有两种类型，分别是Replicating（复制）和Multiplexing（多路复用）。\n\n   ReplicatingSelector会将同一个Event发往所有的Channel，Multiplexing会根据相应的原则，将不同的Event发往不同的Channel。\n\n2. SinkProcessor\n\n   SinkProcessor共有三种类型，分别是DefaultSinkProcessor、LoadBalancingSinkProcessor和FailoverSinkProcessor\n\n   DefaultSinkProcessor对应的是单个的Sink，LoadBalancingSinkProcessor和FailoverSinkProcessor对应的是Sink Group，LoadBalancingSinkProcessor可以实现负载均衡的功能，FailoverSinkProcessor可以错误恢复的功能。\n\n### 3、Flume的拓扑结构\n\n1. 简单串联：这种模式是将多个flume顺序连接起来了，从最初的source开始到最终sink传送的目的存储系统。此模式不建议桥接过多的flume数量， flume数量过多不仅会影响传输速率，而且一旦传输过程中某个节点flume宕机，会影响整个传输系统。\n\n   即，一个agent的sink连接另个agent的source\n\n2. 复制和多虑复用：Flume支持将事件流向一个或者多个目的地。这种模式可以将相同数据复制到多个channel中，或者将不同数据分发到不同的channel中，sink可以选择传送到不同的目的地。\n\n3. 负载均衡和故障转移：Flume支持使用将多个sink逻辑上分到一个sink组，sink组配合不同的SinkProcessor可以实现负载均衡和错误恢复的功能。\n\n4. 聚合：\n\n   这种模式是我们最常见的，也非常实用，日常web应用通常分布在上百个服务器，大者甚至上千个、上万个服务器。产生的日志，处理起来也非常麻烦。用flume的这种组合方式能很好的解决这一问题，每台服务器部署一个flume采集日志，传送到一个集中收集日志的flume，再由此flume上传到hdfs、hive、hbase等，进行日志分析。\n\n### 4、Flume开发案例\n\n>案例需求：使用Flume-1监控文件变动，Flume-1将变动内容传递给Flume-2，Flume-2负责存储到HDFS。同时Flume-1将变动内容传递给Flume-3，Flume-3负责输出到Local FileSystem。\n\n- 配置文件编写：\n\n  ~~~\n  Flume-1\n  #name\n  a1.sources = r1\n  a1.sinks = k1 k2\n  a1.channels = c1 c2\n  \n  #sources\n  a1.sources.r1.type = TAILDIR\n  a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json\n  a1.sources.r1.filegroups = f1\n  a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/log.log\n  \n  a1.sources.r1.selector.type = replicating\n  \n  ##sinks\n  a1.sinks.k1.type = avro\n  a1.sinks.k1.hostname = 192.168.157.10\n  a1.sinks.k1.port = 6666\n  \n  a1.sinks.k2.type = avro\n  a1.sinks.k2.hostname = 192.168.157.10\n  a1.sinks.k2.port = 7777\n  \n  ##channels\n  a1.channels.c1.type = memory\n  a1.channels.c1.capacity = 10000\n  a1.channels.c1.transactionCapacity = 100\n  \n  a1.channels.c2.type = memory\n  a1.channels.c2.capacity = 10000\n  a1.channels.c2.transactionCapacity = 100\n  \n  ##bind\n  a1.sources.r1.channels = c1\n  a1.sinks.k1.channel = c1\n  \n  a1.sources.r1.channels = c2\n  a1.sinks.k2.channel = c2\n  \n  flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume-01.conf -Dflume.root.logger=INFO,console\n  #############################################################################################\n  Flume-2\n  #name\n  a2.sources = r2\n  a2.sinks = k2\n  a2.channels = c2\n  \n  #sources\n  a2.sources.r2.type = avro\n  a2.sources.r2.bind = localhost\n  a2.sources.r2.port = 6666\n  \n  ##sinks\n  a2.sinks.k2.type = hdfs\n  a2.sinks.k2.hdfs.path =  hdfs://master:8020/flume/threeflume/%Y-%m-%d\n  a2.sinks.k2.hdfs.filePrefix = log-\n  a2.sinks.k2.hdfs.round = true\n  a2.sinks.k2.hdfs.roundValue = 10\n  a2.sinks.k2.hdfs.roundUnit = second\n  a2.sinks.k2.hdfs.useLocalTimeStamp = true\n  \n  ##channels\n  a2.channels.c2.type = memory\n  a2.channels.c2.capacity = 10000\n  a2.channels.c2.transactionCapacity = 100\n  \n  ##bind\n  a2.sources.r2.channels = c2\n  a2.sinks.k2.channel = c2\n  \n  flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume-02.conf -Dflume.root.logger=INFO,console\n  ################################################################################################\n  Flume-3\n  #name\n  a3.sources = r3\n  a3.sinks = k3\n  a3.channels = c3\n  \n  #sources\n  a3.sources.r3.type = avro\n  a3.sources.r3.bind = localhost\n  a3.sources.r3.port = 7777\n  \n  ##sinks\n  a3.sinks.k3.type = file_roll   ##采集到的数据放到本地Stores events on the local filesystem. \n  a3.sinks.k3.sink.directory = /opt/module/flume-1.9.0/jobs/fileroll\n  \n  ##channels\n  a3.channels.c3.type = memory\n  a3.channels.c3.capacity = 10000\n  a3.channels.c3.transactionCapacity = 100\n  \n  ##bind\n  a3.sources.r3.channels = c3\n  a3.sinks.k3.channel = c3\n  \n  flume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume-03.conf -Dflume.root.logger=INFO,console\n  ~~~\n\n- 输出的本地目录必须是已经存在的目录，如果该目录不存在，并不会创建新的目录。\n\n**#负载均衡和故障转移**\n\n- ##### 故障转移：案例分析\n\n使用Flume1监控一个端口，其sink组中的sink分别对接Flume2和Flume3，采用FailoverSinkProcessor，实现故障转移的功能。\n\n**使用jps -ml查看Flume进程。**\n\n~~~\nflume01-failover.conf\n\n#name\na1.sources = r1\na1.sinkgroups = g1\na1.sinks = k1 k2\na1.channels = c1\n\n\n#sources\na1.sources.r1.type = netcat\na1.sources.r1.bind = localhost\na1.sources.r1.port = 44444\n\n\n\na1.sinkgroups.g1.processor.type = failover\na1.sinkgroups.g1.processor.priority.k1 = 5\na1.sinkgroups.g1.processor.priority.k2 = 10\na1.sinkgroups.g1.processor.maxpenalty = 10000\n\n##sinks\na1.sinks.k1.type = avro\na1.sinks.k1.hostname = localhost\na1.sinks.k1.port = 6666\n\na1.sinks.k2.type = avro\na1.sinks.k2.hostname = localhost\na1.sinks.k2.port = 7777\n\n##channels\na1.channels.c1.type = memory\na1.channels.c1.capacity = 10000\na1.channels.c1.transactionCapacity = 100\n\n\n##bind\na1.sinkgroups.g1.sinks = k1 k2\na1.sources.r1.channels = c1\na1.sinks.k1.channel = c1\na1.sinks.k2.channel = c1\n\nflume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-failover.conf -Dflume.root.logger=INFO,console\n################################################################################################\nflume02-failover.conf\n#name\na2.sources = r2\na2.sinks = k2\na2.channels = c2\n\n#sources\na2.sources.r2.type = avro\na2.sources.r2.bind = localhost\na2.sources.r2.port = 6666\n\n##sinks\na2.sinks.k2.type = logger\n\n##channels\na2.channels.c2.type = memory\na2.channels.c2.capacity = 10000\na2.channels.c2.transactionCapacity = 100\n\n##bind\na2.sources.r2.channels = c2\na2.sinks.k2.channel = c2\n\nflume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume02-failover.conf -Dflume.root.logger=INFO,console\n\n################################################################################################\n\nflume03-failover.conf\n#name\na3.sources = r3\na3.sinks = k3\na3.channels = c3\n\n#sources\na3.sources.r3.type = avro\na3.sources.r3.bind = localhost\na3.sources.r3.port = 7777\n\n##sinks\na3.sinks.k3.type = logger\n\n##channels\na3.channels.c3.type = memory\na3.channels.c3.capacity = 10000\na3.channels.c3.transactionCapacity = 100\n\n##bind\na3.sources.r3.channels = c3\na3.sinks.k3.channel = c3\n\nflume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume03-failover.conf -Dflume.root.logger=INFO,console\n~~~\n\n- 负载均衡\n\n\n~~~txt\nflume01-balance.conf\n\n#name\na1.sources = r1\na1.sinks = k1 k2\na1.channels = c1\n\n\n#sources\na1.sources.r1.type = netcat\na1.sources.r1.bind = localhost\na1.sources.r1.port = 44444\n\n\n\na1.sinkgroups.g1.processor.type = load_balance\na1.sinkgroups.g1.processor.backoff = true\na1.sinkgroups.g1.processor.selector = random\n\n##sinks\na1.sinks.k1.type = avro\na1.sinks.k1.hostname = localhost\na1.sinks.k1.port = 6666\n\na1.sinks.k2.type = avro\na1.sinks.k2.hostname = localhost\na1.sinks.k2.port = 7777\n\n##channels\na1.channels.c1.type = memory\na1.channels.c1.capacity = 10000\na1.channels.c1.transactionCapacity = 100\n\n\n##bind\na1.sources.r1.channels = c1\na1.sinks.k1.channel = c1\na1.sinks.k2.channel = c1\n\nflume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-balance.conf -Dflume.root.logger=INFO,console\n\n################################################################################################\n\nflume02-balance.conf\n#name\na2.sources = r2\na2.sinks = k2\na2.channels = c2\n\n#sources\na2.sources.r2.type = avro\na2.sources.r2.bind = localhost\na2.sources.r2.port = 6666\n\n##sinks\na2.sinks.k2.type = logger\n\n##channels\na2.channels.c2.type = memory\na2.channels.c2.capacity = 10000\na2.channels.c2.transactionCapacity = 100\n\n##bind\na2.sources.r2.channels = c2\na2.sinks.k2.channel = c2\n\nflume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume02-balance.conf -Dflume.root.logger=INFO,console\n\n################################################################################################\n\n\nflume03-balance.conf\n#name\na3.sources = r3\na3.sinks = k3\na3.channels = c3\n\n#sources\na3.sources.r3.type = avro\na3.sources.r3.bind = localhost\na3.sources.r3.port = 7777\n\n##sinks\na3.sinks.k3.type = logger\n\n##channels\na3.channels.c3.type = memory\na3.channels.c3.capacity = 10000\na3.channels.c3.transactionCapacity = 100\n\n##bind\na3.sources.r3.channels = c3\na3.sinks.k3.channel = c3\n\nflume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume03-balance.conf -Dflume.root.logger=INFO,console\n~~~\n\n- 聚合\n\n\n>案例需求：hadoop102上的Flume-1监控文件/opt/module/group.log，hadoop103上的Flume-2监控某一个端口的数据流，Flume-1与Flume-2将数据发送给hadoop104上的Flume-3，Flume-3将最终数据打印到控制台。\n\n~~~\nflume01-aggre.conf\n\n#name\na1.sources = r1\na1.sinks = k1\na1.channels = c1\n\n#sources\na1.sources.r1.type = TAILDIR\na1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json\na1.sources.r1.filegroups = f1\na1.sources.r1.filegroups.f1 = /home/hdfs/test/data/log.log\n\na1.sources.r1.selector.type = replicating\n\n##sinks\na1.sinks.k1.type = avro\na1.sinks.k1.hostname = slave-02\na1.sinks.k1.port = 6666\n\n##channels\na1.channels.c1.type = memory\na1.channels.c1.capacity = 10000\na1.channels.c1.transactionCapacity = 100\n\n##bind\na1.sources.r1.channels = c1\na1.sinks.k1.channel = c1\n\n\nflume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-aggre.conf -Dflume.root.logger=INFO,console\n\n###############################################################################################\n\nflume02-aggre.conf\n\n#name\na1.sources = r1\na1.sinks = k1\na1.channels = c1\n\n\n#sources\na1.sources.r1.type = netcat\na1.sources.r1.bind = localhost\na1.sources.r1.port = 44444\n\n##sinks\na1.sinks.k1.type = avro\na1.sinks.k1.hostname = slave-02\na1.sinks.k1.port = 6666\n\n\n##channels\na1.channels.c1.type = memory\na1.channels.c1.capacity = 10000\na1.channels.c1.transactionCapacity = 100\n\n\n##bind\na1.sources.r1.channels = c1\na1.sinks.k1.channel = c1\n\nflume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume02-aggre.conf -Dflume.root.logger=INFO,console\n\n################################################################################################\n\n\nflume03-aggre.conf\n#name\na2.sources = r2\na2.sinks = k2\na2.channels = c2\n\n#sources\na2.sources.r2.type = avro\na2.sources.r2.bind = slave-02  ##此处不能写localhost\na2.sources.r2.port = 6666\n\n##sinks\na2.sinks.k2.type = logger\n\n##channels\na2.channels.c2.type = memory\na2.channels.c2.capacity = 10000\na2.channels.c2.transactionCapacity = 100\n\n##bind\na2.sources.r2.channels = c2\na2.sinks.k2.channel = c2\n\nflume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume03-aggre.conf -Dflume.root.logger=INFO,console\n\n\n~~~\n\n- 自定义interceptor\n\n\n>需求：使用Flume采集服务器本地日志，需要按照日志类型的不同，将不同种类的日志发往不同的分析系统。\n\n1. 添加maven依赖\n\n   ~~~xml\n    <dependencies>\n           <dependency>\n               <groupId>org.apache.flume</groupId>\n               <artifactId>flume-ng-core</artifactId>\n               <version>1.9.0</version>\n           </dependency>\n    </dependencies>\n   ~~~\n\n2. 编写interceptor\n\n   ~~~java\n   public class MyInterceptor  implements Interceptor {\n       @Override\n       public void initialize() { }\n       @Override\n       public Event intercept(Event event) {\n           byte[] body = event.getBody();\n           String s = new String(body, StandardCharsets.UTF_8);\n           if (s.contains(\"#\") || s.contains(\"*\")) {\n               event.getHeaders().put(\"type\",\"char\");\n           }else if (s.contains(\"1\")){\n               event.getHeaders().put(\"type\",\"num\");\n           }else {\n               event.getHeaders().put(\"type\",\"word\");\n           }\n           return event;\n       }\n       @Override\n       public List<Event> intercept(List<Event> list) {\n           for (Event event : list) {\n               intercept(event);\n           }\n           return list;\n       }\n       @Override\n       public void close() { }\n       public static class build implements Interceptor.Builder{\n           @Override\n           public Interceptor build() {\n               return new MyInterceptor();\n           }\n           @Override\n           public void configure(Context context) { }\n       }\n   }\n   ~~~\n\n3. 编写flume配置文件\n\n   ~~~\n   flume01-interceptor.conf\n   \n   #name\n   a1.sources = r1\n   a1.sinks = k1 k2 k3\n   a1.channels = c1 c2 c3\n   \n   \n   #sources\n   a1.sources.r1.type = netcat\n   a1.sources.r1.bind = localhost\n   a1.sources.r1.port = 44444\n   a1.sources.r1.interceptors = i1\n   a1.sources.r1.interceptors.i1.type = com.suhe.interceptor.MyInterceptor$Builder\n   a1.sources.r1.selector.type = multiplexing\n   a1.sources.r1.selector.header = type\n   a1.sources.r1.selector.mapping.char = c1\n   a1.sources.r1.selector.mapping.num = c2\n   a1.sources.r1.selector.mapping.word = c3\n   \n   ##sinks\n   a1.sinks.k1.type = avro\n   a1.sinks.k1.hostname = localhost\n   a1.sinks.k1.port = 6666\n   \n   a1.sinks.k2.type = avro\n   a1.sinks.k2.hostname = localhost\n   a1.sinks.k2.port = 7777\n   \n   a1.sinks.k3.type = avro\n   a1.sinks.k3.hostname = localhost\n   a1.sinks.k3.port = 8888\n   \n   \n   \n   ##channels\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   a1.channels.c2.type = memory\n   a1.channels.c2.capacity = 10000\n   a1.channels.c2.transactionCapacity = 100\n   \n   a1.channels.c3.type = memory\n   a1.channels.c3.capacity = 10000\n   a1.channels.c3.transactionCapacity = 100\n   \n   ##bind\n   a1.sources.r1.channels = c1 c2 c3\n   a1.sinks.k1.channel = c1\n   a1.sinks.k2.channel = c2\n   a1.sinks.k3.channel = c3\n   \n   flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-interceptor.conf -Dflume.root.logger=INFO,console\n   #############################################################################################\n   \n   \n   \n   flume02-interceptor.conf\n   #name\n   a1.sources = r1\n   a1.sinks = k1\n   a1.channels = c1\n   \n   #sources\n   a1.sources.r1.type = avro\n   a1.sources.r1.bind = localhost\n   a1.sources.r1.port = 6666\n   \n   ##sinks\n   a1.sinks.k1.type = logger\n   \n   ##channels\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   ##bind\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1\n   \n   flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume02-interceptor.conf -Dflume.root.logger=INFO,console\n   \n   \n   #############################################################################################\n   \n   flume03-interceptor.conf\n   #name\n   a1.sources = r1\n   a1.sinks = k1\n   a1.channels = c1\n   \n   #sources\n   a1.sources.r1.type = avro\n   a1.sources.r1.bind = localhost\n   a1.sources.r1.port = 7777\n   \n   ##sinks\n   a1.sinks.k1.type = logger\n   \n   ##channels\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   ##bind\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1\n   \n   flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume03-interceptor.conf -Dflume.root.logger=INFO,console\n   \n   #############################################################################################\n   \n   flume04-interceptor.conf\n   \n   #name\n   a1.sources = r1\n   a1.sinks = k1\n   a1.channels = c1\n   \n   #sources\n   a1.sources.r1.type = avro\n   a1.sources.r1.bind = localhost\n   a1.sources.r1.port = 8888\n   \n   ##sinks\n   a1.sinks.k1.type = logger\n   \n   ##channels\n   a1.channels.c1.type = memory\n   a1.channels.c1.capacity = 10000\n   a1.channels.c1.transactionCapacity = 100\n   \n   ##bind\n   a1.sources.r1.channels = c1\n   a1.sinks.k1.channel = c1\n   \n   flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume04-interceptor.conf -Dflume.root.logger=INFO,console\n   ~~~\n\n   ~~~\n   #name\n   a1.sources = r1\n   a1.channels = c1\n   #sources\n   a1.sources.r1.type = TAILDIR\n   a1.sources.r1.positionFile = /home/suxichuan/flume/taildir_position.json\n   a1.sources.r1.filegroups = f1\n   a1.sources.r1.filegroups.f1 = /home/suxichuan/behavior/log\n   #channels\n   a1.channels.channel1.type = org.apache.flume.channel.kafka.KafkaChannel\n   a1.channels.channel1.kafka.bootstrap.servers = hadoop102:9092,hadoop103:9092,hadoop104:9092\n   a1.channels.channel1.kafka.topic = ods_behavor_log\n   a1.channels.channel1.kafka.consumer.group.id = ods_behavor_group_1\t\t\n   ~~~\n\n以上就是，Flume基础学习内容，后续会根据学习的规划调整笔记更新的内容。\n\n\n\n\n\n","slug":"Flume基础学习","published":1,"date":"2024-10-28T04:28:07.193Z","updated":"2024-11-18T10:38:23.379Z","comments":1,"layout":"post","photos":[],"_id":"cm3u077rs0001ogst3e9i9zby","content":"<h1 id=\"Flume基础学习（一）\"><a href=\"#Flume基础学习（一）\" class=\"headerlink\" title=\"Flume基础学习（一）\"></a>Flume基础学习（一）</h1><p>​\t\tFlume日志采集工具，可以配合第三方的前端埋点SDK去实现行为日志采集，到目前为止在工作中也没有使用到和涉及到。当时在使用这个工具时，学习的内容的深度相对来说也比较浅薄。后续会根据学习内容和规划做相应的调整，完善相关的学习笔记。本文主要介绍了Flume工具的基本配置使用、各个组件在其中发挥的作用、内部架构等。</p>\n<h2 id=\"一、Flume概述：\"><a href=\"#一、Flume概述：\" class=\"headerlink\" title=\"一、Flume概述：\"></a>一、Flume概述：</h2><h3 id=\"1、定义：\"><a href=\"#1、定义：\" class=\"headerlink\" title=\"1、定义：\"></a>1、定义：</h3><p>Flume是Cloudera提供的一个高可用的，高可靠的，分布式的海量日志采集、聚合和传输的系统。Flume基于流式架构，灵活简单。</p>\n<h3 id=\"2、Flume架构\"><a href=\"#2、Flume架构\" class=\"headerlink\" title=\"2、Flume架构\"></a>2、Flume架构</h3><img src=\"https://bitiful.hudi.space/posts/flume_topology.jpg\" style=\"zoom:150%;\" />\n\n<ul>\n<li><p>agent：</p>\n<ul>\n<li>Agent是一个JVM进程，它以事件的形式将数据从源头送至目的。</li>\n<li>Agent主要有3个部分组成，Source、Channel、Sink。</li>\n</ul>\n</li>\n<li><p>source</p>\n<p>Source是负责接收数据到Flume Agent的组件。Source组件可以处理各种类型、各种格式的日志数据，包括<strong>avro</strong>、thrift、<strong>exec</strong>、jms、<strong>spooling directory</strong>、<strong>netcat</strong>、 <strong>taildir</strong> 、sequence generator、syslog、http、legacy。</p>\n</li>\n<li><p>sink</p>\n<ul>\n<li>Sink不断地轮询Channel中的事件且批量地移除它们，并将这些事件批量写入到存储或索引系统、或者被发送到另一个Flume Agent。</li>\n<li>Sink组件目的地包括<strong>hdfs</strong>、<strong>logger</strong>、<strong>avro</strong>、thrift、ipc、<strong>file</strong>、<strong>HBase</strong>、solr、自定义。</li>\n</ul>\n</li>\n<li><p>channel</p>\n<ul>\n<li>Channel是位于Source和Sink之间的缓冲区。因此，Channel允许Source和Sink运作在不同的速率上。Channel是线程安全的，可以同时处理几个Source的写入操作和几个Sink的读取操作。</li>\n<li>Flume自带两种Channel：Memory Channel和File Channel。</li>\n<li>Memory Channel是内存中的队列。Memory Channel在不需要关心数据丢失的情景下适用。如果需要关心数据丢失，那么Memory Channel就不应该使用，因为程序死亡、机器宕机或者重启都会导致数据丢失。</li>\n<li>File Channel将所有事件写到磁盘。因此在程序关闭或机器宕机的情况下不会丢失数据。</li>\n</ul>\n</li>\n<li><p>event</p>\n<p>传输单元，Flume数据传输的基本单元，以Event的形式将数据从源头送至目的地。Event由<strong>Header</strong>和<strong>Body</strong>两部分组成，Header用来存放该event的一些属性，为K-V结构，Body用来存放该条数据，形式为字节数组。</p>\n<table>\n<thead>\n<tr>\n<th>header(k,v)</th>\n<th>body(byte array)</th>\n</tr>\n</thead>\n</table>\n</li>\n</ul>\n<h2 id=\"二、Flume入门\"><a href=\"#二、Flume入门\" class=\"headerlink\" title=\"二、Flume入门\"></a>二、Flume入门</h2><h3 id=\"1、安装Flume地址\"><a href=\"#1、安装Flume地址\" class=\"headerlink\" title=\"1、安装Flume地址\"></a>1、安装Flume地址</h3><ul>\n<li>官网地址：<a href=\"http://flume.apache.org/\">http://flume.apache.org/</a></li>\n<li>文档地址：<a href=\"http://flume.apache.org/FlumeUserGuide.html\">http://flume.apache.org/FlumeUserGuide.html</a></li>\n</ul>\n<h3 id=\"2、安装部署\"><a href=\"#2、安装部署\" class=\"headerlink\" title=\"2、安装部署\"></a>2、安装部署</h3><p>hadoop版本3.x要删除lib文件夹下的guava-11.0.2.jar包以兼容Hadoop 3.x</p>\n<h3 id=\"3、官方入门案例\"><a href=\"#3、官方入门案例\" class=\"headerlink\" title=\"3、官方入门案例\"></a>3、官方入门案例</h3><ol>\n<li><p>需求：使用Flume监听一个端口，收集该端口数据，并打印到控制台。</p>\n</li>\n<li><p>安装netcat工具</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yun install -y nc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建Flume Agent配置文件flume-netcat-logger.conf</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">添加内容如下：</span><br><span class=\"line\"># Name the components on this agent    #a1表示agent的名字</span><br><span class=\"line\">a1.sources = r1  ##r1表示a1 agent一个source的名字</span><br><span class=\"line\">a1.sinks = k1    ##k1表示a1 agent一个sink的名字</span><br><span class=\"line\">a1.channels = c1 ##c1表示a1 agent一个channel的名字</span><br><span class=\"line\"></span><br><span class=\"line\"># Describe/configure the source</span><br><span class=\"line\">a1.sources.r1.type = netcat   ##表示r1 source的类型也就是输入源的类型</span><br><span class=\"line\">a1.sources.r1.bind = localhost  ##要监听的主机的IP </span><br><span class=\"line\">a1.sources.r1.port = 44444  ###要监听的端口号是多少</span><br><span class=\"line\"></span><br><span class=\"line\"># Describe the sink</span><br><span class=\"line\">a1.sinks.k1.type = logger   ##a1的数据输出的目的地是控制台</span><br><span class=\"line\"></span><br><span class=\"line\"># Use a channel which buffers events in memory</span><br><span class=\"line\">a1.channels.c1.type = memory   ##表示a1 channel的类型是memory内存型</span><br><span class=\"line\">a1.channels.c1.capacity = 1000 ##表示a1 channel的事件容量是1000条</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100  ##表示a1的channel收集到100条event后再去提交事务</span><br><span class=\"line\"></span><br><span class=\"line\"># Bind the source and sink to the channel</span><br><span class=\"line\">a1.sources.r1.channels = c1   ##表示吧r1和c1连接起来</span><br><span class=\"line\">a1.sinks.k1.channel = c1      ##表示把k1和c1连接起来</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动flume</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/flume-ng agent --conf conf/ --name a1 --conf-file job/flume-netcat-logger.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/flume-ng agent -c conf/ -n a1 -f job/flume-netcat-logger.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n\n<p>参数说明：</p>\n<p>​    –conf&#x2F;-c：表示配置文件存储在conf&#x2F;目录</p>\n<p>​    –name&#x2F;-n：表示给agent起名为a1</p>\n<p>​    –conf-file&#x2F;-f：flume本次启动读取的配置文件是在job文件夹下的flume-telnet.conf文件。</p>\n<p>​    -Dflume.root.logger&#x3D;INFO,console ：-D表示flume运行时动态修改flume.root.logger参数属性值，并将控制台日志打印级别设置为INFO级别。日志级别包括:log、info、warn、error。</p>\n</li>\n</ol>\n<p><strong>#实时监控单个追加文件案例</strong>。</p>\n<ol>\n<li><p>需求说明：实时监控Hive日志，并上传到HDFS中</p>\n</li>\n<li><p>配置文件编写：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##自己编写的配置</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\">a1.sinks=k1</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sources.r1.type = TAILDIR</span><br><span class=\"line\">a1.sources.r1.positionFile =/home/hdfs/flume/taildir_position.json</span><br><span class=\"line\">a1.sources.r1.filegroups = f1</span><br><span class=\"line\">a1.sources.r1.filegroups.f1 = /home/hdfs/flume/data/.*\\.txt</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k1.type=hdfs</span><br><span class=\"line\">a1.sinks.k1.hdfs.path = hdfs://master:8020/flume/events/%Y-%m-%d/%H%M/%S</span><br><span class=\"line\">a1.sinks.k1.hdfs.filePrefix = events-</span><br><span class=\"line\">a1.sinks.k1.hdfs.round = true</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundValue = 10</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundUnit = minute</span><br><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp=true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">#####################################################################################################</span><br><span class=\"line\">#####################################################################################################</span><br><span class=\"line\">#案例</span><br><span class=\"line\"># Name the components on this agent</span><br><span class=\"line\">a2.sources = r2</span><br><span class=\"line\">a2.sinks = k2</span><br><span class=\"line\">a2.channels = c2</span><br><span class=\"line\"></span><br><span class=\"line\"># Describe/configure the source</span><br><span class=\"line\">a2.sources.r2.type = exec</span><br><span class=\"line\">a2.sources.r2.command = tail -F /opt/module/hive/logs/hive.log</span><br><span class=\"line\"></span><br><span class=\"line\"># Describe the sink</span><br><span class=\"line\">a2.sinks.k2.type = hdfs</span><br><span class=\"line\">a2.sinks.k2.hdfs.path = hdfs://master:8020/flume/%Y%m%d/%H</span><br><span class=\"line\">#上传文件的前缀</span><br><span class=\"line\">a2.sinks.k2.hdfs.filePrefix = logs-</span><br><span class=\"line\">#是否按照时间滚动文件夹</span><br><span class=\"line\">a2.sinks.k2.hdfs.round = true</span><br><span class=\"line\">#多少时间单位创建一个新的文件夹</span><br><span class=\"line\">a2.sinks.k2.hdfs.roundValue = 1</span><br><span class=\"line\">#重新定义时间单位</span><br><span class=\"line\">a2.sinks.k2.hdfs.roundUnit = hour</span><br><span class=\"line\">#是否使用本地时间戳</span><br><span class=\"line\">a2.sinks.k2.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\">#积攒多少个Event才flush到HDFS一次</span><br><span class=\"line\">a2.sinks.k2.hdfs.batchSize = 100</span><br><span class=\"line\">#设置文件类型，可支持压缩</span><br><span class=\"line\">a2.sinks.k2.hdfs.fileType = DataStream</span><br><span class=\"line\">#多久生成一个新的文件</span><br><span class=\"line\">a2.sinks.k2.hdfs.rollInterval = 60</span><br><span class=\"line\">#设置每个文件的滚动大小</span><br><span class=\"line\">a2.sinks.k2.hdfs.rollSize = 134217700</span><br><span class=\"line\">#文件的滚动与Event数量无关</span><br><span class=\"line\">a2.sinks.k2.hdfs.rollCount = 0</span><br><span class=\"line\"></span><br><span class=\"line\"># Use a channel which buffers events in memory</span><br><span class=\"line\">a2.channels.c2.type = memory</span><br><span class=\"line\">a2.channels.c2.capacity = 1000</span><br><span class=\"line\">a2.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\"># Bind the source and sink to the channel</span><br><span class=\"line\">a2.sources.r2.channels = c2</span><br><span class=\"line\">a2.sinks.k2.channel = c2</span><br><span class=\"line\"></span><br><span class=\"line\">##########################################################################################################################################################################################################</span><br><span class=\"line\">#案例：</span><br><span class=\"line\">2. 入门案例 2.1  实时监控单个追加文件,将内容打印到控制台</span><br><span class=\"line\">配置文件名字: exec-flume-logger.conf</span><br><span class=\"line\">##name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\"></span><br><span class=\"line\">##source</span><br><span class=\"line\">a1.sources.r1.type = exec</span><br><span class=\"line\">a1.sources.r1.command = tail -F /home/hdfs/test/data.txt</span><br><span class=\"line\"></span><br><span class=\"line\">##channel</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">###sink</span><br><span class=\"line\">a1.sinks.k1.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1 </span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>＃实时监控目录下多个新文件</strong></p>\n<ol>\n<li><p>案例需求：使用Flume监听整个目录的文件，并上传至HDFS</p>\n</li>\n<li><p>配置文件编写</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">###我配置写的Spooling Directory Source</span><br><span class=\"line\">spooling-flume-hdfs.conf 配置文件如下</span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1 </span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = spooldir</span><br><span class=\"line\">a1.sources.r1.spoolDir = /home/hdfs/test/spoolDir </span><br><span class=\"line\">a1.sources.r1.fileHeader = true</span><br><span class=\"line\">#sinks</span><br><span class=\"line\">a1.sinks.k1.type = hdfs</span><br><span class=\"line\">a1.sinks.k1.hdfs.path =  hdfs://master:8020/flume/events/%Y-%m-%d</span><br><span class=\"line\">a1.sinks.k1.hdfs.filePrefix = logs-</span><br><span class=\"line\">a1.sinks.k1.hdfs.round = true</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundValue = 10</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundUnit = second</span><br><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4. 入门案例 3  实时监控目录下的新文件,将内容上传到HDFS中</span><br><span class=\"line\">配置文件名字: spooling-flume-hdfs.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#Named</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\">a1.sinks = k1 </span><br><span class=\"line\"></span><br><span class=\"line\">#Source</span><br><span class=\"line\">a1.sources.r1.type = spooldir</span><br><span class=\"line\">a1.sources.r1.spoolDir = /opt/module/flume-1.9.0/jobs/spooling</span><br><span class=\"line\">a1.sources.r1.fileSuffix = .COMPLETED</span><br><span class=\"line\">a1.sources.r1.ignorePattern = .*\\.tmp</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#Channel</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">#Sink</span><br><span class=\"line\">a1.sinks.k1.type = hdfs</span><br><span class=\"line\">a1.sinks.k1.hdfs.path = hdfs://hadoop102:8020/flume/%Y%m%d/%H</span><br><span class=\"line\">#上传文件的前缀</span><br><span class=\"line\">a1.sinks.k1.hdfs.filePrefix = logs-</span><br><span class=\"line\">#是否按照时间滚动文件夹</span><br><span class=\"line\">a1.sinks.k1.hdfs.round = true</span><br><span class=\"line\">#多少时间单位创建一个新的文件夹</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundValue = 1</span><br><span class=\"line\">#重新定义时间单位</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundUnit = hour</span><br><span class=\"line\">#是否使用本地时间戳</span><br><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\">#积攒多少个Event才flush到HDFS一次</span><br><span class=\"line\">a1.sinks.k1.hdfs.batchSize = 100</span><br><span class=\"line\">#设置文件类型，可支持压缩</span><br><span class=\"line\">a1.sinks.k1.hdfs.fileType = DataStream</span><br><span class=\"line\">#多久生成一个新的文件</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollInterval = 60</span><br><span class=\"line\">#设置每个文件的滚动大小</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollSize = 134217700</span><br><span class=\"line\">#文件的滚动与Event数量无关</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollCount = 0</span><br><span class=\"line\"></span><br><span class=\"line\">#Bind</span><br><span class=\"line\">a1.sources.r1.channels = c1 </span><br><span class=\"line\">a1.sinks.k1.channel = c1 </span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>＃实时监控多个目录下的多个追加文件</strong></p>\n<p>Exec source适用于监控一个实时追加的文件，不能实现断点续传；Spooldir Source适合用于同步新文件，但不适合对实时追加日志的文件进行监听并同步；而Taildir Source适合用于监听多个实时追加的文件，并且能够实现断点续传。</p>\n<blockquote>\n<p>案例需求:使用Flume监听整个目录的实时追加文件，并上传至HDFS</p>\n</blockquote>\n<ul>\n<li><p>配置文件编写：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = TAILDIR</span><br><span class=\"line\">a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json</span><br><span class=\"line\">a1.sources.r1.filegroups = f1 f2</span><br><span class=\"line\">a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/.*\\.txt</span><br><span class=\"line\">a1.sources.r1.filegroups.f2 = /home/hdfs/test/data/.*\\.log</span><br><span class=\"line\"></span><br><span class=\"line\">#sinks</span><br><span class=\"line\">a1.sinks.k1.type = hdfs</span><br><span class=\"line\">a1.sinks.k1.hdfs.path =  hdfs://master:8020/flume/tail/%Y-%m-%d</span><br><span class=\"line\">a1.sinks.k1.hdfs.filePrefix = tail-</span><br><span class=\"line\">a1.sinks.k1.hdfs.round = true</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundValue = 10</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundUnit = second</span><br><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">#bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"三、Flume进阶\"><a href=\"#三、Flume进阶\" class=\"headerlink\" title=\"三、Flume进阶\"></a>三、Flume进阶</h2><h3 id=\"1、Flume事务\"><a href=\"#1、Flume事务\" class=\"headerlink\" title=\"1、Flume事务\"></a>1、Flume事务</h3><p><img src=\"https://bitiful.hudi.space/posts/flume.jpg\"></p>\n<h3 id=\"2、Agent内部原理\"><a href=\"#2、Agent内部原理\" class=\"headerlink\" title=\"2、Agent内部原理\"></a>2、Agent内部原理</h3><p><img src=\"https://bitiful.hudi.space/posts/Agent.jpg\"></p>\n<ul>\n<li>source采集到日志服务器或者是端口等的数据时，报数据包装成event</li>\n<li>在批量的放入临时缓存putlist，并通过channel processor处理事件</li>\n<li>channel processor将事件传递给拦截器链，对事件进行过滤</li>\n<li>再把事件还回channel processor并将每个事件给channel selector</li>\n<li>返回写入事件的channel 列表</li>\n<li>根据channel选择器的结果，将事件写入对应得channel中</li>\n<li>doTake将事件批量的取到sink processor中再通过事务写入到相应的目标中</li>\n</ul>\n<ol>\n<li><p>ChannelSelector</p>\n<p>ChannelSelector的作用就是选出Event将要被发往哪个Channel。其共有两种类型，分别是Replicating（复制）和Multiplexing（多路复用）。</p>\n<p>ReplicatingSelector会将同一个Event发往所有的Channel，Multiplexing会根据相应的原则，将不同的Event发往不同的Channel。</p>\n</li>\n<li><p>SinkProcessor</p>\n<p>SinkProcessor共有三种类型，分别是DefaultSinkProcessor、LoadBalancingSinkProcessor和FailoverSinkProcessor</p>\n<p>DefaultSinkProcessor对应的是单个的Sink，LoadBalancingSinkProcessor和FailoverSinkProcessor对应的是Sink Group，LoadBalancingSinkProcessor可以实现负载均衡的功能，FailoverSinkProcessor可以错误恢复的功能。</p>\n</li>\n</ol>\n<h3 id=\"3、Flume的拓扑结构\"><a href=\"#3、Flume的拓扑结构\" class=\"headerlink\" title=\"3、Flume的拓扑结构\"></a>3、Flume的拓扑结构</h3><ol>\n<li><p>简单串联：这种模式是将多个flume顺序连接起来了，从最初的source开始到最终sink传送的目的存储系统。此模式不建议桥接过多的flume数量， flume数量过多不仅会影响传输速率，而且一旦传输过程中某个节点flume宕机，会影响整个传输系统。</p>\n<p>即，一个agent的sink连接另个agent的source</p>\n</li>\n<li><p>复制和多虑复用：Flume支持将事件流向一个或者多个目的地。这种模式可以将相同数据复制到多个channel中，或者将不同数据分发到不同的channel中，sink可以选择传送到不同的目的地。</p>\n</li>\n<li><p>负载均衡和故障转移：Flume支持使用将多个sink逻辑上分到一个sink组，sink组配合不同的SinkProcessor可以实现负载均衡和错误恢复的功能。</p>\n</li>\n<li><p>聚合：</p>\n<p>这种模式是我们最常见的，也非常实用，日常web应用通常分布在上百个服务器，大者甚至上千个、上万个服务器。产生的日志，处理起来也非常麻烦。用flume的这种组合方式能很好的解决这一问题，每台服务器部署一个flume采集日志，传送到一个集中收集日志的flume，再由此flume上传到hdfs、hive、hbase等，进行日志分析。</p>\n</li>\n</ol>\n<h3 id=\"4、Flume开发案例\"><a href=\"#4、Flume开发案例\" class=\"headerlink\" title=\"4、Flume开发案例\"></a>4、Flume开发案例</h3><blockquote>\n<p>案例需求：使用Flume-1监控文件变动，Flume-1将变动内容传递给Flume-2，Flume-2负责存储到HDFS。同时Flume-1将变动内容传递给Flume-3，Flume-3负责输出到Local FileSystem。</p>\n</blockquote>\n<ul>\n<li><p>配置文件编写：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Flume-1</span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1 k2</span><br><span class=\"line\">a1.channels = c1 c2</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = TAILDIR</span><br><span class=\"line\">a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json</span><br><span class=\"line\">a1.sources.r1.filegroups = f1</span><br><span class=\"line\">a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/log.log</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sources.r1.selector.type = replicating</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = avro</span><br><span class=\"line\">a1.sinks.k1.hostname = 192.168.157.10</span><br><span class=\"line\">a1.sinks.k1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k2.type = avro</span><br><span class=\"line\">a1.sinks.k2.hostname = 192.168.157.10</span><br><span class=\"line\">a1.sinks.k2.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">a1.channels.c2.type = memory</span><br><span class=\"line\">a1.channels.c2.capacity = 10000</span><br><span class=\"line\">a1.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sources.r1.channels = c2</span><br><span class=\"line\">a1.sinks.k2.channel = c2</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume-01.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\">#############################################################################################</span><br><span class=\"line\">Flume-2</span><br><span class=\"line\">#name</span><br><span class=\"line\">a2.sources = r2</span><br><span class=\"line\">a2.sinks = k2</span><br><span class=\"line\">a2.channels = c2</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a2.sources.r2.type = avro</span><br><span class=\"line\">a2.sources.r2.bind = localhost</span><br><span class=\"line\">a2.sources.r2.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a2.sinks.k2.type = hdfs</span><br><span class=\"line\">a2.sinks.k2.hdfs.path =  hdfs://master:8020/flume/threeflume/%Y-%m-%d</span><br><span class=\"line\">a2.sinks.k2.hdfs.filePrefix = log-</span><br><span class=\"line\">a2.sinks.k2.hdfs.round = true</span><br><span class=\"line\">a2.sinks.k2.hdfs.roundValue = 10</span><br><span class=\"line\">a2.sinks.k2.hdfs.roundUnit = second</span><br><span class=\"line\">a2.sinks.k2.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a2.channels.c2.type = memory</span><br><span class=\"line\">a2.channels.c2.capacity = 10000</span><br><span class=\"line\">a2.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a2.sources.r2.channels = c2</span><br><span class=\"line\">a2.sinks.k2.channel = c2</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume-02.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\">################################################################################################</span><br><span class=\"line\">Flume-3</span><br><span class=\"line\">#name</span><br><span class=\"line\">a3.sources = r3</span><br><span class=\"line\">a3.sinks = k3</span><br><span class=\"line\">a3.channels = c3</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a3.sources.r3.type = avro</span><br><span class=\"line\">a3.sources.r3.bind = localhost</span><br><span class=\"line\">a3.sources.r3.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a3.sinks.k3.type = file_roll   ##采集到的数据放到本地Stores events on the local filesystem. </span><br><span class=\"line\">a3.sinks.k3.sink.directory = /opt/module/flume-1.9.0/jobs/fileroll</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a3.channels.c3.type = memory</span><br><span class=\"line\">a3.channels.c3.capacity = 10000</span><br><span class=\"line\">a3.channels.c3.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a3.sources.r3.channels = c3</span><br><span class=\"line\">a3.sinks.k3.channel = c3</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume-03.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>输出的本地目录必须是已经存在的目录，如果该目录不存在，并不会创建新的目录。</p>\n</li>\n</ul>\n<p><strong>#负载均衡和故障转移</strong></p>\n<ul>\n<li><h5 id=\"故障转移：案例分析\"><a href=\"#故障转移：案例分析\" class=\"headerlink\" title=\"故障转移：案例分析\"></a>故障转移：案例分析</h5></li>\n</ul>\n<p>使用Flume1监控一个端口，其sink组中的sink分别对接Flume2和Flume3，采用FailoverSinkProcessor，实现故障转移的功能。</p>\n<p><strong>使用jps -ml查看Flume进程。</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flume01-failover.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinkgroups = g1</span><br><span class=\"line\">a1.sinks = k1 k2</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = netcat</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 44444</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinkgroups.g1.processor.type = failover</span><br><span class=\"line\">a1.sinkgroups.g1.processor.priority.k1 = 5</span><br><span class=\"line\">a1.sinkgroups.g1.processor.priority.k2 = 10</span><br><span class=\"line\">a1.sinkgroups.g1.processor.maxpenalty = 10000</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = avro</span><br><span class=\"line\">a1.sinks.k1.hostname = localhost</span><br><span class=\"line\">a1.sinks.k1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k2.type = avro</span><br><span class=\"line\">a1.sinks.k2.hostname = localhost</span><br><span class=\"line\">a1.sinks.k2.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sinkgroups.g1.sinks = k1 k2</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\">a1.sinks.k2.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-failover.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\">################################################################################################</span><br><span class=\"line\">flume02-failover.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a2.sources = r2</span><br><span class=\"line\">a2.sinks = k2</span><br><span class=\"line\">a2.channels = c2</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a2.sources.r2.type = avro</span><br><span class=\"line\">a2.sources.r2.bind = localhost</span><br><span class=\"line\">a2.sources.r2.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a2.sinks.k2.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a2.channels.c2.type = memory</span><br><span class=\"line\">a2.channels.c2.capacity = 10000</span><br><span class=\"line\">a2.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a2.sources.r2.channels = c2</span><br><span class=\"line\">a2.sinks.k2.channel = c2</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume02-failover.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">################################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">flume03-failover.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a3.sources = r3</span><br><span class=\"line\">a3.sinks = k3</span><br><span class=\"line\">a3.channels = c3</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a3.sources.r3.type = avro</span><br><span class=\"line\">a3.sources.r3.bind = localhost</span><br><span class=\"line\">a3.sources.r3.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a3.sinks.k3.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a3.channels.c3.type = memory</span><br><span class=\"line\">a3.channels.c3.capacity = 10000</span><br><span class=\"line\">a3.channels.c3.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a3.sources.r3.channels = c3</span><br><span class=\"line\">a3.sinks.k3.channel = c3</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume03-failover.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>负载均衡</li>\n</ul>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flume01-balance.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1 k2</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = netcat</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 44444</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinkgroups.g1.processor.type = load_balance</span><br><span class=\"line\">a1.sinkgroups.g1.processor.backoff = true</span><br><span class=\"line\">a1.sinkgroups.g1.processor.selector = random</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = avro</span><br><span class=\"line\">a1.sinks.k1.hostname = localhost</span><br><span class=\"line\">a1.sinks.k1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k2.type = avro</span><br><span class=\"line\">a1.sinks.k2.hostname = localhost</span><br><span class=\"line\">a1.sinks.k2.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\">a1.sinks.k2.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-balance.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">################################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">flume02-balance.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a2.sources = r2</span><br><span class=\"line\">a2.sinks = k2</span><br><span class=\"line\">a2.channels = c2</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a2.sources.r2.type = avro</span><br><span class=\"line\">a2.sources.r2.bind = localhost</span><br><span class=\"line\">a2.sources.r2.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a2.sinks.k2.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a2.channels.c2.type = memory</span><br><span class=\"line\">a2.channels.c2.capacity = 10000</span><br><span class=\"line\">a2.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a2.sources.r2.channels = c2</span><br><span class=\"line\">a2.sinks.k2.channel = c2</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume02-balance.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">################################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flume03-balance.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a3.sources = r3</span><br><span class=\"line\">a3.sinks = k3</span><br><span class=\"line\">a3.channels = c3</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a3.sources.r3.type = avro</span><br><span class=\"line\">a3.sources.r3.bind = localhost</span><br><span class=\"line\">a3.sources.r3.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a3.sinks.k3.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a3.channels.c3.type = memory</span><br><span class=\"line\">a3.channels.c3.capacity = 10000</span><br><span class=\"line\">a3.channels.c3.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a3.sources.r3.channels = c3</span><br><span class=\"line\">a3.sinks.k3.channel = c3</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume03-balance.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>聚合</li>\n</ul>\n<blockquote>\n<p>案例需求：hadoop102上的Flume-1监控文件&#x2F;opt&#x2F;module&#x2F;group.log，hadoop103上的Flume-2监控某一个端口的数据流，Flume-1与Flume-2将数据发送给hadoop104上的Flume-3，Flume-3将最终数据打印到控制台。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flume01-aggre.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = TAILDIR</span><br><span class=\"line\">a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json</span><br><span class=\"line\">a1.sources.r1.filegroups = f1</span><br><span class=\"line\">a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/log.log</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sources.r1.selector.type = replicating</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = avro</span><br><span class=\"line\">a1.sinks.k1.hostname = slave-02</span><br><span class=\"line\">a1.sinks.k1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-aggre.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">###############################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">flume02-aggre.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = netcat</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 44444</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = avro</span><br><span class=\"line\">a1.sinks.k1.hostname = slave-02</span><br><span class=\"line\">a1.sinks.k1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume02-aggre.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">################################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flume03-aggre.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a2.sources = r2</span><br><span class=\"line\">a2.sinks = k2</span><br><span class=\"line\">a2.channels = c2</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a2.sources.r2.type = avro</span><br><span class=\"line\">a2.sources.r2.bind = slave-02  ##此处不能写localhost</span><br><span class=\"line\">a2.sources.r2.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a2.sinks.k2.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a2.channels.c2.type = memory</span><br><span class=\"line\">a2.channels.c2.capacity = 10000</span><br><span class=\"line\">a2.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a2.sources.r2.channels = c2</span><br><span class=\"line\">a2.sinks.k2.channel = c2</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume03-aggre.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>自定义interceptor</li>\n</ul>\n<blockquote>\n<p>需求：使用Flume采集服务器本地日志，需要按照日志类型的不同，将不同种类的日志发往不同的分析系统。</p>\n</blockquote>\n<ol>\n<li><p>添加maven依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.flume<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>flume-ng-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.9.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编写interceptor</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyInterceptor</span>  <span class=\"keyword\">implements</span> <span class=\"title class_\">Interceptor</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initialize</span><span class=\"params\">()</span> &#123; &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Event <span class=\"title function_\">intercept</span><span class=\"params\">(Event event)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] body = event.getBody();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(body, StandardCharsets.UTF_8);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s.contains(<span class=\"string\">&quot;#&quot;</span>) || s.contains(<span class=\"string\">&quot;*&quot;</span>)) &#123;</span><br><span class=\"line\">            event.getHeaders().put(<span class=\"string\">&quot;type&quot;</span>,<span class=\"string\">&quot;char&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.contains(<span class=\"string\">&quot;1&quot;</span>))&#123;</span><br><span class=\"line\">            event.getHeaders().put(<span class=\"string\">&quot;type&quot;</span>,<span class=\"string\">&quot;num&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            event.getHeaders().put(<span class=\"string\">&quot;type&quot;</span>,<span class=\"string\">&quot;word&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> event;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Event&gt; <span class=\"title function_\">intercept</span><span class=\"params\">(List&lt;Event&gt; list)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Event event : list) &#123;</span><br><span class=\"line\">            intercept(event);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">close</span><span class=\"params\">()</span> &#123; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">build</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Interceptor</span>.Builder&#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> Interceptor <span class=\"title function_\">build</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyInterceptor</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(Context context)</span> &#123; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编写flume配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flume01-interceptor.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1 k2 k3</span><br><span class=\"line\">a1.channels = c1 c2 c3</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = netcat</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 44444</span><br><span class=\"line\">a1.sources.r1.interceptors = i1</span><br><span class=\"line\">a1.sources.r1.interceptors.i1.type = com.suhe.interceptor.MyInterceptor$Builder</span><br><span class=\"line\">a1.sources.r1.selector.type = multiplexing</span><br><span class=\"line\">a1.sources.r1.selector.header = type</span><br><span class=\"line\">a1.sources.r1.selector.mapping.char = c1</span><br><span class=\"line\">a1.sources.r1.selector.mapping.num = c2</span><br><span class=\"line\">a1.sources.r1.selector.mapping.word = c3</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = avro</span><br><span class=\"line\">a1.sinks.k1.hostname = localhost</span><br><span class=\"line\">a1.sinks.k1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k2.type = avro</span><br><span class=\"line\">a1.sinks.k2.hostname = localhost</span><br><span class=\"line\">a1.sinks.k2.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k3.type = avro</span><br><span class=\"line\">a1.sinks.k3.hostname = localhost</span><br><span class=\"line\">a1.sinks.k3.port = 8888</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">a1.channels.c2.type = memory</span><br><span class=\"line\">a1.channels.c2.capacity = 10000</span><br><span class=\"line\">a1.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">a1.channels.c3.type = memory</span><br><span class=\"line\">a1.channels.c3.capacity = 10000</span><br><span class=\"line\">a1.channels.c3.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1 c2 c3</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\">a1.sinks.k2.channel = c2</span><br><span class=\"line\">a1.sinks.k3.channel = c3</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-interceptor.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\">#############################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flume02-interceptor.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = avro</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume02-interceptor.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#############################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">flume03-interceptor.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = avro</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume03-interceptor.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">#############################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">flume04-interceptor.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = avro</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 8888</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume04-interceptor.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = TAILDIR</span><br><span class=\"line\">a1.sources.r1.positionFile = /home/suxichuan/flume/taildir_position.json</span><br><span class=\"line\">a1.sources.r1.filegroups = f1</span><br><span class=\"line\">a1.sources.r1.filegroups.f1 = /home/suxichuan/behavior/log</span><br><span class=\"line\">#channels</span><br><span class=\"line\">a1.channels.channel1.type = org.apache.flume.channel.kafka.KafkaChannel</span><br><span class=\"line\">a1.channels.channel1.kafka.bootstrap.servers = hadoop102:9092,hadoop103:9092,hadoop104:9092</span><br><span class=\"line\">a1.channels.channel1.kafka.topic = ods_behavor_log</span><br><span class=\"line\">a1.channels.channel1.kafka.consumer.group.id = ods_behavor_group_1\t\t</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>以上就是，Flume基础学习内容，后续会根据学习的规划调整笔记更新的内容。</p>\n","cover_type":"img","excerpt":"","more":"<h1 id=\"Flume基础学习（一）\"><a href=\"#Flume基础学习（一）\" class=\"headerlink\" title=\"Flume基础学习（一）\"></a>Flume基础学习（一）</h1><p>​\t\tFlume日志采集工具，可以配合第三方的前端埋点SDK去实现行为日志采集，到目前为止在工作中也没有使用到和涉及到。当时在使用这个工具时，学习的内容的深度相对来说也比较浅薄。后续会根据学习内容和规划做相应的调整，完善相关的学习笔记。本文主要介绍了Flume工具的基本配置使用、各个组件在其中发挥的作用、内部架构等。</p>\n<h2 id=\"一、Flume概述：\"><a href=\"#一、Flume概述：\" class=\"headerlink\" title=\"一、Flume概述：\"></a>一、Flume概述：</h2><h3 id=\"1、定义：\"><a href=\"#1、定义：\" class=\"headerlink\" title=\"1、定义：\"></a>1、定义：</h3><p>Flume是Cloudera提供的一个高可用的，高可靠的，分布式的海量日志采集、聚合和传输的系统。Flume基于流式架构，灵活简单。</p>\n<h3 id=\"2、Flume架构\"><a href=\"#2、Flume架构\" class=\"headerlink\" title=\"2、Flume架构\"></a>2、Flume架构</h3><img src=\"https://bitiful.hudi.space/posts/flume_topology.jpg\" style=\"zoom:150%;\" />\n\n<ul>\n<li><p>agent：</p>\n<ul>\n<li>Agent是一个JVM进程，它以事件的形式将数据从源头送至目的。</li>\n<li>Agent主要有3个部分组成，Source、Channel、Sink。</li>\n</ul>\n</li>\n<li><p>source</p>\n<p>Source是负责接收数据到Flume Agent的组件。Source组件可以处理各种类型、各种格式的日志数据，包括<strong>avro</strong>、thrift、<strong>exec</strong>、jms、<strong>spooling directory</strong>、<strong>netcat</strong>、 <strong>taildir</strong> 、sequence generator、syslog、http、legacy。</p>\n</li>\n<li><p>sink</p>\n<ul>\n<li>Sink不断地轮询Channel中的事件且批量地移除它们，并将这些事件批量写入到存储或索引系统、或者被发送到另一个Flume Agent。</li>\n<li>Sink组件目的地包括<strong>hdfs</strong>、<strong>logger</strong>、<strong>avro</strong>、thrift、ipc、<strong>file</strong>、<strong>HBase</strong>、solr、自定义。</li>\n</ul>\n</li>\n<li><p>channel</p>\n<ul>\n<li>Channel是位于Source和Sink之间的缓冲区。因此，Channel允许Source和Sink运作在不同的速率上。Channel是线程安全的，可以同时处理几个Source的写入操作和几个Sink的读取操作。</li>\n<li>Flume自带两种Channel：Memory Channel和File Channel。</li>\n<li>Memory Channel是内存中的队列。Memory Channel在不需要关心数据丢失的情景下适用。如果需要关心数据丢失，那么Memory Channel就不应该使用，因为程序死亡、机器宕机或者重启都会导致数据丢失。</li>\n<li>File Channel将所有事件写到磁盘。因此在程序关闭或机器宕机的情况下不会丢失数据。</li>\n</ul>\n</li>\n<li><p>event</p>\n<p>传输单元，Flume数据传输的基本单元，以Event的形式将数据从源头送至目的地。Event由<strong>Header</strong>和<strong>Body</strong>两部分组成，Header用来存放该event的一些属性，为K-V结构，Body用来存放该条数据，形式为字节数组。</p>\n<table>\n<thead>\n<tr>\n<th>header(k,v)</th>\n<th>body(byte array)</th>\n</tr>\n</thead>\n</table>\n</li>\n</ul>\n<h2 id=\"二、Flume入门\"><a href=\"#二、Flume入门\" class=\"headerlink\" title=\"二、Flume入门\"></a>二、Flume入门</h2><h3 id=\"1、安装Flume地址\"><a href=\"#1、安装Flume地址\" class=\"headerlink\" title=\"1、安装Flume地址\"></a>1、安装Flume地址</h3><ul>\n<li>官网地址：<a href=\"http://flume.apache.org/\">http://flume.apache.org/</a></li>\n<li>文档地址：<a href=\"http://flume.apache.org/FlumeUserGuide.html\">http://flume.apache.org/FlumeUserGuide.html</a></li>\n</ul>\n<h3 id=\"2、安装部署\"><a href=\"#2、安装部署\" class=\"headerlink\" title=\"2、安装部署\"></a>2、安装部署</h3><p>hadoop版本3.x要删除lib文件夹下的guava-11.0.2.jar包以兼容Hadoop 3.x</p>\n<h3 id=\"3、官方入门案例\"><a href=\"#3、官方入门案例\" class=\"headerlink\" title=\"3、官方入门案例\"></a>3、官方入门案例</h3><ol>\n<li><p>需求：使用Flume监听一个端口，收集该端口数据，并打印到控制台。</p>\n</li>\n<li><p>安装netcat工具</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo yun install -y nc</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>创建Flume Agent配置文件flume-netcat-logger.conf</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">添加内容如下：</span><br><span class=\"line\"># Name the components on this agent    #a1表示agent的名字</span><br><span class=\"line\">a1.sources = r1  ##r1表示a1 agent一个source的名字</span><br><span class=\"line\">a1.sinks = k1    ##k1表示a1 agent一个sink的名字</span><br><span class=\"line\">a1.channels = c1 ##c1表示a1 agent一个channel的名字</span><br><span class=\"line\"></span><br><span class=\"line\"># Describe/configure the source</span><br><span class=\"line\">a1.sources.r1.type = netcat   ##表示r1 source的类型也就是输入源的类型</span><br><span class=\"line\">a1.sources.r1.bind = localhost  ##要监听的主机的IP </span><br><span class=\"line\">a1.sources.r1.port = 44444  ###要监听的端口号是多少</span><br><span class=\"line\"></span><br><span class=\"line\"># Describe the sink</span><br><span class=\"line\">a1.sinks.k1.type = logger   ##a1的数据输出的目的地是控制台</span><br><span class=\"line\"></span><br><span class=\"line\"># Use a channel which buffers events in memory</span><br><span class=\"line\">a1.channels.c1.type = memory   ##表示a1 channel的类型是memory内存型</span><br><span class=\"line\">a1.channels.c1.capacity = 1000 ##表示a1 channel的事件容量是1000条</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100  ##表示a1的channel收集到100条event后再去提交事务</span><br><span class=\"line\"></span><br><span class=\"line\"># Bind the source and sink to the channel</span><br><span class=\"line\">a1.sources.r1.channels = c1   ##表示吧r1和c1连接起来</span><br><span class=\"line\">a1.sinks.k1.channel = c1      ##表示把k1和c1连接起来</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>启动flume</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/flume-ng agent --conf conf/ --name a1 --conf-file job/flume-netcat-logger.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">bin/flume-ng agent -c conf/ -n a1 -f job/flume-netcat-logger.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n\n<p>参数说明：</p>\n<p>​    –conf&#x2F;-c：表示配置文件存储在conf&#x2F;目录</p>\n<p>​    –name&#x2F;-n：表示给agent起名为a1</p>\n<p>​    –conf-file&#x2F;-f：flume本次启动读取的配置文件是在job文件夹下的flume-telnet.conf文件。</p>\n<p>​    -Dflume.root.logger&#x3D;INFO,console ：-D表示flume运行时动态修改flume.root.logger参数属性值，并将控制台日志打印级别设置为INFO级别。日志级别包括:log、info、warn、error。</p>\n</li>\n</ol>\n<p><strong>#实时监控单个追加文件案例</strong>。</p>\n<ol>\n<li><p>需求说明：实时监控Hive日志，并上传到HDFS中</p>\n</li>\n<li><p>配置文件编写：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">##自己编写的配置</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\">a1.sinks=k1</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sources.r1.type = TAILDIR</span><br><span class=\"line\">a1.sources.r1.positionFile =/home/hdfs/flume/taildir_position.json</span><br><span class=\"line\">a1.sources.r1.filegroups = f1</span><br><span class=\"line\">a1.sources.r1.filegroups.f1 = /home/hdfs/flume/data/.*\\.txt</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k1.type=hdfs</span><br><span class=\"line\">a1.sinks.k1.hdfs.path = hdfs://master:8020/flume/events/%Y-%m-%d/%H%M/%S</span><br><span class=\"line\">a1.sinks.k1.hdfs.filePrefix = events-</span><br><span class=\"line\">a1.sinks.k1.hdfs.round = true</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundValue = 10</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundUnit = minute</span><br><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp=true</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">#####################################################################################################</span><br><span class=\"line\">#####################################################################################################</span><br><span class=\"line\">#案例</span><br><span class=\"line\"># Name the components on this agent</span><br><span class=\"line\">a2.sources = r2</span><br><span class=\"line\">a2.sinks = k2</span><br><span class=\"line\">a2.channels = c2</span><br><span class=\"line\"></span><br><span class=\"line\"># Describe/configure the source</span><br><span class=\"line\">a2.sources.r2.type = exec</span><br><span class=\"line\">a2.sources.r2.command = tail -F /opt/module/hive/logs/hive.log</span><br><span class=\"line\"></span><br><span class=\"line\"># Describe the sink</span><br><span class=\"line\">a2.sinks.k2.type = hdfs</span><br><span class=\"line\">a2.sinks.k2.hdfs.path = hdfs://master:8020/flume/%Y%m%d/%H</span><br><span class=\"line\">#上传文件的前缀</span><br><span class=\"line\">a2.sinks.k2.hdfs.filePrefix = logs-</span><br><span class=\"line\">#是否按照时间滚动文件夹</span><br><span class=\"line\">a2.sinks.k2.hdfs.round = true</span><br><span class=\"line\">#多少时间单位创建一个新的文件夹</span><br><span class=\"line\">a2.sinks.k2.hdfs.roundValue = 1</span><br><span class=\"line\">#重新定义时间单位</span><br><span class=\"line\">a2.sinks.k2.hdfs.roundUnit = hour</span><br><span class=\"line\">#是否使用本地时间戳</span><br><span class=\"line\">a2.sinks.k2.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\">#积攒多少个Event才flush到HDFS一次</span><br><span class=\"line\">a2.sinks.k2.hdfs.batchSize = 100</span><br><span class=\"line\">#设置文件类型，可支持压缩</span><br><span class=\"line\">a2.sinks.k2.hdfs.fileType = DataStream</span><br><span class=\"line\">#多久生成一个新的文件</span><br><span class=\"line\">a2.sinks.k2.hdfs.rollInterval = 60</span><br><span class=\"line\">#设置每个文件的滚动大小</span><br><span class=\"line\">a2.sinks.k2.hdfs.rollSize = 134217700</span><br><span class=\"line\">#文件的滚动与Event数量无关</span><br><span class=\"line\">a2.sinks.k2.hdfs.rollCount = 0</span><br><span class=\"line\"></span><br><span class=\"line\"># Use a channel which buffers events in memory</span><br><span class=\"line\">a2.channels.c2.type = memory</span><br><span class=\"line\">a2.channels.c2.capacity = 1000</span><br><span class=\"line\">a2.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\"># Bind the source and sink to the channel</span><br><span class=\"line\">a2.sources.r2.channels = c2</span><br><span class=\"line\">a2.sinks.k2.channel = c2</span><br><span class=\"line\"></span><br><span class=\"line\">##########################################################################################################################################################################################################</span><br><span class=\"line\">#案例：</span><br><span class=\"line\">2. 入门案例 2.1  实时监控单个追加文件,将内容打印到控制台</span><br><span class=\"line\">配置文件名字: exec-flume-logger.conf</span><br><span class=\"line\">##name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\"></span><br><span class=\"line\">##source</span><br><span class=\"line\">a1.sources.r1.type = exec</span><br><span class=\"line\">a1.sources.r1.command = tail -F /home/hdfs/test/data.txt</span><br><span class=\"line\"></span><br><span class=\"line\">##channel</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">###sink</span><br><span class=\"line\">a1.sinks.k1.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1 </span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>＃实时监控目录下多个新文件</strong></p>\n<ol>\n<li><p>案例需求：使用Flume监听整个目录的文件，并上传至HDFS</p>\n</li>\n<li><p>配置文件编写</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">###我配置写的Spooling Directory Source</span><br><span class=\"line\">spooling-flume-hdfs.conf 配置文件如下</span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1 </span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = spooldir</span><br><span class=\"line\">a1.sources.r1.spoolDir = /home/hdfs/test/spoolDir </span><br><span class=\"line\">a1.sources.r1.fileHeader = true</span><br><span class=\"line\">#sinks</span><br><span class=\"line\">a1.sinks.k1.type = hdfs</span><br><span class=\"line\">a1.sinks.k1.hdfs.path =  hdfs://master:8020/flume/events/%Y-%m-%d</span><br><span class=\"line\">a1.sinks.k1.hdfs.filePrefix = logs-</span><br><span class=\"line\">a1.sinks.k1.hdfs.round = true</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundValue = 10</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundUnit = second</span><br><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4. 入门案例 3  实时监控目录下的新文件,将内容上传到HDFS中</span><br><span class=\"line\">配置文件名字: spooling-flume-hdfs.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#Named</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\">a1.sinks = k1 </span><br><span class=\"line\"></span><br><span class=\"line\">#Source</span><br><span class=\"line\">a1.sources.r1.type = spooldir</span><br><span class=\"line\">a1.sources.r1.spoolDir = /opt/module/flume-1.9.0/jobs/spooling</span><br><span class=\"line\">a1.sources.r1.fileSuffix = .COMPLETED</span><br><span class=\"line\">a1.sources.r1.ignorePattern = .*\\.tmp</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#Channel</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">#Sink</span><br><span class=\"line\">a1.sinks.k1.type = hdfs</span><br><span class=\"line\">a1.sinks.k1.hdfs.path = hdfs://hadoop102:8020/flume/%Y%m%d/%H</span><br><span class=\"line\">#上传文件的前缀</span><br><span class=\"line\">a1.sinks.k1.hdfs.filePrefix = logs-</span><br><span class=\"line\">#是否按照时间滚动文件夹</span><br><span class=\"line\">a1.sinks.k1.hdfs.round = true</span><br><span class=\"line\">#多少时间单位创建一个新的文件夹</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundValue = 1</span><br><span class=\"line\">#重新定义时间单位</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundUnit = hour</span><br><span class=\"line\">#是否使用本地时间戳</span><br><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\">#积攒多少个Event才flush到HDFS一次</span><br><span class=\"line\">a1.sinks.k1.hdfs.batchSize = 100</span><br><span class=\"line\">#设置文件类型，可支持压缩</span><br><span class=\"line\">a1.sinks.k1.hdfs.fileType = DataStream</span><br><span class=\"line\">#多久生成一个新的文件</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollInterval = 60</span><br><span class=\"line\">#设置每个文件的滚动大小</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollSize = 134217700</span><br><span class=\"line\">#文件的滚动与Event数量无关</span><br><span class=\"line\">a1.sinks.k1.hdfs.rollCount = 0</span><br><span class=\"line\"></span><br><span class=\"line\">#Bind</span><br><span class=\"line\">a1.sources.r1.channels = c1 </span><br><span class=\"line\">a1.sinks.k1.channel = c1 </span><br></pre></td></tr></table></figure></li>\n</ol>\n<p><strong>＃实时监控多个目录下的多个追加文件</strong></p>\n<p>Exec source适用于监控一个实时追加的文件，不能实现断点续传；Spooldir Source适合用于同步新文件，但不适合对实时追加日志的文件进行监听并同步；而Taildir Source适合用于监听多个实时追加的文件，并且能够实现断点续传。</p>\n<blockquote>\n<p>案例需求:使用Flume监听整个目录的实时追加文件，并上传至HDFS</p>\n</blockquote>\n<ul>\n<li><p>配置文件编写：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = TAILDIR</span><br><span class=\"line\">a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json</span><br><span class=\"line\">a1.sources.r1.filegroups = f1 f2</span><br><span class=\"line\">a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/.*\\.txt</span><br><span class=\"line\">a1.sources.r1.filegroups.f2 = /home/hdfs/test/data/.*\\.log</span><br><span class=\"line\"></span><br><span class=\"line\">#sinks</span><br><span class=\"line\">a1.sinks.k1.type = hdfs</span><br><span class=\"line\">a1.sinks.k1.hdfs.path =  hdfs://master:8020/flume/tail/%Y-%m-%d</span><br><span class=\"line\">a1.sinks.k1.hdfs.filePrefix = tail-</span><br><span class=\"line\">a1.sinks.k1.hdfs.round = true</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundValue = 10</span><br><span class=\"line\">a1.sinks.k1.hdfs.roundUnit = second</span><br><span class=\"line\">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">#bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"三、Flume进阶\"><a href=\"#三、Flume进阶\" class=\"headerlink\" title=\"三、Flume进阶\"></a>三、Flume进阶</h2><h3 id=\"1、Flume事务\"><a href=\"#1、Flume事务\" class=\"headerlink\" title=\"1、Flume事务\"></a>1、Flume事务</h3><p><img src=\"https://bitiful.hudi.space/posts/flume.jpg\"></p>\n<h3 id=\"2、Agent内部原理\"><a href=\"#2、Agent内部原理\" class=\"headerlink\" title=\"2、Agent内部原理\"></a>2、Agent内部原理</h3><p><img src=\"https://bitiful.hudi.space/posts/Agent.jpg\"></p>\n<ul>\n<li>source采集到日志服务器或者是端口等的数据时，报数据包装成event</li>\n<li>在批量的放入临时缓存putlist，并通过channel processor处理事件</li>\n<li>channel processor将事件传递给拦截器链，对事件进行过滤</li>\n<li>再把事件还回channel processor并将每个事件给channel selector</li>\n<li>返回写入事件的channel 列表</li>\n<li>根据channel选择器的结果，将事件写入对应得channel中</li>\n<li>doTake将事件批量的取到sink processor中再通过事务写入到相应的目标中</li>\n</ul>\n<ol>\n<li><p>ChannelSelector</p>\n<p>ChannelSelector的作用就是选出Event将要被发往哪个Channel。其共有两种类型，分别是Replicating（复制）和Multiplexing（多路复用）。</p>\n<p>ReplicatingSelector会将同一个Event发往所有的Channel，Multiplexing会根据相应的原则，将不同的Event发往不同的Channel。</p>\n</li>\n<li><p>SinkProcessor</p>\n<p>SinkProcessor共有三种类型，分别是DefaultSinkProcessor、LoadBalancingSinkProcessor和FailoverSinkProcessor</p>\n<p>DefaultSinkProcessor对应的是单个的Sink，LoadBalancingSinkProcessor和FailoverSinkProcessor对应的是Sink Group，LoadBalancingSinkProcessor可以实现负载均衡的功能，FailoverSinkProcessor可以错误恢复的功能。</p>\n</li>\n</ol>\n<h3 id=\"3、Flume的拓扑结构\"><a href=\"#3、Flume的拓扑结构\" class=\"headerlink\" title=\"3、Flume的拓扑结构\"></a>3、Flume的拓扑结构</h3><ol>\n<li><p>简单串联：这种模式是将多个flume顺序连接起来了，从最初的source开始到最终sink传送的目的存储系统。此模式不建议桥接过多的flume数量， flume数量过多不仅会影响传输速率，而且一旦传输过程中某个节点flume宕机，会影响整个传输系统。</p>\n<p>即，一个agent的sink连接另个agent的source</p>\n</li>\n<li><p>复制和多虑复用：Flume支持将事件流向一个或者多个目的地。这种模式可以将相同数据复制到多个channel中，或者将不同数据分发到不同的channel中，sink可以选择传送到不同的目的地。</p>\n</li>\n<li><p>负载均衡和故障转移：Flume支持使用将多个sink逻辑上分到一个sink组，sink组配合不同的SinkProcessor可以实现负载均衡和错误恢复的功能。</p>\n</li>\n<li><p>聚合：</p>\n<p>这种模式是我们最常见的，也非常实用，日常web应用通常分布在上百个服务器，大者甚至上千个、上万个服务器。产生的日志，处理起来也非常麻烦。用flume的这种组合方式能很好的解决这一问题，每台服务器部署一个flume采集日志，传送到一个集中收集日志的flume，再由此flume上传到hdfs、hive、hbase等，进行日志分析。</p>\n</li>\n</ol>\n<h3 id=\"4、Flume开发案例\"><a href=\"#4、Flume开发案例\" class=\"headerlink\" title=\"4、Flume开发案例\"></a>4、Flume开发案例</h3><blockquote>\n<p>案例需求：使用Flume-1监控文件变动，Flume-1将变动内容传递给Flume-2，Flume-2负责存储到HDFS。同时Flume-1将变动内容传递给Flume-3，Flume-3负责输出到Local FileSystem。</p>\n</blockquote>\n<ul>\n<li><p>配置文件编写：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Flume-1</span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1 k2</span><br><span class=\"line\">a1.channels = c1 c2</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = TAILDIR</span><br><span class=\"line\">a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json</span><br><span class=\"line\">a1.sources.r1.filegroups = f1</span><br><span class=\"line\">a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/log.log</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sources.r1.selector.type = replicating</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = avro</span><br><span class=\"line\">a1.sinks.k1.hostname = 192.168.157.10</span><br><span class=\"line\">a1.sinks.k1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k2.type = avro</span><br><span class=\"line\">a1.sinks.k2.hostname = 192.168.157.10</span><br><span class=\"line\">a1.sinks.k2.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">a1.channels.c2.type = memory</span><br><span class=\"line\">a1.channels.c2.capacity = 10000</span><br><span class=\"line\">a1.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sources.r1.channels = c2</span><br><span class=\"line\">a1.sinks.k2.channel = c2</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume-01.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\">#############################################################################################</span><br><span class=\"line\">Flume-2</span><br><span class=\"line\">#name</span><br><span class=\"line\">a2.sources = r2</span><br><span class=\"line\">a2.sinks = k2</span><br><span class=\"line\">a2.channels = c2</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a2.sources.r2.type = avro</span><br><span class=\"line\">a2.sources.r2.bind = localhost</span><br><span class=\"line\">a2.sources.r2.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a2.sinks.k2.type = hdfs</span><br><span class=\"line\">a2.sinks.k2.hdfs.path =  hdfs://master:8020/flume/threeflume/%Y-%m-%d</span><br><span class=\"line\">a2.sinks.k2.hdfs.filePrefix = log-</span><br><span class=\"line\">a2.sinks.k2.hdfs.round = true</span><br><span class=\"line\">a2.sinks.k2.hdfs.roundValue = 10</span><br><span class=\"line\">a2.sinks.k2.hdfs.roundUnit = second</span><br><span class=\"line\">a2.sinks.k2.hdfs.useLocalTimeStamp = true</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a2.channels.c2.type = memory</span><br><span class=\"line\">a2.channels.c2.capacity = 10000</span><br><span class=\"line\">a2.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a2.sources.r2.channels = c2</span><br><span class=\"line\">a2.sinks.k2.channel = c2</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume-02.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\">################################################################################################</span><br><span class=\"line\">Flume-3</span><br><span class=\"line\">#name</span><br><span class=\"line\">a3.sources = r3</span><br><span class=\"line\">a3.sinks = k3</span><br><span class=\"line\">a3.channels = c3</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a3.sources.r3.type = avro</span><br><span class=\"line\">a3.sources.r3.bind = localhost</span><br><span class=\"line\">a3.sources.r3.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a3.sinks.k3.type = file_roll   ##采集到的数据放到本地Stores events on the local filesystem. </span><br><span class=\"line\">a3.sinks.k3.sink.directory = /opt/module/flume-1.9.0/jobs/fileroll</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a3.channels.c3.type = memory</span><br><span class=\"line\">a3.channels.c3.capacity = 10000</span><br><span class=\"line\">a3.channels.c3.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a3.sources.r3.channels = c3</span><br><span class=\"line\">a3.sinks.k3.channel = c3</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume-03.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>输出的本地目录必须是已经存在的目录，如果该目录不存在，并不会创建新的目录。</p>\n</li>\n</ul>\n<p><strong>#负载均衡和故障转移</strong></p>\n<ul>\n<li><h5 id=\"故障转移：案例分析\"><a href=\"#故障转移：案例分析\" class=\"headerlink\" title=\"故障转移：案例分析\"></a>故障转移：案例分析</h5></li>\n</ul>\n<p>使用Flume1监控一个端口，其sink组中的sink分别对接Flume2和Flume3，采用FailoverSinkProcessor，实现故障转移的功能。</p>\n<p><strong>使用jps -ml查看Flume进程。</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flume01-failover.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinkgroups = g1</span><br><span class=\"line\">a1.sinks = k1 k2</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = netcat</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 44444</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinkgroups.g1.processor.type = failover</span><br><span class=\"line\">a1.sinkgroups.g1.processor.priority.k1 = 5</span><br><span class=\"line\">a1.sinkgroups.g1.processor.priority.k2 = 10</span><br><span class=\"line\">a1.sinkgroups.g1.processor.maxpenalty = 10000</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = avro</span><br><span class=\"line\">a1.sinks.k1.hostname = localhost</span><br><span class=\"line\">a1.sinks.k1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k2.type = avro</span><br><span class=\"line\">a1.sinks.k2.hostname = localhost</span><br><span class=\"line\">a1.sinks.k2.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sinkgroups.g1.sinks = k1 k2</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\">a1.sinks.k2.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-failover.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\">################################################################################################</span><br><span class=\"line\">flume02-failover.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a2.sources = r2</span><br><span class=\"line\">a2.sinks = k2</span><br><span class=\"line\">a2.channels = c2</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a2.sources.r2.type = avro</span><br><span class=\"line\">a2.sources.r2.bind = localhost</span><br><span class=\"line\">a2.sources.r2.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a2.sinks.k2.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a2.channels.c2.type = memory</span><br><span class=\"line\">a2.channels.c2.capacity = 10000</span><br><span class=\"line\">a2.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a2.sources.r2.channels = c2</span><br><span class=\"line\">a2.sinks.k2.channel = c2</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume02-failover.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">################################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">flume03-failover.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a3.sources = r3</span><br><span class=\"line\">a3.sinks = k3</span><br><span class=\"line\">a3.channels = c3</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a3.sources.r3.type = avro</span><br><span class=\"line\">a3.sources.r3.bind = localhost</span><br><span class=\"line\">a3.sources.r3.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a3.sinks.k3.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a3.channels.c3.type = memory</span><br><span class=\"line\">a3.channels.c3.capacity = 10000</span><br><span class=\"line\">a3.channels.c3.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a3.sources.r3.channels = c3</span><br><span class=\"line\">a3.sinks.k3.channel = c3</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume03-failover.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>负载均衡</li>\n</ul>\n<figure class=\"highlight txt\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flume01-balance.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1 k2</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = netcat</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 44444</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinkgroups.g1.processor.type = load_balance</span><br><span class=\"line\">a1.sinkgroups.g1.processor.backoff = true</span><br><span class=\"line\">a1.sinkgroups.g1.processor.selector = random</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = avro</span><br><span class=\"line\">a1.sinks.k1.hostname = localhost</span><br><span class=\"line\">a1.sinks.k1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k2.type = avro</span><br><span class=\"line\">a1.sinks.k2.hostname = localhost</span><br><span class=\"line\">a1.sinks.k2.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\">a1.sinks.k2.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-balance.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">################################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">flume02-balance.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a2.sources = r2</span><br><span class=\"line\">a2.sinks = k2</span><br><span class=\"line\">a2.channels = c2</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a2.sources.r2.type = avro</span><br><span class=\"line\">a2.sources.r2.bind = localhost</span><br><span class=\"line\">a2.sources.r2.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a2.sinks.k2.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a2.channels.c2.type = memory</span><br><span class=\"line\">a2.channels.c2.capacity = 10000</span><br><span class=\"line\">a2.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a2.sources.r2.channels = c2</span><br><span class=\"line\">a2.sinks.k2.channel = c2</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume02-balance.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">################################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flume03-balance.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a3.sources = r3</span><br><span class=\"line\">a3.sinks = k3</span><br><span class=\"line\">a3.channels = c3</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a3.sources.r3.type = avro</span><br><span class=\"line\">a3.sources.r3.bind = localhost</span><br><span class=\"line\">a3.sources.r3.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a3.sinks.k3.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a3.channels.c3.type = memory</span><br><span class=\"line\">a3.channels.c3.capacity = 10000</span><br><span class=\"line\">a3.channels.c3.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a3.sources.r3.channels = c3</span><br><span class=\"line\">a3.sinks.k3.channel = c3</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume03-balance.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>聚合</li>\n</ul>\n<blockquote>\n<p>案例需求：hadoop102上的Flume-1监控文件&#x2F;opt&#x2F;module&#x2F;group.log，hadoop103上的Flume-2监控某一个端口的数据流，Flume-1与Flume-2将数据发送给hadoop104上的Flume-3，Flume-3将最终数据打印到控制台。</p>\n</blockquote>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flume01-aggre.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = TAILDIR</span><br><span class=\"line\">a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json</span><br><span class=\"line\">a1.sources.r1.filegroups = f1</span><br><span class=\"line\">a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/log.log</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sources.r1.selector.type = replicating</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = avro</span><br><span class=\"line\">a1.sinks.k1.hostname = slave-02</span><br><span class=\"line\">a1.sinks.k1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-aggre.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">###############################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">flume02-aggre.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = netcat</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 44444</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = avro</span><br><span class=\"line\">a1.sinks.k1.hostname = slave-02</span><br><span class=\"line\">a1.sinks.k1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume02-aggre.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">################################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flume03-aggre.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a2.sources = r2</span><br><span class=\"line\">a2.sinks = k2</span><br><span class=\"line\">a2.channels = c2</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a2.sources.r2.type = avro</span><br><span class=\"line\">a2.sources.r2.bind = slave-02  ##此处不能写localhost</span><br><span class=\"line\">a2.sources.r2.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a2.sinks.k2.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a2.channels.c2.type = memory</span><br><span class=\"line\">a2.channels.c2.capacity = 10000</span><br><span class=\"line\">a2.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a2.sources.r2.channels = c2</span><br><span class=\"line\">a2.sinks.k2.channel = c2</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume03-aggre.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>自定义interceptor</li>\n</ul>\n<blockquote>\n<p>需求：使用Flume采集服务器本地日志，需要按照日志类型的不同，将不同种类的日志发往不同的分析系统。</p>\n</blockquote>\n<ol>\n<li><p>添加maven依赖</p>\n<figure class=\"highlight xml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">dependencies</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">groupId</span>&gt;</span>org.apache.flume<span class=\"tag\">&lt;/<span class=\"name\">groupId</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">artifactId</span>&gt;</span>flume-ng-core<span class=\"tag\">&lt;/<span class=\"name\">artifactId</span>&gt;</span></span><br><span class=\"line\">           <span class=\"tag\">&lt;<span class=\"name\">version</span>&gt;</span>1.9.0<span class=\"tag\">&lt;/<span class=\"name\">version</span>&gt;</span></span><br><span class=\"line\">       <span class=\"tag\">&lt;/<span class=\"name\">dependency</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编写interceptor</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyInterceptor</span>  <span class=\"keyword\">implements</span> <span class=\"title class_\">Interceptor</span> &#123;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">initialize</span><span class=\"params\">()</span> &#123; &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> Event <span class=\"title function_\">intercept</span><span class=\"params\">(Event event)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">byte</span>[] body = event.getBody();</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">s</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">String</span>(body, StandardCharsets.UTF_8);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (s.contains(<span class=\"string\">&quot;#&quot;</span>) || s.contains(<span class=\"string\">&quot;*&quot;</span>)) &#123;</span><br><span class=\"line\">            event.getHeaders().put(<span class=\"string\">&quot;type&quot;</span>,<span class=\"string\">&quot;char&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (s.contains(<span class=\"string\">&quot;1&quot;</span>))&#123;</span><br><span class=\"line\">            event.getHeaders().put(<span class=\"string\">&quot;type&quot;</span>,<span class=\"string\">&quot;num&quot;</span>);</span><br><span class=\"line\">        &#125;<span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            event.getHeaders().put(<span class=\"string\">&quot;type&quot;</span>,<span class=\"string\">&quot;word&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> event;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> List&lt;Event&gt; <span class=\"title function_\">intercept</span><span class=\"params\">(List&lt;Event&gt; list)</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Event event : list) &#123;</span><br><span class=\"line\">            intercept(event);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> list;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">close</span><span class=\"params\">()</span> &#123; &#125;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">class</span> <span class=\"title class_\">build</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Interceptor</span>.Builder&#123;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> Interceptor <span class=\"title function_\">build</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyInterceptor</span>();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"meta\">@Override</span></span><br><span class=\"line\">        <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">configure</span><span class=\"params\">(Context context)</span> &#123; &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>编写flume配置文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flume01-interceptor.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1 k2 k3</span><br><span class=\"line\">a1.channels = c1 c2 c3</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = netcat</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 44444</span><br><span class=\"line\">a1.sources.r1.interceptors = i1</span><br><span class=\"line\">a1.sources.r1.interceptors.i1.type = com.suhe.interceptor.MyInterceptor$Builder</span><br><span class=\"line\">a1.sources.r1.selector.type = multiplexing</span><br><span class=\"line\">a1.sources.r1.selector.header = type</span><br><span class=\"line\">a1.sources.r1.selector.mapping.char = c1</span><br><span class=\"line\">a1.sources.r1.selector.mapping.num = c2</span><br><span class=\"line\">a1.sources.r1.selector.mapping.word = c3</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = avro</span><br><span class=\"line\">a1.sinks.k1.hostname = localhost</span><br><span class=\"line\">a1.sinks.k1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k2.type = avro</span><br><span class=\"line\">a1.sinks.k2.hostname = localhost</span><br><span class=\"line\">a1.sinks.k2.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">a1.sinks.k3.type = avro</span><br><span class=\"line\">a1.sinks.k3.hostname = localhost</span><br><span class=\"line\">a1.sinks.k3.port = 8888</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">a1.channels.c2.type = memory</span><br><span class=\"line\">a1.channels.c2.capacity = 10000</span><br><span class=\"line\">a1.channels.c2.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">a1.channels.c3.type = memory</span><br><span class=\"line\">a1.channels.c3.capacity = 10000</span><br><span class=\"line\">a1.channels.c3.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1 c2 c3</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\">a1.sinks.k2.channel = c2</span><br><span class=\"line\">a1.sinks.k3.channel = c3</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-interceptor.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\">#############################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">flume02-interceptor.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = avro</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 6666</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume02-interceptor.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">#############################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">flume03-interceptor.conf</span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = avro</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 7777</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume03-interceptor.conf -Dflume.root.logger=INFO,console</span><br><span class=\"line\"></span><br><span class=\"line\">#############################################################################################</span><br><span class=\"line\"></span><br><span class=\"line\">flume04-interceptor.conf</span><br><span class=\"line\"></span><br><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.sinks = k1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\"></span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = avro</span><br><span class=\"line\">a1.sources.r1.bind = localhost</span><br><span class=\"line\">a1.sources.r1.port = 8888</span><br><span class=\"line\"></span><br><span class=\"line\">##sinks</span><br><span class=\"line\">a1.sinks.k1.type = logger</span><br><span class=\"line\"></span><br><span class=\"line\">##channels</span><br><span class=\"line\">a1.channels.c1.type = memory</span><br><span class=\"line\">a1.channels.c1.capacity = 10000</span><br><span class=\"line\">a1.channels.c1.transactionCapacity = 100</span><br><span class=\"line\"></span><br><span class=\"line\">##bind</span><br><span class=\"line\">a1.sources.r1.channels = c1</span><br><span class=\"line\">a1.sinks.k1.channel = c1</span><br><span class=\"line\"></span><br><span class=\"line\">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume04-interceptor.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#name</span><br><span class=\"line\">a1.sources = r1</span><br><span class=\"line\">a1.channels = c1</span><br><span class=\"line\">#sources</span><br><span class=\"line\">a1.sources.r1.type = TAILDIR</span><br><span class=\"line\">a1.sources.r1.positionFile = /home/suxichuan/flume/taildir_position.json</span><br><span class=\"line\">a1.sources.r1.filegroups = f1</span><br><span class=\"line\">a1.sources.r1.filegroups.f1 = /home/suxichuan/behavior/log</span><br><span class=\"line\">#channels</span><br><span class=\"line\">a1.channels.channel1.type = org.apache.flume.channel.kafka.KafkaChannel</span><br><span class=\"line\">a1.channels.channel1.kafka.bootstrap.servers = hadoop102:9092,hadoop103:9092,hadoop104:9092</span><br><span class=\"line\">a1.channels.channel1.kafka.topic = ods_behavor_log</span><br><span class=\"line\">a1.channels.channel1.kafka.consumer.group.id = ods_behavor_group_1\t\t</span><br></pre></td></tr></table></figure></li>\n</ol>\n<p>以上就是，Flume基础学习内容，后续会根据学习的规划调整笔记更新的内容。</p>\n"},{"title":"Oracle学习基础笔记","thumbnail":"https://bitiful.hudi.space/posts/oraclebase/Oracle_banner.jpeg","cover":"https://bitiful.hudi.space/posts/oraclebase/Oracle_banner.jpeg","description":"关系型数据库学习，其中包括数据库查询语言，控制语言，操作语言等，对表空间的理解，索引，视图等操作，有存储函数，存储过程","abbrlink":"7b34242e","expires":"2023-08-31T15:59:59.000Z","_content":"\n\n## PL/SQL developer安装\n\n1、安装PL/SQL developer程序，安装目录不要出现中文。\n\n2、配置客户端路径：点击PL/SQL developer界面的Configure->Preferences->oracle配置的connect属性配置。，和\n\n指定Oracle Home 路径：D:\\BaiduNetdiskDownload\\client\\instantclient_12_1\n\n指定OCI library路径：D:\\BaiduNetdiskDownload\\client\\instantclient_12_1\\oci.dll\n\n![image-20230714112548602](https://bitiful.hudi.space/posts/oraclebase/plsql_develop_1.png)\n\n3、在 ORACLE 的以下安装目录中找到 tnsnames.ora 文件，拷贝到本地电脑的 D盘根目录。打开 tnsnames.ora 文件编辑配置oracle所在的服务器IP地址，设置环境变量 TNS_ADMIN 为 D 盘根目录( tnsnames.ora 所在目录 )\n\n![image-20230714113841909](https://bitiful.hudi.space/posts/oraclebase/plsql_develop_2.png)\n\n4、中文编码设置查看服务器端编码 \n\n~~~sql\nSQL:select userenv('language') from dual;\n~~~\n\n我实际查到的结果为:AMERICAN_AMERICA.ZHS16GBK\n5、配置环境变量，计算机->属性->高级系统设置->环境变量->新建，设置变量名:NLS_LANG,变量值:第 1 步查到的值， \nAMERICAN_AMERICA.ZHS16GBK\n\n## 1、数据类型\n\n#### number 数值类型\n\n~~~sql\nnumber（5） 最大值99999 \nnumber(5,2) 最大值999.99\n~~~\n\n#### 字符串类型\n\n~~~text\nchar 固定长度的字符类型，最多存储2000个字节\nvarchar2 可变长度的字符类型，最多存储4000个字节\nlong  大文本类型。最大可以存储2个G\n~~~\n\n#### 日期类型\n\n~~~sql\nsysdate 日期时间型，精确到秒\ntimestamp 精确到秒的小数点后9位\n~~~\n\n#### 二进制类型\n\n~~~sql\nclob 存储字符,最大可以存4个G\nblob 存储图像、声音、视频等二进制数据,最多可以存4个G\n~~~\n\n## 2、DDL操作\n\n#### 用SQLPLUS连接Oracle的连接字符串\n\n~~~sql\nsqlplus system/local123@192.168.157.129:1521/orcl\nsqlplus    账户名/密码@所在主机:端口号\nsqlplus system/local123 as sysdba\n~~~\n\n#### 创建表空间\n\n~~~sql\ncreate tablespace xxxx\ndatafile 'c:\\xxxx.dbf'\nsize 100m autoextend on next 10m\nxxx表示表空间名\ndatafile 表示数据储存的物理文件名\nsize 用于设置表的初始大小\nautoextend on 用于设置自动增长，如果存储量超过初始大小，则开始自动扩容\nnext 用于设置扩容的空间大小\ncreate tablespace test;\ndatafile 'c:\\test.dbf'\nsize 100m autoextend on next 10m\n~~~\n\n#### 创建用户\n\n~~~sql\ncreate user 用户名\nidentified by 密码\ndefault tablespace 表空间名\n~~~\n\n#### 用户赋予权限\n\n~~~\ngrant dba to 用户名  给xxx用户授予DBA权限\n~~~\n\n#### 表的创建\n\n~~~sql\ncreate table 表名（\n字段名  字段类型[长度] [约束],\n....\n）\n例如\ncreate table users(\nuserid number primary key,\nname varchar2(50)\n);\ncreate table t_owners(\nid number primary key,\nname varchar2(30),\naddressid number,\nhousenumber varchar2(30),\nwatermeter varchar2(30),\nadddate date,\nownertypeid number\n)\ncreate table t_ownertype(id number  primary key,name varchar2(30));\ncreate table t_pricetable(id number primary key,price number(10,2),ownertypeid number,minnum number(10,2),maxnum number(10,2));\ncreate table t_area(id number primary key,name varchar2(30));\ncreate table t_operator(id number prmary key,name varchar2(30));\ncreate table t_address(id number,name varchar2(30),areaid number,operatorid number);\ncreate table t_account(id number,ownerid number,ownertypeid number,areaid number,year char(4),month char(2),num0 number,num1 number,usenum number,meteruserid number,meterdate date,money number(10,2),isfee char(1),feedate date,feeuserid number);\n~~~\n\n#### 表的修改\n\n~~~sql\ndesc tablename 查看表的详情\n#1、增加字段语法\nalter table tablename add ( 字段名  字段类型 [default 默认值 ],字段名  字段类型 [default 默认值 ] );\nalter table t_owners add ( level number default 1,email varchar2(255) );\n#2、修改字段语法\nalter table tablename modify(字段名 字段类型[default 默认值],字段名 字段类型[default 默认值]);\nalter table t_owners modify(email varchar2(50));\n#3、修改字段名\nalter table tablename rename column 原字段名 to 新的字段名\nalter table t_owners rename column email to mail;\n#4、删除字段名\nalter table tablename drop column 字段名；\nalter table t_owners drop tel\n#5、删除多个字段名\nalter table tablename drop (字段1,字段2);\n\n~~~\n\n#### 清空表\n\n~~~sql\ntruncate table tablename; 删除表再重构表\ndelete from tablename where 1=1; 表结构还在 主键自增的序列依然存在\n~~~\n\n#### 删除表\n\n~~~sql\ndrop table tablename;\n~~~\n\n## 3、DML操作\n\n#### insert操作\n\n~~~sql\n\ncreate table t_owners(\nid number primary key,\nname varchar2(30),\naddressid number,\nhousenumber varchar2(30),\nwatermeter varchar2(30),\nadddate date,\nownertypeid number\n)\ninsert into T_OWNERS VALUES (1,'张三丰',1001,'2-2','5678',sysdate,1001);\ninsert into T_OWNERS VALUES (2,'苏赫',1002,'15-2','8975',sysdate,1001);\ninsert into T_OWNERS VALUES (3,'涂山红红',1002,'6-2','3456',sysdate,1001);\ncommit;\n#create table t_ownertype(id number  primary key,name varchar2(30));\ninsert into t_ownertype(id,name)values(1001,'master');\ninsert into t_ownertype(id,name)values(1002,'levelmaster');\ninsert into t_ownertype(id,name)values(1003,'supermaster');\n\ninsert into t_ownertype(id,name)values(1001,'居民');\ninsert into t_ownertype(id,name)values(1002,'物业');\ninsert into t_ownertype(id,name)values(1003,'来兵');\ncommit;\n#create table t_pricetable(id number primary key,price number(10,2),ownertypeid number,minnum #number(10,2),maxnum number(10,2));\ninsert into t_pricetable values(3,2.45,1001,0,5);\ninsert into t_pricetable values(4,3.45,1001,5,10);\ninsert into t_pricetable values(5,4.45,1001,10,null);\ncommit\n#create table t_area(id number primary key,name varchar2(30));\ninsert into t_area values(1001,'East China');\ninsert into t_area values(1002,'North China');\ninsert into t_area values(1003,'NorthEast');\ninsert into t_area values(1004,'SouthWest');\ninsert into t_area values(1001,'双流区');\ninsert into t_area values(1002,'温江区');\ninsert into t_area values(1003,'青羊区');\ninsert into t_area values(1004,'青白江区');\ninsert into t_area values(1005,'武侯区');\ncommit;\n#create table t_operator(id number primary key,name varchar2(30));\ninsert into t_operator values(1001,'mary');\ninsert into t_operator values(1002,'sueh');\ninsert into t_operator values(1003,'lili');\ninsert into t_operator values(1004,'harry');\ninsert into t_operator values(1001,'小明');\ninsert into t_operator values(1002,'小何');\ninsert into t_operator values(1003,'小苏');\ninsert into t_operator values(1004,'小红');\ncommit;\n#create table t_address(id number primary key,name varchar2(30),areaid number,operatorid number);\ninsert into t_address values(1001,'quhouqu',1004,1001);\ninsert into t_address values(1002,'qingyangqu',1004,1002);\ninsert into t_address values(1003,'shuangliuqu',1004,1003);\ninsert into t_address values(1004,'wenjiangqu',1004,1004);\ninsert into t_address values(1001,'草金路',1004,1001);\ninsert into t_address values(1002,'尚楠湾',1004,1002);\ninsert into t_address values(1003,'江安河大桥',1004,1003);\ninsert into t_address values(1004,'崇教路',1004,1004);\ncommit;\n\n#create table t_account(id number,ownerid number,ownertypeid number,areaid number,year char(4),month #char(2),num0 number,num1 number,usenum number,meteruserid number,meterdate date,money number(10,2),isfee #char(1),feedate date,feeuserid number);\ninsert into t_account values(1,1001,1001,1001,2023,06,43543,46456,3000,1001,sysdate,3232,0,sysdate,1001);\ninsert into t_account values(2,1002,1001,1002,2023,06,46456,50020,3564,1002,sysdate,3755,0,sysdate,1001);\ninsert into t_account values(3,1003,1002,1003,2023,06,82122,92131,10009,1003,sysdate,12000,0,sysdate,1001);\ninsert into t_account values(4,1001,1001,1001,2023,07,46456,50000,3544,1004,sysdate,3232,0,sysdate,1001);\ninsert into t_account values(5,1004,1001,1004,2023,06,60000,80000,20000,1001,sysdate,3232,0,sysdate,1001);\ninsert into t_account values(6,1003,1001,1003,2023,07,92131,100000,7869,1001,sysdate,3232,0,sysdate,1001);\ninsert into t_account values(7,1001,1001,1001,2023,08,50000,70000,20000,1003,sysdate,3232,0,sysdate,1001);\ninsert into t_account values(8,1002,1001,1002,2023,07,50020,70020,20000,1003,sysdate,20000,0,sysdate,1001);\ncommit;\n#关联查询\nselect\n  tad.id as addressid,\n  tad.name as addressname,\n  ta.name as areaname,\n  top.name as operatorname\nfrom t_address tad,t_area ta,t_operator top\nwhere tad.areaid=ta.id and tad.operatorid=top.id;\n\n\nselect \n\tt1.addressid,\n   \tt1.addressname,\n    t2.name as operatoname,\n   \tt1.areaname\nfrom (\n   select \n   \t\ttad.id as addressid,\n   \t\ttad.name as addressname,\n    \ttad.operatorid as operatorid,\n   \t\tta.name as areaname\n   from t_address tad left  join t_area ta on tad.areaid=ta.id\n) t1 left join t_operator t2 on t1.operatorid= t2.id;\n~~~\n\n#### update数据修改\n\n~~~sql\nupdate 表名 set 字段=新值，字段=新值 where 条件;\nupdate t_ownertype set id=1004,name='level1master' where id=1001;\ncommit;\n~~~\n\n#### delete删除数据\n\n~~~sql\n#delete from tablename where 条件\ndelete from t_ownertype where id =1004;\ncommit;\ndelete from t_ownertype where id >1001;\ndelete from t_ownertype where id in (1001,1002,1003);\ncommit;\n~~~\n\n> 注意增删改查操作完成后记得commit提交事务\n\n#### 导入导出\n\n数据的导出\n\n~~~sql\nexpdp(impdp) 用户名/密码@连接地址:端口/服务名 [schemas|owner]=用户名 [dumpfile|file]=file1.dmp logfile=file1.log directory=testdata1 remap_schema=test:test;\nexp:导出命令，导出时必写。\nimp:导入命令，导入时必写,每次操作，二者只能选择一个执行。\nusername:导出数据的用户名，必写;\npassword:导出数据的密码，必写;\n@:地址符号，必写;\nSERVICENAME:Oracle的服务名，必写;\n1521:端口号，1521是默认的可以不写,非默认要写;\nschemas：导出操作的用户名;\ndumpfile：导出的文件;\nlogfile:导出的日志文件,可以不写；\ndirectory: 如果手工创建了转储文件和日志文件，通过本命令指定导出位置\nremap_schema=源数据库用户名:目标数据库用户名,二者不同时必写，相同可以省略;\n\n#例如\nexp system/local123 full=y 整个数据库全部导出\nexp system/local123 full=y [dumpfile|file]=a.dmp\nexp lili/lili123 file=lili.dmp owner=lili;\n按用户导入\nimp lili/lili123 file=lili.dmp fromuserlili;\n~~~\n\n~~~sql\n通过@F:\\website\\oraok\\ot\\11g\\ot_drop.sql 导入F盘下的\\website\\oraok\\ot\\11g\\目录下的ot_drop.sql文件\n~~~\n\n## 4、DML练习\n\n~~~sql\nselect tac.areaid,sum(tac.money),ta.name from t_account tac,t_area ta where tac.areaid=ta.id group by tac.areaid,ta.name;\n~~~\n\n#### 简单查询\n\n~~~sql\nselect * from t_owners;\n#精确查询\nselect * from t_owners where watermeter=5678;\n#模糊查询\nselect * from t_owners where name like '%张%';\n#and的运算符 or运算符\nselect * from t_owners where name like '张%' or name like '%山%';\nselect * from t_owners where name like '_山__' or watermeter>5678;\n#and运算符 or运算符混合使用\nselect * from t_owners where (name like '%苏%' or name like '%山%' ) and addressid =1002;\n#范围查询\nselect * from t_account where num0>=50000 and num0<=70000;\nselect * from t_account where num0 between 50000 and 70000;\n#空值查询\nselect *  from t_account isfee is null;\n#查询非空值\nselect * from t_account isfee is not null;\n#去重查询\nselect distinct addressid from t_owners ; \n#排序 默认升序asc desc降序\nselect * from t_account order by usenum desc;\n#基于伪列的查询rowid rowid是保存数据在磁盘上的物理地址\nselect rowid,t.* from t_owners t;\n#可以通过rowid来指定查询的某条数据\nselect rowid,t.* from t_owners t where rowid='AAASNcAABAAAVJpAAD';\n#基于伪列的查询rownum rownum是基于查询出的结果集的序号\nselect rownum,t.* from t_owners t;\n#聚合统计sum\nselect sum(usenum) from t_account where year='2023';\n#平均值\nselect avg(usenum) from t_account where year='2023';\n#最小值\nselect min(usenum) from t_account where year='2023';\n#最大值\nselect max(usenum) from t_account where year='2023';\n#统计个数\nselect count(id) from t_account where year='2023';\n#分组查询\nselect areaid,sum(usenum) from t_account group by areaid;\n#分组后在指定条件的查询\nselect areaid,sum(usenum) from t_account group by areaid having sum(usenum)>20000;\n~~~\n\n#### 连接查询\n\n~~~sql\n#多表内连接\nselect twn.*,ta.name addressname from t_owners twn,t_address ta where twn.addressid=ta.id;\n\n#查询显示业主编号，业主名称、地址和业主类型\nselect twn.id,twn.name,ta.name addressname,tt.name ownertype from t_owners twn,t_ownertype tt,t_address ta where twn.ownertypeid=tt.id and twn.addressid=ta.id; \n\n#查询显示业主编号、业主名称、地址、所属区域、业主分类\nselect twn.id,twn.name,ta.name addressname,t1.name areaname,tt.name ownername from t_owners twn, t_area t1,t_address ta,t_ownertype tt where twn.addressid=ta.id and twn.ownertypeid=tt.id and ta.areaid=t1.id;\n\n#查询显示业主编号、业主名称、地址、所属区域、收费员、业主分类\nselect twn.id,twn.name,ta.name addressname,t1.name areaname,top.name operatorname,tt.name ownertypename from t_owners twn,t_address ta,t_area t1,t_operator top,t_ownertype tt\nwhere twn.addressid=ta.id and twn.ownertypeid=tt.id and ta.areaid=t1.id and ta.operatorid=top.id;\n\n#查询业主的账务记录，显示业主编号、名称、年、月、金额。如果此业主没有账务记录也要列出姓名。\nselect twn.id,twn.name,tacc.year,tacc.month,tacc.money from t_owners twn left join t_account tacc on twn.id=tacc.ownerid; \n\n#左外连接\nselect twn.id,twn.name,tacc.year,tacc.month,tacc.money from t_owners twn,t_account tacc where twn.id=tacc.ownerid(+);\n\n#右外连接\nselect twn.id,twn.name,tacc.year,tacc.month,tacc.money from t_owners twn,t_account tacc where twn.id(+)=tacc.ownerid;\n\n~~~\n\n#### 子查询\n\n1. where子句中的子查询\n\n   ~~~sql\n   #单行子查询\n   #查询 2023 年 6 月用水量大于平均值的台账记录\n   select avg(usenum) from t_account where month=6;\n   select usenum from t_account where usenum>(select avg(usenum) from t_account where month=6) and month=6;\n   #多行子查询\n   select * from t_address where id in (1001,1002);\n   #查询地址含有“草”的业主的信息\n   select id from t_address where name like '%草%';\n   select * from t_owners where addressid in (select id from t_address where name like '%江安河%');\n   \n   #查询地址不含有“草”的业主的信息\n   select id from t_address where name not like '%草%';\n   select * from t_owners where addressid in (select id from t_address where name not like '%草%');\n   \n   select * from t_onwers where addressid not in(select id from t_address where name like '%草%');\n   #\n   ~~~\n\n2. from子句中的子查询\n\n   from子查询为多行子查询\n\n   ~~~sql\n   #查询显示业主编号，业主名称，业主类型名称，条件为业主类型为”居民”，使用子查询实现。\n   select id,name,ownertypename from (select twn.*,tt.name ownertypename  from t_owners twn,t_ownertype tt  where twn.ownertypeid=tt.id and tt.name='居民')\n   \n   ~~~\n\n3. select 子句中的子查询\n\n   ~~~sql\n   #列出业主信息，包括 ID，名称，所属地址。\n   select id,name,(select name from t_address where id=addressid) addressname from t_owners;\n   #列出业主信息，包括 ID，名称，所属地址，所属区域\n   select id,name,\n   (select name from t_address where id=addressid) addressname,\n   (select (select name from t_area where id=areaid) from t_address where id=addressid) areaname\n   from t_owners;\n   ~~~\n\n4. 分页查询\n\n   使用rownum伪列来完成分页查询的功能。\n\n   ~~~sql\n   #分页查询台账表 T_ACCOUNT，每页 10 条记录\n   select rownum,t.* from t_account t where rownum<=5; \n   #查询5到10的数据\n   #子查询里rownum小于较大值,外面rownum大于较小值\n   select rownum,t.* from (select rownum r,t.* from t_account t where rownum<=20) t where r<=5;\n   ~~~\n\n## 5、函数\n\n#### 字符函数\n\n~~~sql\nselect ascii('a') from dual;ASCII() 返回字符的十进制数;\nselect chr(97) from dual; chr() 返回十进制数的对应的字符;\nselect concat('aa','bb') from dual; 拼接两个字符串 || \nselect 'aa' || 'bb' from dual;\nselect initcap('string') from dual;\nselect instr('adbc','a') from dual; 找出某个字符的位置\nselect instrb('abc','a') from dual;\nselect length('asdfgh') from dual; 给出字符串的长度\nselect lower('HELLO') from dual;将字符转化成小写\nselect upper('apple') from dual;将字符串转化成小写\n#去除指定的字符串\nselect ltrim('##apple','#') from dual;\nselect rtrim('apple@@','@') from dual;\nselect trim('p' from 'apple') from dual;\nselect lpad('apple',10,'*') from dual;在字符串c1的左边用字符串c2填充，直到长度为10时为止\nselect rpad('apple',10,'#') from dual;\nselect replace('apple','p','bb') from dual;替换指定的字符串。\nselect substr('apple','1',2) from dual;从第一个位置开始截取，截取两位\n\n~~~\n\n#### 日期函数\n\n~~~sql\nsysdate 返回系统当前时间\nselect sysdate from dual;\nadd_months 给系统返回的时间加一天\nselect add_months(sysdate,1) from dual;\nlast_day 返回月份的最后一天\nselect last_day(add_months(sysdate,2)) from dual;\nselect months_between(sysdate,to_date('2023-04-30','yyyy-MM-dd')) from dual;\n\nselect localtimestamp from dual;返回会话中的日期和时间 \nselect current_timestamp from dual;\nselect greatest(sysdate,add_months(sysdate,2)) from dual; 返回两个时间中最晚的。时间戳最大的。\n~~~\n\n#### 数值函数\n\n~~~sql\nselect  abs(value) from dual;绝对值\nselect ceil(value) from dual;大于或等于 value 的最小整数\nselect cos(value) from dual; 余弦\nselect cosh(value) from dual;反余弦\nselect exp(value) from dual;e的value次幂\nselect floor(value) from dual;小于或等于 value 的最大整数\nselect ln(value) from dual;value 的自然对数\nselect log(value) from dual;value 的以 10 为底的对数\nselect mod(value) from dual;求模\nselect power(v,p) from dual;v的p次幂\nselect round(v,p) from dual;按 precision 精度4舍5入\nselect sin(value) from dual;value的正弦\nselect sinh(value) from dual;value的反正弦\nselect sign(value) from dual;value 为正返回 1;为负返回-1;为 0 返回 0.\nselect tan(value) from dual;value的正切\nselect tanh(value) from dual;value的反正切\nselect vsize(value) from dual;返回value在ORACLE的存储空间大小\nselect sqrt(value) from dual;value的平方根\n~~~\n\n## 6、表空间巡检\n\n#### 查询视图dba_data_files\n\n~~~sql\nfile_name:表空间数据文件的位置\nfile_id:数据文件的ID\ntablespace_name：表空间名称\nbytes:表空间大小 字节显示\nblocks:表示数据块数量\nstatus:表示当前文件是否可用\nrelative_fno:相对文件号\nautoextensible:是否自动扩展\nmaxbytes:如果扩展，最大扩展的大小\nmaxblocks：如果扩展，最大的数据块数\nincrement_by：最大增加的数据块数\nuser_bytes:文件中实际有用的字节数\nuser_blocks:文件中实际有用的数据块数\n\nselect file_name,tablespace_name,bytes/1024/1024 from dba_data_files;\nselect file_name,tablespace_name,sum(bytes)/1024/1024 from dba_data_files group by file_name,tablespace_name;\n\n#查看表空间总容量和剩余容量和使用量。\nselect df.tablespace_name,SUM(df.bytes)/1024/1024 total,SUM(fs.bytes)/1024/1024 free,SUM(df.bytes-fs.bytes)/1024/1024 used from dba_data_files df,dba_free_space fs\nwhere df.tablespace_name = fs.tablespace_name\ngroup by df.tablespace_name having df.tablespace_name='WATERBOSS';\n\n~~~\n\n#### 查询视图dba_free_space\n\n~~~sql\ntablespace_name:表空间名称\nfile_id：表空间ID\nblock_id:开始块的ID\nbytes:表示空闲的字节数\nblocks:表示空闲的数据块数\nrelative_fno:相对文件的id\n#查看表空间总容量和剩余容量和使用量。\nselect ds.tablespace_name,sum(ds.bytes)/1024/1024 total,sum(fs.bytes)/1024/1024 free,sum(ds.bytes)/1024/1024-sum(fs.bytes)/1024/1024 used from dba_data_files ds,dba_free_space fs where ds.tablespace_name=fs.tablespace_name group by ds.tablespace_name;\n~~~\n\n## 7、视图\n\n概念：视图是一种数据库对象，是从一个或者多个数据表或视图中导出的虚表，视图所对应的数据并不真正地存储在视图中，而是存储在所引用的数据表中，视图的结构和数据是对数据表进行查询的结果。\n\n优点：\n\n- 简化数据操作：视图可以简化用户处理数据的方式。\n- 着重于特定数据：不必要的数据或敏感数据可以不出现在视图中。\n- 视图提供了一个简单而有效的安全机制，可以定制不同用户对数据的访问权限。\n- 提供向后兼容性：视图使用户能够在表的架构更改时为表创建向后兼容接口。\n\n#### 创建和修改视图\n\n~~~sql\ncreate [or replace] [force] view view_name\nas subquery\n[with check option]\n[with read only]\n\n[or replace]:若已经存在该视图，oracle自动重构该视图\n[force]:不管基表是否存在，oracle都会自动创建该视图\nsuquery:子查询\n[with check option]:插入和修改的数据行必须满足定义视图的约束\n[with read only]:该视图上不能进行任何 DML 操作。\n\n#create view dba_data_files_v1 as select file_name,tablespace_name, from dba_data_files;\ncreate [or replace] view t_account_v1 as select id,ownerid,ownertypeid,areaid from t_account;\nselect * from t_account_v1;\n#简单视图，可以进行增删改查记录\n#update view_name set column=新值 where 条件\nupdate t_account_v1 set areaid=1002 where id=5;\ncommit;\nselect * from t_account_v1;\n~~~\n\n视图其实是一个虚拟的表，它的数据其实来自于表。如果更改了视图的数据，表的数据也自然会变化，更改了\n表的数据，视图也自然会变化。\n\n#### 删除视图\n\n~~~sql\ndrop view view_name;\n~~~\n\n#### 带检查约束的视图\n\n~~~sql\ncreate or replace view t_account_v2 \nas\nselect id,ownerid,ownertypeid,areaid from t_account where areaid=1001\nwith check option;\n\n#update t_account_v2 set areaid=1002 where id=1;\n#会报错view WITH CHECK OPTION where-clause violation\n~~~\n\n#### 只读视图的创建与使用\n\n指定 WITH READ ONLY 选项，这样创建的视图就是一个只读视图\n\n~~~sql\ncreate or replace view t_account_v2\nas\nselect id,ownerid,ownertypeid,areaid from t_account where areaid=1001\nwith read only;\nupdate t_account_v2 set areaid=1002 where id=1;\n#修改只读视图出现：cannot perform a DML operation on a read-only view\n~~~\n\n#### 创建不存在基表的视图\n\n有的时候，创建视图时的表可能并不存在，但是以后可能会存在，此时需要创建这样的视图，需要添加 FORCE 选项\n\n~~~sql\ncreate or replace force view t_temp_vi \nas\nselect * from t_temp;\n~~~\n\n#### 查询所有的视图\n\n~~~sql\nselect * from user_views;\n~~~\n\n#### 复杂视图的创建与使用\n\n复杂视图，就是视图的 SQL 语句中，有聚合函数或多表关联查询。\n\n~~~sql\n#1、多表关联查询的视图\ncreate or replace force view twn_tt_v1\nas\nselect twn.*,tt.name as ownertypename from t_owners twn,t_ownertype tt where twn.ownertypeid=tt.id(+)\nwith check option;\nselect * from twn_tt_v1;\nupdate twn_tt_v1 set name='suhe' where id=1002;\n#可以修改主表的数据不可以修改关联表的数据\n#2、分组聚合统计查询的视图\nselect * from t_account;\ncreate or replace force view month_per_num_2023\nas\nselect year,month,sum(usenum) sumuse from t_account group by year,month group by year,month;\nselect * from month_per_num_2023;\n~~~\n\n#### 物化视图\n\n​\t视图是一个虚拟表（也可以认为是一条语句），基于它创建时指定的查询语句返回的结果集。每次访问它都会导致这个查询语句被执行一次。为了避免每次访问都执行这个查询，可以将这个查询结果集存储到一个物化视图（也叫实体化视图）。物化视图与普通的视图相比的区别是物化视图是建立的副本，它类似于一张表，需要占用存储空间。而对一个物化视图查询的执行效率与查询一个表是一样的。\n\n- 创建物化视图语法\n\n~~~sql\ncreate meterialized view view_name\n[build immediate | build deferred]\nrefresh [fast | complete | force]\n[\n on [commit | demand]    | start with (start_time) next (next_time)\n]\nas\nsubquery\n\nbuild immediate:是在创建物化视图的时候就生成数据。\nbuild dererred:则在创建时不生成数据，以后根据需要再生成数据。默认为 build immediate。\nrefresh:指当基表发生了 DML 操作后，物化视图何时采用哪种方式和基表进行同步。[fast | complete|force] fast采用增量刷新，只刷新自上次刷新以后进行的修改。complete刷新对整个物化视图进行完全的刷新。force方式，则 Oracle 在刷新时会去判断是否可以进行快速刷新，如果可以则采用 fast 方式，否则采用 complete的方式，force 是默认的方式。\n刷新模式：on commit和on demand两种， on demand指需要手动刷新物化视图（默认）。on commit指在基表发生commit操作时自动刷新.\n\n~~~\n\n- 创建手动刷新的物化视图\n\n~~~sql\ncreate meterialized view mv_v1\n[build immediate\nrefresh force on demand]\nas \nselect twn.*,ta.name as addressname from t_owners twn,t_address ta where twn.addressid=ta.id(+);\n\ninsert into t_owners VALUES (1004,'lili',1003,'6-1','7895',sysdate,1002);\ncommit;\nselect * from mv_v2;\n#物化视图中没有新插入的数据。\n#PL/SQL执行\nbegin\nDBMS_MVIEW.refresh('mv_v2','C');\nend;\n#或者在命令行执行\nEXEC DBMS_MVIEW.refresh('mv_v2','C');\n#DBMS_MVIEW.refresh 实际上是系统内置的存储过程\n~~~\n\n- 创建自动刷新的物化视图\n\n~~~sql\ncreate materialized view mv_v3\nbuild immediate\nrefresh force\non commit\nas\nselect twn.*,ta.name as addressname from t_owners twn,t_address ta where twn.addressid=ta.id(+);\n\ninsert into t_owners VALUES (1005,'longlong',1002,'6-2','1234',sysdate,1001);\ncommit;\nselect * from mv_v3;\n~~~\n\n- 创建时不生成数据的物化视图\n\n~~~sql\ncreate materailized view mv_v4\nbuild deferred\nrefresh force on commit\nas\nselect twn.*,ta.name as addressname from t_owners twn,t_address ta where twn.addressid=ta.id(+);\nselect * from mv_v4;\n\nbegin\nDBMS_MVIEW.refresh('mv_v4','C');\nend;\ninsert into t_owners VALUES (1006,'chuan',1001,'7-2','7534',sysdate,1003);\ncommit;\nselect * from mv_v4;\n~~~\n\n- 删除物化视图\n\n~~~\ndrop materialized view view_name;\n~~~\n\n- 创建增量刷新的物化视图\n\n如果创建增量刷新的物化视图，必须首先创建物化视图日志\n\n~~~sql\n#创建物化视图日志\ncreate materialized view log on t_owners with rowid;\ncreate materialized view log on t_address with rowid;\n\ncreate materialized view mv_v5\nbuild immediate\nrefresh fast\non commit\nas\nselect twn.*,twn.rowid as twnrowid,ta.rowid as tarowid,ta.name as addressname from t_owners twn,t_address ta where twn.addressid=ta.id(+);\n\ninsert into t_owners VALUES (1007,'su',1002,'8-2','3455',sysdate,1002);\ncommit;\n#创建增量刷新的物化视图，必须：\n#1、创建物化视图中涉及表的物化视图日志。\n#2、在查询语句中，必须包含所有表的rowid(以rowid方式建立物化视图日志)\n~~~\n\n## 8、序列\n\n序列是 ORACLE 提供的用于产生一系列唯一数字的数据库对象。\n\n#### 创建序列语法\n\n~~~sql\ncreate sequence sequence_name;\n~~~\n\n通过序列的伪列来访问序列的值,NEXTVAL 返回序列的下一个值,CURRVAL 返回序列的当前值\n\n>注意：我们在刚建立序列后，无法提取当前值，只有先提取下一个值时才能再次提取当前值。\n\n~~~sql\ncreate sequence sequence_one;\nselect sequence_one.nextval from dual;\nselect sequence_one.currval from dual;\n~~~\n\n#### 创建复杂序列\n\n- 语法：\n\n~~~sql\ncreate sequence sequence_one\n[increment by n] #递增的序列值是n 如果n是正数就递增,如果是负数就递减 默认是1\n[start with n] #开始的值,递增默认是 minvalue 递减是 maxvalue\n[{maxvalue n|nomaxvalue}] #最大值\n[{minvalue n|nominvalue}]#最小值\n[{cycle | nocycle}] #循环\n[{cache n | nocache}] #分配并存入到内存中\n~~~\n\n- 创建有最大值的非循环序列\n\n~~~sql\ncreate sequence seq_1\nincrement by 20\nmaxvalue 100\nminvalue 20\nnocycle;\nselect seq_1.nextval from dual;\n~~~\n\n- 有最大值的循环序列\n\n~~~sql\ncreate sequence seq_2\nincrement by 20\nmaxvalue 100\nminvalue 20\ncycle\ncache 4;\n~~~\n\n>注意：CACHE <= CEIL((MAXVALUE - MINVALUE) / ABS(INCREMENT))\n>例如：cache <=ceil(100-20)/abs(20)\n\n#### 修改和删除序列\n\n修改序列：使用 ALTER SEQUENCE 语句修改序列，不能更改序列的 STARTWITH 参数\n\n~~~sql\nALTER SEQUENCE 序列名称 MAXVALUE 5000 CYCLE;\nalter sequence seq_1 maxvalue 300 cycle cache 14;\n~~~\n\n删除序列\n\n~~~sql\nDROP SEQUENCE 序列名称;\ndrop sequence seq_1;\n~~~\n\n## 9、同义词\n\n​\t同义词实质上是指定方案对象的一个别名。通过屏蔽对象的名称和所有者以及对分布式数据库的远程对象提供位置透明性，同义词可以提供一定程度的安全性。同时，同义词的易用性较好，降低了数据库用户的 SQL 语句复杂度。\n\n​\t同义词允许基对象重命名或者移动，这时，只需对同义词进行重定义，基于同义词的应用程序可以继续运行而无需修改。\n\n​\t同义词本身不涉及安全，当你赋予一个同义词对象权限时，你实质上是在给同义词的基对象赋予权限，同义词只是基对象的一个别名。\n\n#### 创建与使用同义词\n\n~~~sql\ncreate [public] SYNONYM synonym for object\nsynonym:创建的同义词的名称\nobject:表示表，视图，序列等我们要创建同义词的对象的名称.创建共有的同义词，以另外的用户登陆，也可以使用公有同义词\ncreate public SYNONYM twn for t_owners;\n创建私有的同义词\ncreate SYNONYM twn1 for t_owners;\n~~~\n\n## 10、索引\n\n索引是用于加速数据存取的数据对象。合理的使用索引可以大大降低 i/o 次数,从而提高数据访问性能。\n\n索引是需要占据存储空间的，也可以理解为是一种特殊的数据。形式类似于下图的一棵“树”，而树的节点存储的就是每条记录的物理地址，也就是我们提到的伪列（ROWID）\n\n#### 普通索引\n\n~~~sql\ncreate index index_name on table_name(column_name);#根据某张表的某列来创建索引。\ncreate index t_owners_name on t_owners(name);\n\n#索引性能测试\ncreate table T_INDEXTEST (\nID NUMBER,\nNAME VARCHAR2(30)\n);\nBEGIN\nFOR i in 1..1000000\nloop\nINSERT INTO T_INDEXTEST VALUES(i,'AA'||i);\nend loop;\ncommit;\nEND;\n\ncreate index t_indextest_name on t_indextest(name);\nselect * from t_indextest where id=765432;\nselect * from t_indextest where name='AA765432';\n~~~\n\n#### 唯一索引\n\n如果我们需要在某个表某个列创建索引，而这列的值是不会重复的。这是我们可以创建唯一索引。\n\n语法\n\n~~~sql\ncreate unique index index_name on table_name(column_name);\n~~~\n\n#### 复合索引\n\n~~~sql\ncreate index index_name on table_name(column_name,column_name);\n~~~\n\n#### 反向键索引\n\n​\t应用场景：当某个字段的值为连续增长的值，如果构建标准索引，会形成歪脖子树。这样会增加查询的层数，性能会下降。建立反向键索引，可以使索引的值变得不规则，从而使索引树能够均匀分布。\n\n~~~sql\ncreate index 索引名称 on 表名(列名) reverse;\ncreate index t_indextest_name_reverse on t_indextest(id) reverse;\n~~~\n\n#### 位图索引\n\n- 使用场景：位图索引适合创建在低基数列上\n- 位图索引不直接存储 ROWID，而是存储字节位到 ROWID 的映射\n- 优点：减少响应时间，节省空间占用\n\n~~~sql\ncreate bitmap index index_name table_name(column_name);\n~~~\n\n## 11、PL/SQL\n\nPL/SQL（Procedure Language/SQL）是 Oracle 对 sql 语言的过程化扩展，指在 SQL 命令语言中增加了过程处理语句（如分支、循环等），使 SQL 语言具有过程处理能力。把 SQL 语言的数据操纵能力与过程语言的数据处理能力结合起来，使得 PLSQL 面向过程但比过程语言简单、高效、灵活和实用。\n\n#### 基本语法结构\n\n~~~sql\n[declare  --声明变量]\nbegin\n逻辑代码\n[exception --异常处理]\nend;\n~~~\n\n#### 变量\n\n~~~sql\n声明变量的语法\n变量名 类型(长度)\n变量赋值语法\n变量名:=变量值\ndeclare\nv_price number(10,2);\nv_usenum number;\nv_usenum2 number(10,2);\nv_money(10,2);\nbegin\nv_price:=2.45;\nv_usenum:=8012;\nv_usenum2:=round(v_usenum/1000,2);\nv_money:=round(v_price*v_usenum2,2);\ndbms_output.put_line('单价：'||v_price||'吨数:'||v_usenum2||'金额：'||v_money);\nend;\n~~~\n\nselect into方式赋值\n\n~~~sql\nselect 列名 into 变量名 from 表名 where 条件;\n~~~\n\n> 注意：结果必须是一条记录 ，有多条记录和没有记录都会报错\n\n~~~sql\nselect usenum,num0,num1 from t_account where year=2023 and id=1;\n\ndeclare\nv_price number(10,2);\nv_usenum number;\nv_usenum2 number(10,2);\nv_num0 number(10,2);\nv_num1 number(10,2);\nv_money number(10,2);\nbegin\nv_price:=2.45;\nselect usenum,num0,num1 into v_usenum,v_num0,v_num1 from t_account where year=2023 and id=1;\nv_usenum2:=round(v_usenum/1000,2);\nv_money:=round(v_price*v_usenum2,2);\ndbms_output.put_line('单价：'||v_price||'吨数：'||v_usenum2||'金额：'||v_money||'上月字数：'||v_num0||'本月字数'||v_num1);\nend;\n~~~\n\n#### 属性类型\n\n%TYPE 引用型  作用：引用某表某列的字段类型\n\n~~~sql\ndeclare\nv_price number(10,2);\nv_usenum t_account.usenum%TYPE;\nv_num0 t_account.num0%TYPE;\nv_num1 t_account.num1%TYPE;\nv_usenum2 number(10,2);\nv_money number(10,2);\nbegin\nv_price:=2.55;\nselect usenum,num0,num1 into v_usenum,v_num0,v_num1 from t_account where year=2023 and id=3;\nv_usenum2:=round(v_usenum/1000,2);\nv_money:=v_price*v_usenum2;\ndbms_output.put_line('单价：'||v_price||'吨数：'||v_usenum2||'金额：'||v_money||'上月字数：'||v_num0||'本月字数'||v_num1);\nend;\n~~~\n\n%ROWTYPE 记录型 ，上例中的例子可以用下面的代码代替作用: 标识某个表的行记录类型\n\n~~~sql\ndeclare\nv_price number(10,2);\nv_account t_account%ROWTYPE;\nv_usenum2 number(10,2);\nv_money number(10,2);\nbegin\nv_price:=3.14;\nselect * into v_account from t_account where year=2023 and id=3;\nv_usenum2:=round(v_account.usenum/1000,2);\nv_money:=v_price*v_usenum2;\nDBMS_OUTPUT.put_line('单价：'||v_price||'吨数：'||v_usenum2||'金额：'||v_money||'上月字数：'||v_account.num0||'本月字数'||v_account.num1);\nend;\n~~~\n\n#### 异常\n\n在运行程序时出现的错误叫做异常，发生异常后，语句将停止执行，控制权转移到 PL/SQL 块的异常处理部分\n\n异常有两种类型：\n\n- 预定义异常 - 当 PL/SQL 程序违反 Oracle 规则或超越系统限制时隐式引发。\n- 用户定义异常 - 用户可以在 PL/SQL 块的声明部分定义异常，自定义的异常通过 RAISE 语句显式引发。\n\noracle预定义的异常21个\n\n| 系统异常                | 产生原因                                                     |\n| ----------------------- | ------------------------------------------------------------ |\n| ACCESS_INTO_NULL        | 未定义对象                                                   |\n| CASE_NOT_FOUND          | CASE 中若未包含相应的 WHEN ，并且没有设置 ELSE 时            |\n| COLLECTION_IS_NULL      | 集合元素未初始化                                             |\n| CURSER_ALREADY_OPEN     | 游标已经打开                                                 |\n| DUP_VAL_ON_INDEX        | 唯一索引对应的列上有重复值                                   |\n| INVALID_CURSOR          | 在不合法的游标上进行操作                                     |\n| INVALID_NUMBER          | 内置的SQL语句不能将字符转化为数字                            |\n| ***NO_DATA_FOUND***     | ***使用select into 没有行返回行***                           |\n| ***TOO_MANY_ROWS***     | ***使用select into 有多行数据返回***                         |\n| ZERO_DIVIDE             | 除数为0                                                      |\n| SUBSCRIPT_BEYOND_COUNT  | 元素下标超过嵌套表或 VARRAY 的最大值                         |\n| SUBSCRIPT_OUTSIDE_LIMIT | 使用嵌套表或 VARRAY 时，将下标指定为负数                     |\n| VALUE_ERROR             | 赋值时，变量长度不足以容纳实际数据                           |\n| LOGIN_DENIED            | PL/SQL 应用程序连接到 oracle 数据库时，提供了不正确的用户名或密码 |\n| NOT_LOGGED_ON           | PL/SQL 应用程序在没有连接 oralce 数据库的情况下访问数据      |\n| PROGRAM_ERROR           | PL/SQL 内部问题，可能需要重装数据字典＆ PL/SQL 系统包        |\n| ROWTYPE_MISMATCH        | 宿主游标变量与 PL/SQL 游标变量的返回类型不兼容               |\n| SELF_IS_NULL            | 使用对象类型时，在 NULL对象上调用对象方法                    |\n| STORAGE_ERROR           | 运行 PL/SQL 时，超出内存空间                                 |\n| SYS_INVALID_ID          | 无效的 ROWID 字符串                                          |\n| TIMEOUT_ON_RESOURCE     | Oracle 在等待资源时超时                                      |\n|                         |                                                              |\n\n语法结构：\n\n~~~sql\nexception\nwhen 异常类型 then\n异常处理逻辑\n~~~\n\n~~~sql\ndeclare\nv_price number(10,2);\nv_usenum t_account.usenum%TYPE;\nv_usenum2 number(10,2);\nv_money number(10,2);\nbegin\nv_price:=3.55;\nselect usenum into v_usenum from t_account where year=2023 and id=1;\nv_usenum2:=round(v_usenum/1000,2);\nv_money:=v_price*v_usenum2;\ndbms_output.put_line('单价：'||v_price||'吨数:'||v_usenum2||'金额：'||v_money);\nexception\nwhen NO_DATA_FOUND then\ndbms_output.put_line('未找到数据，请核实');\nwhen TOO_MANY_ROWS then\ndbms_output.put_line('查询条件有误，返回多条信息，请核实');\nend;\n~~~\n\n#### 条件判断\n\n~~~sql\n#基本语法1\nif 条件 then\n 业务逻辑\nend if;\n\n#基本语法2\nif 条件 then\n业务逻辑\nelse\n业务逻辑\nend if;\n\n#基本语法3\nif 条件 then\n业务逻辑\nelseif 条件 then\n业务逻辑\nelse\n业务逻辑\nend if;\n~~~\n\n需求：设置三个等级的水费 5 吨以下 2.45 元/吨 5 吨到 10 吨部分 3.45 元/吨 ，超过 10 吨部分 4.45 ，根据使用水费的量来计算阶梯水费。\n\n~~~sql\ndeclare\nv_price1 number(10,2);\nv_price2 number(10,2);\nv_price3 number(10,2);\nv_account t_account%ROWTYPE;\nv_usenum2 number(10,2);\nv_money number(10,2);\nbegin\nselect * into v_account from t_account where year=2023 and id=3;\nv_usenum2:=round(v_account.usenum/1000,2);\nv_price1:=2.45;\nv_price2:=3.45;\nv_price3:=4.45;\nif v_usenum2<5 then\nv_money:=v_price1*v_usenum2;\nelsif 5<v_usenum2 and v_usenum2<10 then\nv_money:=v_price1*5+v_price2*(v_usenum2-5);\nelse\nv_money:=v_price1*5+v_price2*5+v_price3*(v_usenum2-5);\nend if;\ndbms_output.put_line('吨数：'||v_usenum2||'金额：'||v_money||'上月字数：'||v_account.num0||'本月字数'||v_account.num1);\nexception\nwhen NO_DATA_FOUND then\ndbms_output.put_line('未找到数据，请核实');\nwhen TOO_MANY_ROWS then\ndbms_output.put_line('有多行数据被查询');\nend;\n~~~\n\n#### 循环\n\n1. 无条件循环\n\n~~~sql\nloop\n循环语句\nend loop;\n\n#例子\ndeclare\nv_num number;\nbegin\nv_num:=0;\nloop\ndbms_output.put_line('v_num='||v_num);\nv_num:=v_num+1;\nif v_num=100 then\nexit;\nend if;\nend loop;\nend;\n\n#循环部分可以改写成\nloop\ndbms_output.put_line('v_num='||v_num);\nv_num:=v_num+1;\nexit when v_num>100;\nend loop;\n~~~\n\n \t2.条件循环\n\n~~~sql\nwhile 条件\nloop\n循环体\nend loop;\n\n#范例：输出从1开始的100个数\ndeclare\nv_num number;\nbegin\nv_num:=0;\nwhile v_num<101\nloop\ndbms_output.put_line('v_num='||v_num);\nv_num:=v_num+1;\nend loop;\nend;\n~~~\n\n​\t3.for循环\n\n~~~sql\n#基本语法\nfor 变量 in 起始值..终值\nloop \n循环体\nend loop;\n\n\nbegin\nfor v_num in 0..100\nloop\ndbms_output.put_line('v_num='||v_num);\nend loop;\nend;\n~~~\n\n#### 游标\n\n游标是系统为用户开设的一个数据缓冲区,存放 SQL 语句的执行结果。我们可以把游标理解为 PL/SQL 中的结果集。\n\n在声明区声明游标，语法如下：\n\n~~~sql\ncursor 游标名称 is SQL 语句;\n~~~\n\n使用游标语法\n\n~~~sql\nopen 游标名称\nloop\n\tfetch 游标名称 into 变量;\n\texit when 游标名称%notfound;\nend loop;\nclose 游标名称;\n\ndeclare\ncurr_jylsh varchar2(50);\ncursor lyjsh_cursor is select jylsh from jylsh_table;\nbegin\nopen lyjsh_cursor;\n\tloop\n\tfetch lyjsh_cursor into curr_jylsh;\n\texit when lyjsh_cursor%notfound;\n\tinsert into t_sbf_sb_cxjm_sbbc_fail values(curr_jylsh,sysdate,'ljh','00');\n\tcommit;\n\tupdate sbf_sb_cxjmhdxx set sjclzt='00',xgrq=sysdate,xgr_dm='ljh' where cxjmhd_id in (select lymx_id from sbf_sb_wyxx where jylsh=curr_jylsh);\n\tcommit;\n\tdelete from sbf_sb_cxjmwyxx e where e.jylsh=curr_jylsh;\n\tcommit;\n\tdelete from sbf_sb_cxjm_sbwyxx e where e.jylsh=curr_jylsh;\n\tcommit;\n\tdelete from sbf_sb_wyxx e where e.jylsh=curr_jylsh;\n\tcommit;\n\tupdate sbf_sb \n\tend loop;\nclose lyjsh_cursor;\nend;\n\t\n~~~\n\n需求：打印业主类型为 1 的价格表\n\n~~~sql\ndeclare \nv_pricetable t_pricetable%ROWTYPE;\ncursor cur_pricetable is select * from t_pricetable where ownertypeid=1001;\nbegin\nopen cur_pricetable;\n\tloop\n\tfetch  cur_pricetable into v_pricetable;\n\texit when cur_pricetable%notfound;\n\tdbms_output.put_line( '价格:'||v_pricetable.price ||'吨位：'||v_pricetable.minnum||'-'||v_pricetable.maxnum );\n\tend loop;\nclose cur_pricetable;\nend;\n~~~\n\n带参数的游标\n\n~~~sql\ndeclare\nv_pricetable t_pricetable%ROWTYPE;\ncursor cur_pricetable(v_ownertypeid number) is select * from t_pricetable where ownertypeid=v_ownertypeid;\nbegin\nopen cur_pricetable(1001);\nloop\n\tfetch cur_pricetable into v_pricetable;\n\texit when cur_pricetable%notfound;\n\tdbms_output.put_line('价格:'||v_pricetable.price ||'吨位：'||v_pricetable.minnum||'-'||v_pricetable.maxnum );\nend loop;\t\nclose cur_pricetable;\nend;\n~~~\n\nfor 循环提取游标值\n\n~~~sql\ndeclare\ncursor cur_pricetable(v_ownertypeid number) is select * from t_pricetable where ownertypeid=v_ownertypeid;\nbegin\nfor cur_pricetable in cur_pricetable(1001)\nloop\ndbms_output.put_line('价格:'||cur_pricetable.price ||'吨位：'||cur_pricetable.minnum||'-'||cur_pricetable.maxnum );\nend loop;\nend;\n~~~\n\n## 12、存储函数\n\n存储函数又称为自定义函数。可以接收一个或多个参数，返回一个结果。在函数中我们可以使用 PL/SQL 进行逻辑的处理。\n\n#### 存储函数语法结构\n\n~~~sql\ncreate or replace function 函数名称(参数名称 参数类型, 参数名称 参数类型, ...)\nreturn 结果变量数据类型\nis 变量声明部分;\nbegin\n逻辑部分;\nRETURN 结果变量;\n[exception 异常处理部分]\nend;\n~~~\n\n#### 示例\n\n~~~sql\ncreate  function pingping(v_name varchar2,v_age number)\nreturn varchar2\nis\nv_result varchar2(30);\nbegin\nv_result:='姓名'||v_name||'-年龄'||v_age;\ndbms_output.put_line('=='||v_result);\nreturn v_result;\nend;\n#调用\nselect pingping('suhe',18) from dual;\n~~~\n\n需求：查询业主 ID，业主名称，业主地址，业主地址使用刚才我们创建的函数来实现。\n\n~~~sql\ncreate function ss(v_id number) return varchar2\nis\naddress_name varchar2(100);\nbegin\nselect name into address_name from t_address where id=v_id;\nreturn address_name;\nend;\n\nselect id,name,ss(addressid) from t_owners;\n~~~\n\n## 13、存储过程\n\n#### 概念\n\n存储过程是被命名的 PL/SQL 块，存储于数据库中，是数据库对象的一种。应用程序可以调用存储过程，执行相应的逻辑。\n\n存储过程与存储函数都可以封装一定的业务逻辑并返回结果，存在区别如下：\n1、存储函数中有返回值，且必须返回；而存储过程没有返回值，可以通过传出参数返回多个值。\n2、存储函数可以在 select 语句中直接使用，而存储过程不能。过程多数是被应用程序所调用。\n3、存储函数一般都是封装一个查询结果，而存储过程一般都封装一段事务代码。\n\n#### 语法\n\n~~~sql\ncreate or replace procedure 存储过程名字(参数1 类型,参数2 类型)\nis|as\n变量申明;\nbegin\n逻辑部分;\n[exception 异常处理部分]\nend;\n~~~\n\n>参数只指定类型，不指定长度\n\n过程参数的三种模式：IN 传入参数（默认）,OUT 传出参数 ，主要用于返回程序运行结果,IN OUT 传入传出参数\n\n#### 案例\n\n1、创建不带传出参数的存储过程：添加业主信息\n\n~~~sql\ncreate sequence owner_sequence start with 1010;\ncreate or replace procedure owners_add(v_name varchar2,v_addressid number,v_housenumber varchar2,v_watermeter varchar2,v_type varchar2)\nis\nbegin\ninsert into t_owners values(owner_sequence.nextval,v_name,v_addressid,v_housenumber,v_watermeter,sysdate,v_type);\ncommit;\nend;\ncall owners_add('赵伟',1001,'999-3','132-7',1002);\n~~~\n\n2、创建带传出参数的存储过程\n\n~~~sql\ncreate or replace procedure owners_add_with_out(v_name varchar2,v_addressid number,v_housenumber varchar2,v_watermeter varchar2,v_type varchar2,v_id out number)\nis\nbegin\nselect owner_sequence.nextval into v_id from dual;\ninsert into t_owners values(v_id,v_name,v_addressid,v_housenumber,v_watermeter,sysdate,v_type);\ncommit;\nend;\n\n\ndeclare \nv_id number;\nbegin\nowners_add_with_out('王旺旺',1,'922-3','133-7',1,v_id);\nDBMS_OUTPUT.put_line('增加成功,ID:'||v_id);\nend;\n~~~\n\n## 14、触发器\n\n#### 概念\n\n数据库触发器是一个与表相关联的、存储的 PL/SQL 程序。每当一个特定的数据操作语句(Insert,update,delete)在指定的表上发出时，Oracle 自动地执行触发器中定义的语句序列。\n\n触发器可用于\n\n- 数据确认\n- 实施复杂的安全性检查\n- 做审计，跟踪表上所做的数据操作等\n- 数据的备份和同步\n\n触发器分类\n\n- 前置触发器（BEFORE）\n- 后置触发器（AFTER）\n\n#### 触发器语法\n\n~~~sql\ncreate or replace trigger 触发器名字\nbefore|after\n[delete][[or] insert][[or]update [of 列名]]\non 表名\n[for each row ] [when [条件]]\ndeclare\n变量申明;\nbegin\nPLSQL块\nend;\n~~~\n\n>作用是标注此触发器是行级触发器还是语句级触发器\n\n在触发器中触发语句与伪记录变量的值\n\n| 触发语句 | :old                     | :new                     |\n| -------- | ------------------------ | ------------------------ |\n| insert   | 所有字段都是空的（null） | 将要插入的数据           |\n| update   | 更新以前该行的值         | 更新后的值               |\n| delete   | 删除以前该行的值         | 所有字段都是空的（null） |\n\n#### 案例\n\n1、前置触发器\n\n需求：当用户输入本月累计表数后，自动计算出本月使用数 。\n\n~~~sql\ncreate or replace trigger tri_account_update\nbefore\nupdate of num1\non t_account\nfor each row\ndeclare\nbegin\n:new.usenum:=:new.num1-:new.num0;\nend;\n\n#create table t_account(id number,ownerid number,ownertypeid number,areaid number,year char(4),month #char(2),num0 number,num1 number,usenum number,meteruserid number,meterdate date,money number(10,2),isfee #char(1),feedate date,feeuserid number);\ninsert into t_account values(1,1001,1001,1001,2023,06,43543,46456,3000,1001,sysdate,3232,0,sysdate,1001);\ncommit;\n\nupdate t_account set num1=100000 where id=1;\n~~~\n\n2、后置触发器\n\n需求：当用户修改了业主信息表的数据时记录修改前与修改后的值\n\n~~~sql\n\ncreate table t_owners_log\n(\nupdatetime date,\nownerid number,\noldname varchar2(30),\nnewname varchar2(30)\n);\n\ncreate or replace trigger tri_insert_owner\nafter\nupdate of name\non t_owners\nfor each row\ndeclare\nbegin\ninsert into t_owners_log values(sysdate,:old.id,:old.name,:new.name);\nend;\n\nupdate t_owners set name='lililili' where id=1004;\nselect * from t_owners_log;\n~~~\n\n","source":"_posts/Oracle笔记.md","raw":"---\ntitle: Oracle学习基础笔记\nthumbnail: 'https://bitiful.hudi.space/posts/oraclebase/Oracle_banner.jpeg'\ncover: 'https://bitiful.hudi.space/posts/oraclebase/Oracle_banner.jpeg'\ndescription: 关系型数据库学习，其中包括数据库查询语言，控制语言，操作语言等，对表空间的理解，索引，视图等操作，有存储函数，存储过程\ncategories:\n  - 数据库\ntags:\n  - Oracle\n  - 关系型数据库\n  - 表\n  - 视图\n  - 表空间\n  - 序列\n  - 函数\n  - 索引\n  - 序列\n  - 触发器\n  - 存储函数\n  - 存储过程\nabbrlink: 7b34242e\nexpires: 2023-08-31 23:59:59\n---\n\n\n## PL/SQL developer安装\n\n1、安装PL/SQL developer程序，安装目录不要出现中文。\n\n2、配置客户端路径：点击PL/SQL developer界面的Configure->Preferences->oracle配置的connect属性配置。，和\n\n指定Oracle Home 路径：D:\\BaiduNetdiskDownload\\client\\instantclient_12_1\n\n指定OCI library路径：D:\\BaiduNetdiskDownload\\client\\instantclient_12_1\\oci.dll\n\n![image-20230714112548602](https://bitiful.hudi.space/posts/oraclebase/plsql_develop_1.png)\n\n3、在 ORACLE 的以下安装目录中找到 tnsnames.ora 文件，拷贝到本地电脑的 D盘根目录。打开 tnsnames.ora 文件编辑配置oracle所在的服务器IP地址，设置环境变量 TNS_ADMIN 为 D 盘根目录( tnsnames.ora 所在目录 )\n\n![image-20230714113841909](https://bitiful.hudi.space/posts/oraclebase/plsql_develop_2.png)\n\n4、中文编码设置查看服务器端编码 \n\n~~~sql\nSQL:select userenv('language') from dual;\n~~~\n\n我实际查到的结果为:AMERICAN_AMERICA.ZHS16GBK\n5、配置环境变量，计算机->属性->高级系统设置->环境变量->新建，设置变量名:NLS_LANG,变量值:第 1 步查到的值， \nAMERICAN_AMERICA.ZHS16GBK\n\n## 1、数据类型\n\n#### number 数值类型\n\n~~~sql\nnumber（5） 最大值99999 \nnumber(5,2) 最大值999.99\n~~~\n\n#### 字符串类型\n\n~~~text\nchar 固定长度的字符类型，最多存储2000个字节\nvarchar2 可变长度的字符类型，最多存储4000个字节\nlong  大文本类型。最大可以存储2个G\n~~~\n\n#### 日期类型\n\n~~~sql\nsysdate 日期时间型，精确到秒\ntimestamp 精确到秒的小数点后9位\n~~~\n\n#### 二进制类型\n\n~~~sql\nclob 存储字符,最大可以存4个G\nblob 存储图像、声音、视频等二进制数据,最多可以存4个G\n~~~\n\n## 2、DDL操作\n\n#### 用SQLPLUS连接Oracle的连接字符串\n\n~~~sql\nsqlplus system/local123@192.168.157.129:1521/orcl\nsqlplus    账户名/密码@所在主机:端口号\nsqlplus system/local123 as sysdba\n~~~\n\n#### 创建表空间\n\n~~~sql\ncreate tablespace xxxx\ndatafile 'c:\\xxxx.dbf'\nsize 100m autoextend on next 10m\nxxx表示表空间名\ndatafile 表示数据储存的物理文件名\nsize 用于设置表的初始大小\nautoextend on 用于设置自动增长，如果存储量超过初始大小，则开始自动扩容\nnext 用于设置扩容的空间大小\ncreate tablespace test;\ndatafile 'c:\\test.dbf'\nsize 100m autoextend on next 10m\n~~~\n\n#### 创建用户\n\n~~~sql\ncreate user 用户名\nidentified by 密码\ndefault tablespace 表空间名\n~~~\n\n#### 用户赋予权限\n\n~~~\ngrant dba to 用户名  给xxx用户授予DBA权限\n~~~\n\n#### 表的创建\n\n~~~sql\ncreate table 表名（\n字段名  字段类型[长度] [约束],\n....\n）\n例如\ncreate table users(\nuserid number primary key,\nname varchar2(50)\n);\ncreate table t_owners(\nid number primary key,\nname varchar2(30),\naddressid number,\nhousenumber varchar2(30),\nwatermeter varchar2(30),\nadddate date,\nownertypeid number\n)\ncreate table t_ownertype(id number  primary key,name varchar2(30));\ncreate table t_pricetable(id number primary key,price number(10,2),ownertypeid number,minnum number(10,2),maxnum number(10,2));\ncreate table t_area(id number primary key,name varchar2(30));\ncreate table t_operator(id number prmary key,name varchar2(30));\ncreate table t_address(id number,name varchar2(30),areaid number,operatorid number);\ncreate table t_account(id number,ownerid number,ownertypeid number,areaid number,year char(4),month char(2),num0 number,num1 number,usenum number,meteruserid number,meterdate date,money number(10,2),isfee char(1),feedate date,feeuserid number);\n~~~\n\n#### 表的修改\n\n~~~sql\ndesc tablename 查看表的详情\n#1、增加字段语法\nalter table tablename add ( 字段名  字段类型 [default 默认值 ],字段名  字段类型 [default 默认值 ] );\nalter table t_owners add ( level number default 1,email varchar2(255) );\n#2、修改字段语法\nalter table tablename modify(字段名 字段类型[default 默认值],字段名 字段类型[default 默认值]);\nalter table t_owners modify(email varchar2(50));\n#3、修改字段名\nalter table tablename rename column 原字段名 to 新的字段名\nalter table t_owners rename column email to mail;\n#4、删除字段名\nalter table tablename drop column 字段名；\nalter table t_owners drop tel\n#5、删除多个字段名\nalter table tablename drop (字段1,字段2);\n\n~~~\n\n#### 清空表\n\n~~~sql\ntruncate table tablename; 删除表再重构表\ndelete from tablename where 1=1; 表结构还在 主键自增的序列依然存在\n~~~\n\n#### 删除表\n\n~~~sql\ndrop table tablename;\n~~~\n\n## 3、DML操作\n\n#### insert操作\n\n~~~sql\n\ncreate table t_owners(\nid number primary key,\nname varchar2(30),\naddressid number,\nhousenumber varchar2(30),\nwatermeter varchar2(30),\nadddate date,\nownertypeid number\n)\ninsert into T_OWNERS VALUES (1,'张三丰',1001,'2-2','5678',sysdate,1001);\ninsert into T_OWNERS VALUES (2,'苏赫',1002,'15-2','8975',sysdate,1001);\ninsert into T_OWNERS VALUES (3,'涂山红红',1002,'6-2','3456',sysdate,1001);\ncommit;\n#create table t_ownertype(id number  primary key,name varchar2(30));\ninsert into t_ownertype(id,name)values(1001,'master');\ninsert into t_ownertype(id,name)values(1002,'levelmaster');\ninsert into t_ownertype(id,name)values(1003,'supermaster');\n\ninsert into t_ownertype(id,name)values(1001,'居民');\ninsert into t_ownertype(id,name)values(1002,'物业');\ninsert into t_ownertype(id,name)values(1003,'来兵');\ncommit;\n#create table t_pricetable(id number primary key,price number(10,2),ownertypeid number,minnum #number(10,2),maxnum number(10,2));\ninsert into t_pricetable values(3,2.45,1001,0,5);\ninsert into t_pricetable values(4,3.45,1001,5,10);\ninsert into t_pricetable values(5,4.45,1001,10,null);\ncommit\n#create table t_area(id number primary key,name varchar2(30));\ninsert into t_area values(1001,'East China');\ninsert into t_area values(1002,'North China');\ninsert into t_area values(1003,'NorthEast');\ninsert into t_area values(1004,'SouthWest');\ninsert into t_area values(1001,'双流区');\ninsert into t_area values(1002,'温江区');\ninsert into t_area values(1003,'青羊区');\ninsert into t_area values(1004,'青白江区');\ninsert into t_area values(1005,'武侯区');\ncommit;\n#create table t_operator(id number primary key,name varchar2(30));\ninsert into t_operator values(1001,'mary');\ninsert into t_operator values(1002,'sueh');\ninsert into t_operator values(1003,'lili');\ninsert into t_operator values(1004,'harry');\ninsert into t_operator values(1001,'小明');\ninsert into t_operator values(1002,'小何');\ninsert into t_operator values(1003,'小苏');\ninsert into t_operator values(1004,'小红');\ncommit;\n#create table t_address(id number primary key,name varchar2(30),areaid number,operatorid number);\ninsert into t_address values(1001,'quhouqu',1004,1001);\ninsert into t_address values(1002,'qingyangqu',1004,1002);\ninsert into t_address values(1003,'shuangliuqu',1004,1003);\ninsert into t_address values(1004,'wenjiangqu',1004,1004);\ninsert into t_address values(1001,'草金路',1004,1001);\ninsert into t_address values(1002,'尚楠湾',1004,1002);\ninsert into t_address values(1003,'江安河大桥',1004,1003);\ninsert into t_address values(1004,'崇教路',1004,1004);\ncommit;\n\n#create table t_account(id number,ownerid number,ownertypeid number,areaid number,year char(4),month #char(2),num0 number,num1 number,usenum number,meteruserid number,meterdate date,money number(10,2),isfee #char(1),feedate date,feeuserid number);\ninsert into t_account values(1,1001,1001,1001,2023,06,43543,46456,3000,1001,sysdate,3232,0,sysdate,1001);\ninsert into t_account values(2,1002,1001,1002,2023,06,46456,50020,3564,1002,sysdate,3755,0,sysdate,1001);\ninsert into t_account values(3,1003,1002,1003,2023,06,82122,92131,10009,1003,sysdate,12000,0,sysdate,1001);\ninsert into t_account values(4,1001,1001,1001,2023,07,46456,50000,3544,1004,sysdate,3232,0,sysdate,1001);\ninsert into t_account values(5,1004,1001,1004,2023,06,60000,80000,20000,1001,sysdate,3232,0,sysdate,1001);\ninsert into t_account values(6,1003,1001,1003,2023,07,92131,100000,7869,1001,sysdate,3232,0,sysdate,1001);\ninsert into t_account values(7,1001,1001,1001,2023,08,50000,70000,20000,1003,sysdate,3232,0,sysdate,1001);\ninsert into t_account values(8,1002,1001,1002,2023,07,50020,70020,20000,1003,sysdate,20000,0,sysdate,1001);\ncommit;\n#关联查询\nselect\n  tad.id as addressid,\n  tad.name as addressname,\n  ta.name as areaname,\n  top.name as operatorname\nfrom t_address tad,t_area ta,t_operator top\nwhere tad.areaid=ta.id and tad.operatorid=top.id;\n\n\nselect \n\tt1.addressid,\n   \tt1.addressname,\n    t2.name as operatoname,\n   \tt1.areaname\nfrom (\n   select \n   \t\ttad.id as addressid,\n   \t\ttad.name as addressname,\n    \ttad.operatorid as operatorid,\n   \t\tta.name as areaname\n   from t_address tad left  join t_area ta on tad.areaid=ta.id\n) t1 left join t_operator t2 on t1.operatorid= t2.id;\n~~~\n\n#### update数据修改\n\n~~~sql\nupdate 表名 set 字段=新值，字段=新值 where 条件;\nupdate t_ownertype set id=1004,name='level1master' where id=1001;\ncommit;\n~~~\n\n#### delete删除数据\n\n~~~sql\n#delete from tablename where 条件\ndelete from t_ownertype where id =1004;\ncommit;\ndelete from t_ownertype where id >1001;\ndelete from t_ownertype where id in (1001,1002,1003);\ncommit;\n~~~\n\n> 注意增删改查操作完成后记得commit提交事务\n\n#### 导入导出\n\n数据的导出\n\n~~~sql\nexpdp(impdp) 用户名/密码@连接地址:端口/服务名 [schemas|owner]=用户名 [dumpfile|file]=file1.dmp logfile=file1.log directory=testdata1 remap_schema=test:test;\nexp:导出命令，导出时必写。\nimp:导入命令，导入时必写,每次操作，二者只能选择一个执行。\nusername:导出数据的用户名，必写;\npassword:导出数据的密码，必写;\n@:地址符号，必写;\nSERVICENAME:Oracle的服务名，必写;\n1521:端口号，1521是默认的可以不写,非默认要写;\nschemas：导出操作的用户名;\ndumpfile：导出的文件;\nlogfile:导出的日志文件,可以不写；\ndirectory: 如果手工创建了转储文件和日志文件，通过本命令指定导出位置\nremap_schema=源数据库用户名:目标数据库用户名,二者不同时必写，相同可以省略;\n\n#例如\nexp system/local123 full=y 整个数据库全部导出\nexp system/local123 full=y [dumpfile|file]=a.dmp\nexp lili/lili123 file=lili.dmp owner=lili;\n按用户导入\nimp lili/lili123 file=lili.dmp fromuserlili;\n~~~\n\n~~~sql\n通过@F:\\website\\oraok\\ot\\11g\\ot_drop.sql 导入F盘下的\\website\\oraok\\ot\\11g\\目录下的ot_drop.sql文件\n~~~\n\n## 4、DML练习\n\n~~~sql\nselect tac.areaid,sum(tac.money),ta.name from t_account tac,t_area ta where tac.areaid=ta.id group by tac.areaid,ta.name;\n~~~\n\n#### 简单查询\n\n~~~sql\nselect * from t_owners;\n#精确查询\nselect * from t_owners where watermeter=5678;\n#模糊查询\nselect * from t_owners where name like '%张%';\n#and的运算符 or运算符\nselect * from t_owners where name like '张%' or name like '%山%';\nselect * from t_owners where name like '_山__' or watermeter>5678;\n#and运算符 or运算符混合使用\nselect * from t_owners where (name like '%苏%' or name like '%山%' ) and addressid =1002;\n#范围查询\nselect * from t_account where num0>=50000 and num0<=70000;\nselect * from t_account where num0 between 50000 and 70000;\n#空值查询\nselect *  from t_account isfee is null;\n#查询非空值\nselect * from t_account isfee is not null;\n#去重查询\nselect distinct addressid from t_owners ; \n#排序 默认升序asc desc降序\nselect * from t_account order by usenum desc;\n#基于伪列的查询rowid rowid是保存数据在磁盘上的物理地址\nselect rowid,t.* from t_owners t;\n#可以通过rowid来指定查询的某条数据\nselect rowid,t.* from t_owners t where rowid='AAASNcAABAAAVJpAAD';\n#基于伪列的查询rownum rownum是基于查询出的结果集的序号\nselect rownum,t.* from t_owners t;\n#聚合统计sum\nselect sum(usenum) from t_account where year='2023';\n#平均值\nselect avg(usenum) from t_account where year='2023';\n#最小值\nselect min(usenum) from t_account where year='2023';\n#最大值\nselect max(usenum) from t_account where year='2023';\n#统计个数\nselect count(id) from t_account where year='2023';\n#分组查询\nselect areaid,sum(usenum) from t_account group by areaid;\n#分组后在指定条件的查询\nselect areaid,sum(usenum) from t_account group by areaid having sum(usenum)>20000;\n~~~\n\n#### 连接查询\n\n~~~sql\n#多表内连接\nselect twn.*,ta.name addressname from t_owners twn,t_address ta where twn.addressid=ta.id;\n\n#查询显示业主编号，业主名称、地址和业主类型\nselect twn.id,twn.name,ta.name addressname,tt.name ownertype from t_owners twn,t_ownertype tt,t_address ta where twn.ownertypeid=tt.id and twn.addressid=ta.id; \n\n#查询显示业主编号、业主名称、地址、所属区域、业主分类\nselect twn.id,twn.name,ta.name addressname,t1.name areaname,tt.name ownername from t_owners twn, t_area t1,t_address ta,t_ownertype tt where twn.addressid=ta.id and twn.ownertypeid=tt.id and ta.areaid=t1.id;\n\n#查询显示业主编号、业主名称、地址、所属区域、收费员、业主分类\nselect twn.id,twn.name,ta.name addressname,t1.name areaname,top.name operatorname,tt.name ownertypename from t_owners twn,t_address ta,t_area t1,t_operator top,t_ownertype tt\nwhere twn.addressid=ta.id and twn.ownertypeid=tt.id and ta.areaid=t1.id and ta.operatorid=top.id;\n\n#查询业主的账务记录，显示业主编号、名称、年、月、金额。如果此业主没有账务记录也要列出姓名。\nselect twn.id,twn.name,tacc.year,tacc.month,tacc.money from t_owners twn left join t_account tacc on twn.id=tacc.ownerid; \n\n#左外连接\nselect twn.id,twn.name,tacc.year,tacc.month,tacc.money from t_owners twn,t_account tacc where twn.id=tacc.ownerid(+);\n\n#右外连接\nselect twn.id,twn.name,tacc.year,tacc.month,tacc.money from t_owners twn,t_account tacc where twn.id(+)=tacc.ownerid;\n\n~~~\n\n#### 子查询\n\n1. where子句中的子查询\n\n   ~~~sql\n   #单行子查询\n   #查询 2023 年 6 月用水量大于平均值的台账记录\n   select avg(usenum) from t_account where month=6;\n   select usenum from t_account where usenum>(select avg(usenum) from t_account where month=6) and month=6;\n   #多行子查询\n   select * from t_address where id in (1001,1002);\n   #查询地址含有“草”的业主的信息\n   select id from t_address where name like '%草%';\n   select * from t_owners where addressid in (select id from t_address where name like '%江安河%');\n   \n   #查询地址不含有“草”的业主的信息\n   select id from t_address where name not like '%草%';\n   select * from t_owners where addressid in (select id from t_address where name not like '%草%');\n   \n   select * from t_onwers where addressid not in(select id from t_address where name like '%草%');\n   #\n   ~~~\n\n2. from子句中的子查询\n\n   from子查询为多行子查询\n\n   ~~~sql\n   #查询显示业主编号，业主名称，业主类型名称，条件为业主类型为”居民”，使用子查询实现。\n   select id,name,ownertypename from (select twn.*,tt.name ownertypename  from t_owners twn,t_ownertype tt  where twn.ownertypeid=tt.id and tt.name='居民')\n   \n   ~~~\n\n3. select 子句中的子查询\n\n   ~~~sql\n   #列出业主信息，包括 ID，名称，所属地址。\n   select id,name,(select name from t_address where id=addressid) addressname from t_owners;\n   #列出业主信息，包括 ID，名称，所属地址，所属区域\n   select id,name,\n   (select name from t_address where id=addressid) addressname,\n   (select (select name from t_area where id=areaid) from t_address where id=addressid) areaname\n   from t_owners;\n   ~~~\n\n4. 分页查询\n\n   使用rownum伪列来完成分页查询的功能。\n\n   ~~~sql\n   #分页查询台账表 T_ACCOUNT，每页 10 条记录\n   select rownum,t.* from t_account t where rownum<=5; \n   #查询5到10的数据\n   #子查询里rownum小于较大值,外面rownum大于较小值\n   select rownum,t.* from (select rownum r,t.* from t_account t where rownum<=20) t where r<=5;\n   ~~~\n\n## 5、函数\n\n#### 字符函数\n\n~~~sql\nselect ascii('a') from dual;ASCII() 返回字符的十进制数;\nselect chr(97) from dual; chr() 返回十进制数的对应的字符;\nselect concat('aa','bb') from dual; 拼接两个字符串 || \nselect 'aa' || 'bb' from dual;\nselect initcap('string') from dual;\nselect instr('adbc','a') from dual; 找出某个字符的位置\nselect instrb('abc','a') from dual;\nselect length('asdfgh') from dual; 给出字符串的长度\nselect lower('HELLO') from dual;将字符转化成小写\nselect upper('apple') from dual;将字符串转化成小写\n#去除指定的字符串\nselect ltrim('##apple','#') from dual;\nselect rtrim('apple@@','@') from dual;\nselect trim('p' from 'apple') from dual;\nselect lpad('apple',10,'*') from dual;在字符串c1的左边用字符串c2填充，直到长度为10时为止\nselect rpad('apple',10,'#') from dual;\nselect replace('apple','p','bb') from dual;替换指定的字符串。\nselect substr('apple','1',2) from dual;从第一个位置开始截取，截取两位\n\n~~~\n\n#### 日期函数\n\n~~~sql\nsysdate 返回系统当前时间\nselect sysdate from dual;\nadd_months 给系统返回的时间加一天\nselect add_months(sysdate,1) from dual;\nlast_day 返回月份的最后一天\nselect last_day(add_months(sysdate,2)) from dual;\nselect months_between(sysdate,to_date('2023-04-30','yyyy-MM-dd')) from dual;\n\nselect localtimestamp from dual;返回会话中的日期和时间 \nselect current_timestamp from dual;\nselect greatest(sysdate,add_months(sysdate,2)) from dual; 返回两个时间中最晚的。时间戳最大的。\n~~~\n\n#### 数值函数\n\n~~~sql\nselect  abs(value) from dual;绝对值\nselect ceil(value) from dual;大于或等于 value 的最小整数\nselect cos(value) from dual; 余弦\nselect cosh(value) from dual;反余弦\nselect exp(value) from dual;e的value次幂\nselect floor(value) from dual;小于或等于 value 的最大整数\nselect ln(value) from dual;value 的自然对数\nselect log(value) from dual;value 的以 10 为底的对数\nselect mod(value) from dual;求模\nselect power(v,p) from dual;v的p次幂\nselect round(v,p) from dual;按 precision 精度4舍5入\nselect sin(value) from dual;value的正弦\nselect sinh(value) from dual;value的反正弦\nselect sign(value) from dual;value 为正返回 1;为负返回-1;为 0 返回 0.\nselect tan(value) from dual;value的正切\nselect tanh(value) from dual;value的反正切\nselect vsize(value) from dual;返回value在ORACLE的存储空间大小\nselect sqrt(value) from dual;value的平方根\n~~~\n\n## 6、表空间巡检\n\n#### 查询视图dba_data_files\n\n~~~sql\nfile_name:表空间数据文件的位置\nfile_id:数据文件的ID\ntablespace_name：表空间名称\nbytes:表空间大小 字节显示\nblocks:表示数据块数量\nstatus:表示当前文件是否可用\nrelative_fno:相对文件号\nautoextensible:是否自动扩展\nmaxbytes:如果扩展，最大扩展的大小\nmaxblocks：如果扩展，最大的数据块数\nincrement_by：最大增加的数据块数\nuser_bytes:文件中实际有用的字节数\nuser_blocks:文件中实际有用的数据块数\n\nselect file_name,tablespace_name,bytes/1024/1024 from dba_data_files;\nselect file_name,tablespace_name,sum(bytes)/1024/1024 from dba_data_files group by file_name,tablespace_name;\n\n#查看表空间总容量和剩余容量和使用量。\nselect df.tablespace_name,SUM(df.bytes)/1024/1024 total,SUM(fs.bytes)/1024/1024 free,SUM(df.bytes-fs.bytes)/1024/1024 used from dba_data_files df,dba_free_space fs\nwhere df.tablespace_name = fs.tablespace_name\ngroup by df.tablespace_name having df.tablespace_name='WATERBOSS';\n\n~~~\n\n#### 查询视图dba_free_space\n\n~~~sql\ntablespace_name:表空间名称\nfile_id：表空间ID\nblock_id:开始块的ID\nbytes:表示空闲的字节数\nblocks:表示空闲的数据块数\nrelative_fno:相对文件的id\n#查看表空间总容量和剩余容量和使用量。\nselect ds.tablespace_name,sum(ds.bytes)/1024/1024 total,sum(fs.bytes)/1024/1024 free,sum(ds.bytes)/1024/1024-sum(fs.bytes)/1024/1024 used from dba_data_files ds,dba_free_space fs where ds.tablespace_name=fs.tablespace_name group by ds.tablespace_name;\n~~~\n\n## 7、视图\n\n概念：视图是一种数据库对象，是从一个或者多个数据表或视图中导出的虚表，视图所对应的数据并不真正地存储在视图中，而是存储在所引用的数据表中，视图的结构和数据是对数据表进行查询的结果。\n\n优点：\n\n- 简化数据操作：视图可以简化用户处理数据的方式。\n- 着重于特定数据：不必要的数据或敏感数据可以不出现在视图中。\n- 视图提供了一个简单而有效的安全机制，可以定制不同用户对数据的访问权限。\n- 提供向后兼容性：视图使用户能够在表的架构更改时为表创建向后兼容接口。\n\n#### 创建和修改视图\n\n~~~sql\ncreate [or replace] [force] view view_name\nas subquery\n[with check option]\n[with read only]\n\n[or replace]:若已经存在该视图，oracle自动重构该视图\n[force]:不管基表是否存在，oracle都会自动创建该视图\nsuquery:子查询\n[with check option]:插入和修改的数据行必须满足定义视图的约束\n[with read only]:该视图上不能进行任何 DML 操作。\n\n#create view dba_data_files_v1 as select file_name,tablespace_name, from dba_data_files;\ncreate [or replace] view t_account_v1 as select id,ownerid,ownertypeid,areaid from t_account;\nselect * from t_account_v1;\n#简单视图，可以进行增删改查记录\n#update view_name set column=新值 where 条件\nupdate t_account_v1 set areaid=1002 where id=5;\ncommit;\nselect * from t_account_v1;\n~~~\n\n视图其实是一个虚拟的表，它的数据其实来自于表。如果更改了视图的数据，表的数据也自然会变化，更改了\n表的数据，视图也自然会变化。\n\n#### 删除视图\n\n~~~sql\ndrop view view_name;\n~~~\n\n#### 带检查约束的视图\n\n~~~sql\ncreate or replace view t_account_v2 \nas\nselect id,ownerid,ownertypeid,areaid from t_account where areaid=1001\nwith check option;\n\n#update t_account_v2 set areaid=1002 where id=1;\n#会报错view WITH CHECK OPTION where-clause violation\n~~~\n\n#### 只读视图的创建与使用\n\n指定 WITH READ ONLY 选项，这样创建的视图就是一个只读视图\n\n~~~sql\ncreate or replace view t_account_v2\nas\nselect id,ownerid,ownertypeid,areaid from t_account where areaid=1001\nwith read only;\nupdate t_account_v2 set areaid=1002 where id=1;\n#修改只读视图出现：cannot perform a DML operation on a read-only view\n~~~\n\n#### 创建不存在基表的视图\n\n有的时候，创建视图时的表可能并不存在，但是以后可能会存在，此时需要创建这样的视图，需要添加 FORCE 选项\n\n~~~sql\ncreate or replace force view t_temp_vi \nas\nselect * from t_temp;\n~~~\n\n#### 查询所有的视图\n\n~~~sql\nselect * from user_views;\n~~~\n\n#### 复杂视图的创建与使用\n\n复杂视图，就是视图的 SQL 语句中，有聚合函数或多表关联查询。\n\n~~~sql\n#1、多表关联查询的视图\ncreate or replace force view twn_tt_v1\nas\nselect twn.*,tt.name as ownertypename from t_owners twn,t_ownertype tt where twn.ownertypeid=tt.id(+)\nwith check option;\nselect * from twn_tt_v1;\nupdate twn_tt_v1 set name='suhe' where id=1002;\n#可以修改主表的数据不可以修改关联表的数据\n#2、分组聚合统计查询的视图\nselect * from t_account;\ncreate or replace force view month_per_num_2023\nas\nselect year,month,sum(usenum) sumuse from t_account group by year,month group by year,month;\nselect * from month_per_num_2023;\n~~~\n\n#### 物化视图\n\n​\t视图是一个虚拟表（也可以认为是一条语句），基于它创建时指定的查询语句返回的结果集。每次访问它都会导致这个查询语句被执行一次。为了避免每次访问都执行这个查询，可以将这个查询结果集存储到一个物化视图（也叫实体化视图）。物化视图与普通的视图相比的区别是物化视图是建立的副本，它类似于一张表，需要占用存储空间。而对一个物化视图查询的执行效率与查询一个表是一样的。\n\n- 创建物化视图语法\n\n~~~sql\ncreate meterialized view view_name\n[build immediate | build deferred]\nrefresh [fast | complete | force]\n[\n on [commit | demand]    | start with (start_time) next (next_time)\n]\nas\nsubquery\n\nbuild immediate:是在创建物化视图的时候就生成数据。\nbuild dererred:则在创建时不生成数据，以后根据需要再生成数据。默认为 build immediate。\nrefresh:指当基表发生了 DML 操作后，物化视图何时采用哪种方式和基表进行同步。[fast | complete|force] fast采用增量刷新，只刷新自上次刷新以后进行的修改。complete刷新对整个物化视图进行完全的刷新。force方式，则 Oracle 在刷新时会去判断是否可以进行快速刷新，如果可以则采用 fast 方式，否则采用 complete的方式，force 是默认的方式。\n刷新模式：on commit和on demand两种， on demand指需要手动刷新物化视图（默认）。on commit指在基表发生commit操作时自动刷新.\n\n~~~\n\n- 创建手动刷新的物化视图\n\n~~~sql\ncreate meterialized view mv_v1\n[build immediate\nrefresh force on demand]\nas \nselect twn.*,ta.name as addressname from t_owners twn,t_address ta where twn.addressid=ta.id(+);\n\ninsert into t_owners VALUES (1004,'lili',1003,'6-1','7895',sysdate,1002);\ncommit;\nselect * from mv_v2;\n#物化视图中没有新插入的数据。\n#PL/SQL执行\nbegin\nDBMS_MVIEW.refresh('mv_v2','C');\nend;\n#或者在命令行执行\nEXEC DBMS_MVIEW.refresh('mv_v2','C');\n#DBMS_MVIEW.refresh 实际上是系统内置的存储过程\n~~~\n\n- 创建自动刷新的物化视图\n\n~~~sql\ncreate materialized view mv_v3\nbuild immediate\nrefresh force\non commit\nas\nselect twn.*,ta.name as addressname from t_owners twn,t_address ta where twn.addressid=ta.id(+);\n\ninsert into t_owners VALUES (1005,'longlong',1002,'6-2','1234',sysdate,1001);\ncommit;\nselect * from mv_v3;\n~~~\n\n- 创建时不生成数据的物化视图\n\n~~~sql\ncreate materailized view mv_v4\nbuild deferred\nrefresh force on commit\nas\nselect twn.*,ta.name as addressname from t_owners twn,t_address ta where twn.addressid=ta.id(+);\nselect * from mv_v4;\n\nbegin\nDBMS_MVIEW.refresh('mv_v4','C');\nend;\ninsert into t_owners VALUES (1006,'chuan',1001,'7-2','7534',sysdate,1003);\ncommit;\nselect * from mv_v4;\n~~~\n\n- 删除物化视图\n\n~~~\ndrop materialized view view_name;\n~~~\n\n- 创建增量刷新的物化视图\n\n如果创建增量刷新的物化视图，必须首先创建物化视图日志\n\n~~~sql\n#创建物化视图日志\ncreate materialized view log on t_owners with rowid;\ncreate materialized view log on t_address with rowid;\n\ncreate materialized view mv_v5\nbuild immediate\nrefresh fast\non commit\nas\nselect twn.*,twn.rowid as twnrowid,ta.rowid as tarowid,ta.name as addressname from t_owners twn,t_address ta where twn.addressid=ta.id(+);\n\ninsert into t_owners VALUES (1007,'su',1002,'8-2','3455',sysdate,1002);\ncommit;\n#创建增量刷新的物化视图，必须：\n#1、创建物化视图中涉及表的物化视图日志。\n#2、在查询语句中，必须包含所有表的rowid(以rowid方式建立物化视图日志)\n~~~\n\n## 8、序列\n\n序列是 ORACLE 提供的用于产生一系列唯一数字的数据库对象。\n\n#### 创建序列语法\n\n~~~sql\ncreate sequence sequence_name;\n~~~\n\n通过序列的伪列来访问序列的值,NEXTVAL 返回序列的下一个值,CURRVAL 返回序列的当前值\n\n>注意：我们在刚建立序列后，无法提取当前值，只有先提取下一个值时才能再次提取当前值。\n\n~~~sql\ncreate sequence sequence_one;\nselect sequence_one.nextval from dual;\nselect sequence_one.currval from dual;\n~~~\n\n#### 创建复杂序列\n\n- 语法：\n\n~~~sql\ncreate sequence sequence_one\n[increment by n] #递增的序列值是n 如果n是正数就递增,如果是负数就递减 默认是1\n[start with n] #开始的值,递增默认是 minvalue 递减是 maxvalue\n[{maxvalue n|nomaxvalue}] #最大值\n[{minvalue n|nominvalue}]#最小值\n[{cycle | nocycle}] #循环\n[{cache n | nocache}] #分配并存入到内存中\n~~~\n\n- 创建有最大值的非循环序列\n\n~~~sql\ncreate sequence seq_1\nincrement by 20\nmaxvalue 100\nminvalue 20\nnocycle;\nselect seq_1.nextval from dual;\n~~~\n\n- 有最大值的循环序列\n\n~~~sql\ncreate sequence seq_2\nincrement by 20\nmaxvalue 100\nminvalue 20\ncycle\ncache 4;\n~~~\n\n>注意：CACHE <= CEIL((MAXVALUE - MINVALUE) / ABS(INCREMENT))\n>例如：cache <=ceil(100-20)/abs(20)\n\n#### 修改和删除序列\n\n修改序列：使用 ALTER SEQUENCE 语句修改序列，不能更改序列的 STARTWITH 参数\n\n~~~sql\nALTER SEQUENCE 序列名称 MAXVALUE 5000 CYCLE;\nalter sequence seq_1 maxvalue 300 cycle cache 14;\n~~~\n\n删除序列\n\n~~~sql\nDROP SEQUENCE 序列名称;\ndrop sequence seq_1;\n~~~\n\n## 9、同义词\n\n​\t同义词实质上是指定方案对象的一个别名。通过屏蔽对象的名称和所有者以及对分布式数据库的远程对象提供位置透明性，同义词可以提供一定程度的安全性。同时，同义词的易用性较好，降低了数据库用户的 SQL 语句复杂度。\n\n​\t同义词允许基对象重命名或者移动，这时，只需对同义词进行重定义，基于同义词的应用程序可以继续运行而无需修改。\n\n​\t同义词本身不涉及安全，当你赋予一个同义词对象权限时，你实质上是在给同义词的基对象赋予权限，同义词只是基对象的一个别名。\n\n#### 创建与使用同义词\n\n~~~sql\ncreate [public] SYNONYM synonym for object\nsynonym:创建的同义词的名称\nobject:表示表，视图，序列等我们要创建同义词的对象的名称.创建共有的同义词，以另外的用户登陆，也可以使用公有同义词\ncreate public SYNONYM twn for t_owners;\n创建私有的同义词\ncreate SYNONYM twn1 for t_owners;\n~~~\n\n## 10、索引\n\n索引是用于加速数据存取的数据对象。合理的使用索引可以大大降低 i/o 次数,从而提高数据访问性能。\n\n索引是需要占据存储空间的，也可以理解为是一种特殊的数据。形式类似于下图的一棵“树”，而树的节点存储的就是每条记录的物理地址，也就是我们提到的伪列（ROWID）\n\n#### 普通索引\n\n~~~sql\ncreate index index_name on table_name(column_name);#根据某张表的某列来创建索引。\ncreate index t_owners_name on t_owners(name);\n\n#索引性能测试\ncreate table T_INDEXTEST (\nID NUMBER,\nNAME VARCHAR2(30)\n);\nBEGIN\nFOR i in 1..1000000\nloop\nINSERT INTO T_INDEXTEST VALUES(i,'AA'||i);\nend loop;\ncommit;\nEND;\n\ncreate index t_indextest_name on t_indextest(name);\nselect * from t_indextest where id=765432;\nselect * from t_indextest where name='AA765432';\n~~~\n\n#### 唯一索引\n\n如果我们需要在某个表某个列创建索引，而这列的值是不会重复的。这是我们可以创建唯一索引。\n\n语法\n\n~~~sql\ncreate unique index index_name on table_name(column_name);\n~~~\n\n#### 复合索引\n\n~~~sql\ncreate index index_name on table_name(column_name,column_name);\n~~~\n\n#### 反向键索引\n\n​\t应用场景：当某个字段的值为连续增长的值，如果构建标准索引，会形成歪脖子树。这样会增加查询的层数，性能会下降。建立反向键索引，可以使索引的值变得不规则，从而使索引树能够均匀分布。\n\n~~~sql\ncreate index 索引名称 on 表名(列名) reverse;\ncreate index t_indextest_name_reverse on t_indextest(id) reverse;\n~~~\n\n#### 位图索引\n\n- 使用场景：位图索引适合创建在低基数列上\n- 位图索引不直接存储 ROWID，而是存储字节位到 ROWID 的映射\n- 优点：减少响应时间，节省空间占用\n\n~~~sql\ncreate bitmap index index_name table_name(column_name);\n~~~\n\n## 11、PL/SQL\n\nPL/SQL（Procedure Language/SQL）是 Oracle 对 sql 语言的过程化扩展，指在 SQL 命令语言中增加了过程处理语句（如分支、循环等），使 SQL 语言具有过程处理能力。把 SQL 语言的数据操纵能力与过程语言的数据处理能力结合起来，使得 PLSQL 面向过程但比过程语言简单、高效、灵活和实用。\n\n#### 基本语法结构\n\n~~~sql\n[declare  --声明变量]\nbegin\n逻辑代码\n[exception --异常处理]\nend;\n~~~\n\n#### 变量\n\n~~~sql\n声明变量的语法\n变量名 类型(长度)\n变量赋值语法\n变量名:=变量值\ndeclare\nv_price number(10,2);\nv_usenum number;\nv_usenum2 number(10,2);\nv_money(10,2);\nbegin\nv_price:=2.45;\nv_usenum:=8012;\nv_usenum2:=round(v_usenum/1000,2);\nv_money:=round(v_price*v_usenum2,2);\ndbms_output.put_line('单价：'||v_price||'吨数:'||v_usenum2||'金额：'||v_money);\nend;\n~~~\n\nselect into方式赋值\n\n~~~sql\nselect 列名 into 变量名 from 表名 where 条件;\n~~~\n\n> 注意：结果必须是一条记录 ，有多条记录和没有记录都会报错\n\n~~~sql\nselect usenum,num0,num1 from t_account where year=2023 and id=1;\n\ndeclare\nv_price number(10,2);\nv_usenum number;\nv_usenum2 number(10,2);\nv_num0 number(10,2);\nv_num1 number(10,2);\nv_money number(10,2);\nbegin\nv_price:=2.45;\nselect usenum,num0,num1 into v_usenum,v_num0,v_num1 from t_account where year=2023 and id=1;\nv_usenum2:=round(v_usenum/1000,2);\nv_money:=round(v_price*v_usenum2,2);\ndbms_output.put_line('单价：'||v_price||'吨数：'||v_usenum2||'金额：'||v_money||'上月字数：'||v_num0||'本月字数'||v_num1);\nend;\n~~~\n\n#### 属性类型\n\n%TYPE 引用型  作用：引用某表某列的字段类型\n\n~~~sql\ndeclare\nv_price number(10,2);\nv_usenum t_account.usenum%TYPE;\nv_num0 t_account.num0%TYPE;\nv_num1 t_account.num1%TYPE;\nv_usenum2 number(10,2);\nv_money number(10,2);\nbegin\nv_price:=2.55;\nselect usenum,num0,num1 into v_usenum,v_num0,v_num1 from t_account where year=2023 and id=3;\nv_usenum2:=round(v_usenum/1000,2);\nv_money:=v_price*v_usenum2;\ndbms_output.put_line('单价：'||v_price||'吨数：'||v_usenum2||'金额：'||v_money||'上月字数：'||v_num0||'本月字数'||v_num1);\nend;\n~~~\n\n%ROWTYPE 记录型 ，上例中的例子可以用下面的代码代替作用: 标识某个表的行记录类型\n\n~~~sql\ndeclare\nv_price number(10,2);\nv_account t_account%ROWTYPE;\nv_usenum2 number(10,2);\nv_money number(10,2);\nbegin\nv_price:=3.14;\nselect * into v_account from t_account where year=2023 and id=3;\nv_usenum2:=round(v_account.usenum/1000,2);\nv_money:=v_price*v_usenum2;\nDBMS_OUTPUT.put_line('单价：'||v_price||'吨数：'||v_usenum2||'金额：'||v_money||'上月字数：'||v_account.num0||'本月字数'||v_account.num1);\nend;\n~~~\n\n#### 异常\n\n在运行程序时出现的错误叫做异常，发生异常后，语句将停止执行，控制权转移到 PL/SQL 块的异常处理部分\n\n异常有两种类型：\n\n- 预定义异常 - 当 PL/SQL 程序违反 Oracle 规则或超越系统限制时隐式引发。\n- 用户定义异常 - 用户可以在 PL/SQL 块的声明部分定义异常，自定义的异常通过 RAISE 语句显式引发。\n\noracle预定义的异常21个\n\n| 系统异常                | 产生原因                                                     |\n| ----------------------- | ------------------------------------------------------------ |\n| ACCESS_INTO_NULL        | 未定义对象                                                   |\n| CASE_NOT_FOUND          | CASE 中若未包含相应的 WHEN ，并且没有设置 ELSE 时            |\n| COLLECTION_IS_NULL      | 集合元素未初始化                                             |\n| CURSER_ALREADY_OPEN     | 游标已经打开                                                 |\n| DUP_VAL_ON_INDEX        | 唯一索引对应的列上有重复值                                   |\n| INVALID_CURSOR          | 在不合法的游标上进行操作                                     |\n| INVALID_NUMBER          | 内置的SQL语句不能将字符转化为数字                            |\n| ***NO_DATA_FOUND***     | ***使用select into 没有行返回行***                           |\n| ***TOO_MANY_ROWS***     | ***使用select into 有多行数据返回***                         |\n| ZERO_DIVIDE             | 除数为0                                                      |\n| SUBSCRIPT_BEYOND_COUNT  | 元素下标超过嵌套表或 VARRAY 的最大值                         |\n| SUBSCRIPT_OUTSIDE_LIMIT | 使用嵌套表或 VARRAY 时，将下标指定为负数                     |\n| VALUE_ERROR             | 赋值时，变量长度不足以容纳实际数据                           |\n| LOGIN_DENIED            | PL/SQL 应用程序连接到 oracle 数据库时，提供了不正确的用户名或密码 |\n| NOT_LOGGED_ON           | PL/SQL 应用程序在没有连接 oralce 数据库的情况下访问数据      |\n| PROGRAM_ERROR           | PL/SQL 内部问题，可能需要重装数据字典＆ PL/SQL 系统包        |\n| ROWTYPE_MISMATCH        | 宿主游标变量与 PL/SQL 游标变量的返回类型不兼容               |\n| SELF_IS_NULL            | 使用对象类型时，在 NULL对象上调用对象方法                    |\n| STORAGE_ERROR           | 运行 PL/SQL 时，超出内存空间                                 |\n| SYS_INVALID_ID          | 无效的 ROWID 字符串                                          |\n| TIMEOUT_ON_RESOURCE     | Oracle 在等待资源时超时                                      |\n|                         |                                                              |\n\n语法结构：\n\n~~~sql\nexception\nwhen 异常类型 then\n异常处理逻辑\n~~~\n\n~~~sql\ndeclare\nv_price number(10,2);\nv_usenum t_account.usenum%TYPE;\nv_usenum2 number(10,2);\nv_money number(10,2);\nbegin\nv_price:=3.55;\nselect usenum into v_usenum from t_account where year=2023 and id=1;\nv_usenum2:=round(v_usenum/1000,2);\nv_money:=v_price*v_usenum2;\ndbms_output.put_line('单价：'||v_price||'吨数:'||v_usenum2||'金额：'||v_money);\nexception\nwhen NO_DATA_FOUND then\ndbms_output.put_line('未找到数据，请核实');\nwhen TOO_MANY_ROWS then\ndbms_output.put_line('查询条件有误，返回多条信息，请核实');\nend;\n~~~\n\n#### 条件判断\n\n~~~sql\n#基本语法1\nif 条件 then\n 业务逻辑\nend if;\n\n#基本语法2\nif 条件 then\n业务逻辑\nelse\n业务逻辑\nend if;\n\n#基本语法3\nif 条件 then\n业务逻辑\nelseif 条件 then\n业务逻辑\nelse\n业务逻辑\nend if;\n~~~\n\n需求：设置三个等级的水费 5 吨以下 2.45 元/吨 5 吨到 10 吨部分 3.45 元/吨 ，超过 10 吨部分 4.45 ，根据使用水费的量来计算阶梯水费。\n\n~~~sql\ndeclare\nv_price1 number(10,2);\nv_price2 number(10,2);\nv_price3 number(10,2);\nv_account t_account%ROWTYPE;\nv_usenum2 number(10,2);\nv_money number(10,2);\nbegin\nselect * into v_account from t_account where year=2023 and id=3;\nv_usenum2:=round(v_account.usenum/1000,2);\nv_price1:=2.45;\nv_price2:=3.45;\nv_price3:=4.45;\nif v_usenum2<5 then\nv_money:=v_price1*v_usenum2;\nelsif 5<v_usenum2 and v_usenum2<10 then\nv_money:=v_price1*5+v_price2*(v_usenum2-5);\nelse\nv_money:=v_price1*5+v_price2*5+v_price3*(v_usenum2-5);\nend if;\ndbms_output.put_line('吨数：'||v_usenum2||'金额：'||v_money||'上月字数：'||v_account.num0||'本月字数'||v_account.num1);\nexception\nwhen NO_DATA_FOUND then\ndbms_output.put_line('未找到数据，请核实');\nwhen TOO_MANY_ROWS then\ndbms_output.put_line('有多行数据被查询');\nend;\n~~~\n\n#### 循环\n\n1. 无条件循环\n\n~~~sql\nloop\n循环语句\nend loop;\n\n#例子\ndeclare\nv_num number;\nbegin\nv_num:=0;\nloop\ndbms_output.put_line('v_num='||v_num);\nv_num:=v_num+1;\nif v_num=100 then\nexit;\nend if;\nend loop;\nend;\n\n#循环部分可以改写成\nloop\ndbms_output.put_line('v_num='||v_num);\nv_num:=v_num+1;\nexit when v_num>100;\nend loop;\n~~~\n\n \t2.条件循环\n\n~~~sql\nwhile 条件\nloop\n循环体\nend loop;\n\n#范例：输出从1开始的100个数\ndeclare\nv_num number;\nbegin\nv_num:=0;\nwhile v_num<101\nloop\ndbms_output.put_line('v_num='||v_num);\nv_num:=v_num+1;\nend loop;\nend;\n~~~\n\n​\t3.for循环\n\n~~~sql\n#基本语法\nfor 变量 in 起始值..终值\nloop \n循环体\nend loop;\n\n\nbegin\nfor v_num in 0..100\nloop\ndbms_output.put_line('v_num='||v_num);\nend loop;\nend;\n~~~\n\n#### 游标\n\n游标是系统为用户开设的一个数据缓冲区,存放 SQL 语句的执行结果。我们可以把游标理解为 PL/SQL 中的结果集。\n\n在声明区声明游标，语法如下：\n\n~~~sql\ncursor 游标名称 is SQL 语句;\n~~~\n\n使用游标语法\n\n~~~sql\nopen 游标名称\nloop\n\tfetch 游标名称 into 变量;\n\texit when 游标名称%notfound;\nend loop;\nclose 游标名称;\n\ndeclare\ncurr_jylsh varchar2(50);\ncursor lyjsh_cursor is select jylsh from jylsh_table;\nbegin\nopen lyjsh_cursor;\n\tloop\n\tfetch lyjsh_cursor into curr_jylsh;\n\texit when lyjsh_cursor%notfound;\n\tinsert into t_sbf_sb_cxjm_sbbc_fail values(curr_jylsh,sysdate,'ljh','00');\n\tcommit;\n\tupdate sbf_sb_cxjmhdxx set sjclzt='00',xgrq=sysdate,xgr_dm='ljh' where cxjmhd_id in (select lymx_id from sbf_sb_wyxx where jylsh=curr_jylsh);\n\tcommit;\n\tdelete from sbf_sb_cxjmwyxx e where e.jylsh=curr_jylsh;\n\tcommit;\n\tdelete from sbf_sb_cxjm_sbwyxx e where e.jylsh=curr_jylsh;\n\tcommit;\n\tdelete from sbf_sb_wyxx e where e.jylsh=curr_jylsh;\n\tcommit;\n\tupdate sbf_sb \n\tend loop;\nclose lyjsh_cursor;\nend;\n\t\n~~~\n\n需求：打印业主类型为 1 的价格表\n\n~~~sql\ndeclare \nv_pricetable t_pricetable%ROWTYPE;\ncursor cur_pricetable is select * from t_pricetable where ownertypeid=1001;\nbegin\nopen cur_pricetable;\n\tloop\n\tfetch  cur_pricetable into v_pricetable;\n\texit when cur_pricetable%notfound;\n\tdbms_output.put_line( '价格:'||v_pricetable.price ||'吨位：'||v_pricetable.minnum||'-'||v_pricetable.maxnum );\n\tend loop;\nclose cur_pricetable;\nend;\n~~~\n\n带参数的游标\n\n~~~sql\ndeclare\nv_pricetable t_pricetable%ROWTYPE;\ncursor cur_pricetable(v_ownertypeid number) is select * from t_pricetable where ownertypeid=v_ownertypeid;\nbegin\nopen cur_pricetable(1001);\nloop\n\tfetch cur_pricetable into v_pricetable;\n\texit when cur_pricetable%notfound;\n\tdbms_output.put_line('价格:'||v_pricetable.price ||'吨位：'||v_pricetable.minnum||'-'||v_pricetable.maxnum );\nend loop;\t\nclose cur_pricetable;\nend;\n~~~\n\nfor 循环提取游标值\n\n~~~sql\ndeclare\ncursor cur_pricetable(v_ownertypeid number) is select * from t_pricetable where ownertypeid=v_ownertypeid;\nbegin\nfor cur_pricetable in cur_pricetable(1001)\nloop\ndbms_output.put_line('价格:'||cur_pricetable.price ||'吨位：'||cur_pricetable.minnum||'-'||cur_pricetable.maxnum );\nend loop;\nend;\n~~~\n\n## 12、存储函数\n\n存储函数又称为自定义函数。可以接收一个或多个参数，返回一个结果。在函数中我们可以使用 PL/SQL 进行逻辑的处理。\n\n#### 存储函数语法结构\n\n~~~sql\ncreate or replace function 函数名称(参数名称 参数类型, 参数名称 参数类型, ...)\nreturn 结果变量数据类型\nis 变量声明部分;\nbegin\n逻辑部分;\nRETURN 结果变量;\n[exception 异常处理部分]\nend;\n~~~\n\n#### 示例\n\n~~~sql\ncreate  function pingping(v_name varchar2,v_age number)\nreturn varchar2\nis\nv_result varchar2(30);\nbegin\nv_result:='姓名'||v_name||'-年龄'||v_age;\ndbms_output.put_line('=='||v_result);\nreturn v_result;\nend;\n#调用\nselect pingping('suhe',18) from dual;\n~~~\n\n需求：查询业主 ID，业主名称，业主地址，业主地址使用刚才我们创建的函数来实现。\n\n~~~sql\ncreate function ss(v_id number) return varchar2\nis\naddress_name varchar2(100);\nbegin\nselect name into address_name from t_address where id=v_id;\nreturn address_name;\nend;\n\nselect id,name,ss(addressid) from t_owners;\n~~~\n\n## 13、存储过程\n\n#### 概念\n\n存储过程是被命名的 PL/SQL 块，存储于数据库中，是数据库对象的一种。应用程序可以调用存储过程，执行相应的逻辑。\n\n存储过程与存储函数都可以封装一定的业务逻辑并返回结果，存在区别如下：\n1、存储函数中有返回值，且必须返回；而存储过程没有返回值，可以通过传出参数返回多个值。\n2、存储函数可以在 select 语句中直接使用，而存储过程不能。过程多数是被应用程序所调用。\n3、存储函数一般都是封装一个查询结果，而存储过程一般都封装一段事务代码。\n\n#### 语法\n\n~~~sql\ncreate or replace procedure 存储过程名字(参数1 类型,参数2 类型)\nis|as\n变量申明;\nbegin\n逻辑部分;\n[exception 异常处理部分]\nend;\n~~~\n\n>参数只指定类型，不指定长度\n\n过程参数的三种模式：IN 传入参数（默认）,OUT 传出参数 ，主要用于返回程序运行结果,IN OUT 传入传出参数\n\n#### 案例\n\n1、创建不带传出参数的存储过程：添加业主信息\n\n~~~sql\ncreate sequence owner_sequence start with 1010;\ncreate or replace procedure owners_add(v_name varchar2,v_addressid number,v_housenumber varchar2,v_watermeter varchar2,v_type varchar2)\nis\nbegin\ninsert into t_owners values(owner_sequence.nextval,v_name,v_addressid,v_housenumber,v_watermeter,sysdate,v_type);\ncommit;\nend;\ncall owners_add('赵伟',1001,'999-3','132-7',1002);\n~~~\n\n2、创建带传出参数的存储过程\n\n~~~sql\ncreate or replace procedure owners_add_with_out(v_name varchar2,v_addressid number,v_housenumber varchar2,v_watermeter varchar2,v_type varchar2,v_id out number)\nis\nbegin\nselect owner_sequence.nextval into v_id from dual;\ninsert into t_owners values(v_id,v_name,v_addressid,v_housenumber,v_watermeter,sysdate,v_type);\ncommit;\nend;\n\n\ndeclare \nv_id number;\nbegin\nowners_add_with_out('王旺旺',1,'922-3','133-7',1,v_id);\nDBMS_OUTPUT.put_line('增加成功,ID:'||v_id);\nend;\n~~~\n\n## 14、触发器\n\n#### 概念\n\n数据库触发器是一个与表相关联的、存储的 PL/SQL 程序。每当一个特定的数据操作语句(Insert,update,delete)在指定的表上发出时，Oracle 自动地执行触发器中定义的语句序列。\n\n触发器可用于\n\n- 数据确认\n- 实施复杂的安全性检查\n- 做审计，跟踪表上所做的数据操作等\n- 数据的备份和同步\n\n触发器分类\n\n- 前置触发器（BEFORE）\n- 后置触发器（AFTER）\n\n#### 触发器语法\n\n~~~sql\ncreate or replace trigger 触发器名字\nbefore|after\n[delete][[or] insert][[or]update [of 列名]]\non 表名\n[for each row ] [when [条件]]\ndeclare\n变量申明;\nbegin\nPLSQL块\nend;\n~~~\n\n>作用是标注此触发器是行级触发器还是语句级触发器\n\n在触发器中触发语句与伪记录变量的值\n\n| 触发语句 | :old                     | :new                     |\n| -------- | ------------------------ | ------------------------ |\n| insert   | 所有字段都是空的（null） | 将要插入的数据           |\n| update   | 更新以前该行的值         | 更新后的值               |\n| delete   | 删除以前该行的值         | 所有字段都是空的（null） |\n\n#### 案例\n\n1、前置触发器\n\n需求：当用户输入本月累计表数后，自动计算出本月使用数 。\n\n~~~sql\ncreate or replace trigger tri_account_update\nbefore\nupdate of num1\non t_account\nfor each row\ndeclare\nbegin\n:new.usenum:=:new.num1-:new.num0;\nend;\n\n#create table t_account(id number,ownerid number,ownertypeid number,areaid number,year char(4),month #char(2),num0 number,num1 number,usenum number,meteruserid number,meterdate date,money number(10,2),isfee #char(1),feedate date,feeuserid number);\ninsert into t_account values(1,1001,1001,1001,2023,06,43543,46456,3000,1001,sysdate,3232,0,sysdate,1001);\ncommit;\n\nupdate t_account set num1=100000 where id=1;\n~~~\n\n2、后置触发器\n\n需求：当用户修改了业主信息表的数据时记录修改前与修改后的值\n\n~~~sql\n\ncreate table t_owners_log\n(\nupdatetime date,\nownerid number,\noldname varchar2(30),\nnewname varchar2(30)\n);\n\ncreate or replace trigger tri_insert_owner\nafter\nupdate of name\non t_owners\nfor each row\ndeclare\nbegin\ninsert into t_owners_log values(sysdate,:old.id,:old.name,:new.name);\nend;\n\nupdate t_owners set name='lililili' where id=1004;\nselect * from t_owners_log;\n~~~\n\n","slug":"Oracle笔记","published":1,"date":"2024-10-23T08:12:57.841Z","updated":"2024-11-18T10:23:09.144Z","comments":1,"layout":"post","photos":[],"_id":"cm3u077rz0003ogst3xkf82bk","content":"<h2 id=\"PL-SQL-developer安装\"><a href=\"#PL-SQL-developer安装\" class=\"headerlink\" title=\"PL&#x2F;SQL developer安装\"></a>PL&#x2F;SQL developer安装</h2><p>1、安装PL&#x2F;SQL developer程序，安装目录不要出现中文。</p>\n<p>2、配置客户端路径：点击PL&#x2F;SQL developer界面的Configure-&gt;Preferences-&gt;oracle配置的connect属性配置。，和</p>\n<p>指定Oracle Home 路径：D:\\BaiduNetdiskDownload\\client\\instantclient_12_1</p>\n<p>指定OCI library路径：D:\\BaiduNetdiskDownload\\client\\instantclient_12_1\\oci.dll</p>\n<p><img src=\"https://bitiful.hudi.space/posts/oraclebase/plsql_develop_1.png\" alt=\"image-20230714112548602\"></p>\n<p>3、在 ORACLE 的以下安装目录中找到 tnsnames.ora 文件，拷贝到本地电脑的 D盘根目录。打开 tnsnames.ora 文件编辑配置oracle所在的服务器IP地址，设置环境变量 TNS_ADMIN 为 D 盘根目录( tnsnames.ora 所在目录 )</p>\n<p><img src=\"https://bitiful.hudi.space/posts/oraclebase/plsql_develop_2.png\" alt=\"image-20230714113841909\"></p>\n<p>4、中文编码设置查看服务器端编码 </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SQL</span>:<span class=\"keyword\">select</span> userenv(<span class=\"string\">&#x27;language&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br></pre></td></tr></table></figure>\n\n<p>我实际查到的结果为:AMERICAN_AMERICA.ZHS16GBK<br>5、配置环境变量，计算机-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;新建，设置变量名:NLS_LANG,变量值:第 1 步查到的值，<br>AMERICAN_AMERICA.ZHS16GBK</p>\n<h2 id=\"1、数据类型\"><a href=\"#1、数据类型\" class=\"headerlink\" title=\"1、数据类型\"></a>1、数据类型</h2><h4 id=\"number-数值类型\"><a href=\"#number-数值类型\" class=\"headerlink\" title=\"number 数值类型\"></a>number 数值类型</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">number（<span class=\"number\">5</span>） 最大值<span class=\"number\">99999</span> </span><br><span class=\"line\">number(<span class=\"number\">5</span>,<span class=\"number\">2</span>) 最大值<span class=\"number\">999.99</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"字符串类型\"><a href=\"#字符串类型\" class=\"headerlink\" title=\"字符串类型\"></a>字符串类型</h4><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">char 固定长度的字符类型，最多存储2000个字节</span><br><span class=\"line\">varchar2 可变长度的字符类型，最多存储4000个字节</span><br><span class=\"line\">long  大文本类型。最大可以存储2个G</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"日期类型\"><a href=\"#日期类型\" class=\"headerlink\" title=\"日期类型\"></a>日期类型</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysdate 日期时间型，精确到秒</span><br><span class=\"line\"><span class=\"type\">timestamp</span> 精确到秒的小数点后<span class=\"number\">9</span>位</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"二进制类型\"><a href=\"#二进制类型\" class=\"headerlink\" title=\"二进制类型\"></a>二进制类型</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">clob</span> 存储字符,最大可以存<span class=\"number\">4</span>个G</span><br><span class=\"line\"><span class=\"type\">blob</span> 存储图像、声音、视频等二进制数据,最多可以存<span class=\"number\">4</span>个G</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2、DDL操作\"><a href=\"#2、DDL操作\" class=\"headerlink\" title=\"2、DDL操作\"></a>2、DDL操作</h2><h4 id=\"用SQLPLUS连接Oracle的连接字符串\"><a href=\"#用SQLPLUS连接Oracle的连接字符串\" class=\"headerlink\" title=\"用SQLPLUS连接Oracle的连接字符串\"></a>用SQLPLUS连接Oracle的连接字符串</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlplus <span class=\"keyword\">system</span><span class=\"operator\">/</span>local123<span class=\"variable\">@192</span><span class=\"number\">.168</span><span class=\"number\">.157</span><span class=\"number\">.129</span>:<span class=\"number\">1521</span><span class=\"operator\">/</span>orcl</span><br><span class=\"line\">sqlplus    账户名<span class=\"operator\">/</span>密码@所在主机:端口号</span><br><span class=\"line\">sqlplus <span class=\"keyword\">system</span><span class=\"operator\">/</span>local123 <span class=\"keyword\">as</span> sysdba</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建表空间\"><a href=\"#创建表空间\" class=\"headerlink\" title=\"创建表空间\"></a>创建表空间</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span>space xxxx</span><br><span class=\"line\">datafile <span class=\"string\">&#x27;c:\\xxxx.dbf&#x27;</span></span><br><span class=\"line\">size <span class=\"number\">100</span>m autoextend <span class=\"keyword\">on</span> next <span class=\"number\">10</span>m</span><br><span class=\"line\">xxx表示表空间名</span><br><span class=\"line\">datafile 表示数据储存的物理文件名</span><br><span class=\"line\">size 用于设置表的初始大小</span><br><span class=\"line\">autoextend <span class=\"keyword\">on</span> 用于设置自动增长，如果存储量超过初始大小，则开始自动扩容</span><br><span class=\"line\">next 用于设置扩容的空间大小</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span>space test;</span><br><span class=\"line\">datafile <span class=\"string\">&#x27;c:\\test.dbf&#x27;</span></span><br><span class=\"line\">size <span class=\"number\">100</span>m autoextend <span class=\"keyword\">on</span> next <span class=\"number\">10</span>m</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">user</span> 用户名</span><br><span class=\"line\">identified <span class=\"keyword\">by</span> 密码</span><br><span class=\"line\"><span class=\"keyword\">default</span> tablespace 表空间名</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"用户赋予权限\"><a href=\"#用户赋予权限\" class=\"headerlink\" title=\"用户赋予权限\"></a>用户赋予权限</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant dba to 用户名  给xxx用户授予DBA权限</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"表的创建\"><a href=\"#表的创建\" class=\"headerlink\" title=\"表的创建\"></a>表的创建</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> 表名（</span><br><span class=\"line\">字段名  字段类型[长度] [约束],</span><br><span class=\"line\">....</span><br><span class=\"line\">）</span><br><span class=\"line\">例如</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> users(</span><br><span class=\"line\">userid number <span class=\"keyword\">primary</span> key,</span><br><span class=\"line\">name varchar2(<span class=\"number\">50</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_owners(</span><br><span class=\"line\">id number <span class=\"keyword\">primary</span> key,</span><br><span class=\"line\">name varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">addressid number,</span><br><span class=\"line\">housenumber varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">watermeter varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">adddate <span class=\"type\">date</span>,</span><br><span class=\"line\">ownertypeid number</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_ownertype(id number  <span class=\"keyword\">primary</span> key,name varchar2(<span class=\"number\">30</span>));</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_pricetable(id number <span class=\"keyword\">primary</span> key,price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),ownertypeid number,minnum number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),maxnum number(<span class=\"number\">10</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_area(id number <span class=\"keyword\">primary</span> key,name varchar2(<span class=\"number\">30</span>));</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_operator(id number prmary key,name varchar2(<span class=\"number\">30</span>));</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_address(id number,name varchar2(<span class=\"number\">30</span>),areaid number,operatorid number);</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_account(id number,ownerid number,ownertypeid number,areaid number,<span class=\"keyword\">year</span> <span class=\"type\">char</span>(<span class=\"number\">4</span>),<span class=\"keyword\">month</span> <span class=\"type\">char</span>(<span class=\"number\">2</span>),num0 number,num1 number,usenum number,meteruserid number,meterdate <span class=\"type\">date</span>,money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),isfee <span class=\"type\">char</span>(<span class=\"number\">1</span>),feedate <span class=\"type\">date</span>,feeuserid number);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"表的修改\"><a href=\"#表的修改\" class=\"headerlink\" title=\"表的修改\"></a>表的修改</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">desc</span> tablename 查看表的详情</span><br><span class=\"line\">#<span class=\"number\">1</span>、增加字段语法</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tablename <span class=\"keyword\">add</span> ( 字段名  字段类型 [<span class=\"keyword\">default</span> 默认值 ],字段名  字段类型 [<span class=\"keyword\">default</span> 默认值 ] );</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> t_owners <span class=\"keyword\">add</span> ( level number <span class=\"keyword\">default</span> <span class=\"number\">1</span>,email varchar2(<span class=\"number\">255</span>) );</span><br><span class=\"line\">#<span class=\"number\">2</span>、修改字段语法</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tablename modify(字段名 字段类型[<span class=\"keyword\">default</span> 默认值],字段名 字段类型[<span class=\"keyword\">default</span> 默认值]);</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> t_owners modify(email varchar2(<span class=\"number\">50</span>));</span><br><span class=\"line\">#<span class=\"number\">3</span>、修改字段名</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tablename rename <span class=\"keyword\">column</span> 原字段名 <span class=\"keyword\">to</span> 新的字段名</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> t_owners rename <span class=\"keyword\">column</span> email <span class=\"keyword\">to</span> mail;</span><br><span class=\"line\">#<span class=\"number\">4</span>、删除字段名</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tablename <span class=\"keyword\">drop</span> <span class=\"keyword\">column</span> 字段名；</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> t_owners <span class=\"keyword\">drop</span> tel</span><br><span class=\"line\">#<span class=\"number\">5</span>、删除多个字段名</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tablename <span class=\"keyword\">drop</span> (字段<span class=\"number\">1</span>,字段<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"清空表\"><a href=\"#清空表\" class=\"headerlink\" title=\"清空表\"></a>清空表</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">truncate</span> <span class=\"keyword\">table</span> tablename; 删除表再重构表</span><br><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> tablename <span class=\"keyword\">where</span> <span class=\"number\">1</span><span class=\"operator\">=</span><span class=\"number\">1</span>; 表结构还在 主键自增的序列依然存在</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"删除表\"><a href=\"#删除表\" class=\"headerlink\" title=\"删除表\"></a>删除表</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> tablename;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3、DML操作\"><a href=\"#3、DML操作\" class=\"headerlink\" title=\"3、DML操作\"></a>3、DML操作</h2><h4 id=\"insert操作\"><a href=\"#insert操作\" class=\"headerlink\" title=\"insert操作\"></a>insert操作</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_owners(</span><br><span class=\"line\">id number <span class=\"keyword\">primary</span> key,</span><br><span class=\"line\">name varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">addressid number,</span><br><span class=\"line\">housenumber varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">watermeter varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">adddate <span class=\"type\">date</span>,</span><br><span class=\"line\">ownertypeid number</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> T_OWNERS <span class=\"keyword\">VALUES</span> (<span class=\"number\">1</span>,<span class=\"string\">&#x27;张三丰&#x27;</span>,<span class=\"number\">1001</span>,<span class=\"string\">&#x27;2-2&#x27;</span>,<span class=\"string\">&#x27;5678&#x27;</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> T_OWNERS <span class=\"keyword\">VALUES</span> (<span class=\"number\">2</span>,<span class=\"string\">&#x27;苏赫&#x27;</span>,<span class=\"number\">1002</span>,<span class=\"string\">&#x27;15-2&#x27;</span>,<span class=\"string\">&#x27;8975&#x27;</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> T_OWNERS <span class=\"keyword\">VALUES</span> (<span class=\"number\">3</span>,<span class=\"string\">&#x27;涂山红红&#x27;</span>,<span class=\"number\">1002</span>,<span class=\"string\">&#x27;6-2&#x27;</span>,<span class=\"string\">&#x27;3456&#x27;</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_ownertype(id number  <span class=\"keyword\">primary</span> key,name varchar2(<span class=\"number\">30</span>));</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_ownertype(id,name)<span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;master&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_ownertype(id,name)<span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;levelmaster&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_ownertype(id,name)<span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;supermaster&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_ownertype(id,name)<span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;居民&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_ownertype(id,name)<span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;物业&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_ownertype(id,name)<span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;来兵&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_pricetable(id number <span class=\"keyword\">primary</span> key,price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),ownertypeid number,minnum #number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),maxnum number(<span class=\"number\">10</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_pricetable <span class=\"keyword\">values</span>(<span class=\"number\">3</span>,<span class=\"number\">2.45</span>,<span class=\"number\">1001</span>,<span class=\"number\">0</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_pricetable <span class=\"keyword\">values</span>(<span class=\"number\">4</span>,<span class=\"number\">3.45</span>,<span class=\"number\">1001</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_pricetable <span class=\"keyword\">values</span>(<span class=\"number\">5</span>,<span class=\"number\">4.45</span>,<span class=\"number\">1001</span>,<span class=\"number\">10</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span></span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_area(id number <span class=\"keyword\">primary</span> key,name varchar2(<span class=\"number\">30</span>));</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;East China&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;North China&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;NorthEast&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1004</span>,<span class=\"string\">&#x27;SouthWest&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;双流区&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;温江区&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;青羊区&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1004</span>,<span class=\"string\">&#x27;青白江区&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1005</span>,<span class=\"string\">&#x27;武侯区&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_operator(id number <span class=\"keyword\">primary</span> key,name varchar2(<span class=\"number\">30</span>));</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;mary&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;sueh&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;lili&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1004</span>,<span class=\"string\">&#x27;harry&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;小明&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;小何&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;小苏&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1004</span>,<span class=\"string\">&#x27;小红&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_address(id number <span class=\"keyword\">primary</span> key,name varchar2(<span class=\"number\">30</span>),areaid number,operatorid number);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;quhouqu&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;qingyangqu&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1002</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;shuangliuqu&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1003</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1004</span>,<span class=\"string\">&#x27;wenjiangqu&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1004</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;草金路&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;尚楠湾&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1002</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;江安河大桥&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1003</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1004</span>,<span class=\"string\">&#x27;崇教路&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1004</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_account(id number,ownerid number,ownertypeid number,areaid number,<span class=\"keyword\">year</span> <span class=\"type\">char</span>(<span class=\"number\">4</span>),<span class=\"keyword\">month</span> #<span class=\"type\">char</span>(<span class=\"number\">2</span>),num0 number,num1 number,usenum number,meteruserid number,meterdate <span class=\"type\">date</span>,money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),isfee #<span class=\"type\">char</span>(<span class=\"number\">1</span>),feedate <span class=\"type\">date</span>,feeuserid number);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">1</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">2023</span>,<span class=\"number\">06</span>,<span class=\"number\">43543</span>,<span class=\"number\">46456</span>,<span class=\"number\">3000</span>,<span class=\"number\">1001</span>,sysdate,<span class=\"number\">3232</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">2</span>,<span class=\"number\">1002</span>,<span class=\"number\">1001</span>,<span class=\"number\">1002</span>,<span class=\"number\">2023</span>,<span class=\"number\">06</span>,<span class=\"number\">46456</span>,<span class=\"number\">50020</span>,<span class=\"number\">3564</span>,<span class=\"number\">1002</span>,sysdate,<span class=\"number\">3755</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">3</span>,<span class=\"number\">1003</span>,<span class=\"number\">1002</span>,<span class=\"number\">1003</span>,<span class=\"number\">2023</span>,<span class=\"number\">06</span>,<span class=\"number\">82122</span>,<span class=\"number\">92131</span>,<span class=\"number\">10009</span>,<span class=\"number\">1003</span>,sysdate,<span class=\"number\">12000</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">4</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">2023</span>,<span class=\"number\">07</span>,<span class=\"number\">46456</span>,<span class=\"number\">50000</span>,<span class=\"number\">3544</span>,<span class=\"number\">1004</span>,sysdate,<span class=\"number\">3232</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">5</span>,<span class=\"number\">1004</span>,<span class=\"number\">1001</span>,<span class=\"number\">1004</span>,<span class=\"number\">2023</span>,<span class=\"number\">06</span>,<span class=\"number\">60000</span>,<span class=\"number\">80000</span>,<span class=\"number\">20000</span>,<span class=\"number\">1001</span>,sysdate,<span class=\"number\">3232</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">6</span>,<span class=\"number\">1003</span>,<span class=\"number\">1001</span>,<span class=\"number\">1003</span>,<span class=\"number\">2023</span>,<span class=\"number\">07</span>,<span class=\"number\">92131</span>,<span class=\"number\">100000</span>,<span class=\"number\">7869</span>,<span class=\"number\">1001</span>,sysdate,<span class=\"number\">3232</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">7</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">2023</span>,<span class=\"number\">08</span>,<span class=\"number\">50000</span>,<span class=\"number\">70000</span>,<span class=\"number\">20000</span>,<span class=\"number\">1003</span>,sysdate,<span class=\"number\">3232</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">8</span>,<span class=\"number\">1002</span>,<span class=\"number\">1001</span>,<span class=\"number\">1002</span>,<span class=\"number\">2023</span>,<span class=\"number\">07</span>,<span class=\"number\">50020</span>,<span class=\"number\">70020</span>,<span class=\"number\">20000</span>,<span class=\"number\">1003</span>,sysdate,<span class=\"number\">20000</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\">#关联查询</span><br><span class=\"line\"><span class=\"keyword\">select</span></span><br><span class=\"line\">  tad.id <span class=\"keyword\">as</span> addressid,</span><br><span class=\"line\">  tad.name <span class=\"keyword\">as</span> addressname,</span><br><span class=\"line\">  ta.name <span class=\"keyword\">as</span> areaname,</span><br><span class=\"line\">  top.name <span class=\"keyword\">as</span> operatorname</span><br><span class=\"line\"><span class=\"keyword\">from</span> t_address tad,t_area ta,t_operator top</span><br><span class=\"line\"><span class=\"keyword\">where</span> tad.areaid<span class=\"operator\">=</span>ta.id <span class=\"keyword\">and</span> tad.operatorid<span class=\"operator\">=</span>top.id;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> </span><br><span class=\"line\">\tt1.addressid,</span><br><span class=\"line\">   \tt1.addressname,</span><br><span class=\"line\">    t2.name <span class=\"keyword\">as</span> operatoname,</span><br><span class=\"line\">   \tt1.areaname</span><br><span class=\"line\"><span class=\"keyword\">from</span> (</span><br><span class=\"line\">   <span class=\"keyword\">select</span> </span><br><span class=\"line\">   \t\ttad.id <span class=\"keyword\">as</span> addressid,</span><br><span class=\"line\">   \t\ttad.name <span class=\"keyword\">as</span> addressname,</span><br><span class=\"line\">    \ttad.operatorid <span class=\"keyword\">as</span> operatorid,</span><br><span class=\"line\">   \t\tta.name <span class=\"keyword\">as</span> areaname</span><br><span class=\"line\">   <span class=\"keyword\">from</span> t_address tad <span class=\"keyword\">left</span>  <span class=\"keyword\">join</span> t_area ta <span class=\"keyword\">on</span> tad.areaid<span class=\"operator\">=</span>ta.id</span><br><span class=\"line\">) t1 <span class=\"keyword\">left</span> <span class=\"keyword\">join</span> t_operator t2 <span class=\"keyword\">on</span> t1.operatorid<span class=\"operator\">=</span> t2.id;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"update数据修改\"><a href=\"#update数据修改\" class=\"headerlink\" title=\"update数据修改\"></a>update数据修改</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> 表名 <span class=\"keyword\">set</span> 字段<span class=\"operator\">=</span>新值，字段<span class=\"operator\">=</span>新值 <span class=\"keyword\">where</span> 条件;</span><br><span class=\"line\"><span class=\"keyword\">update</span> t_ownertype <span class=\"keyword\">set</span> id<span class=\"operator\">=</span><span class=\"number\">1004</span>,name<span class=\"operator\">=</span><span class=\"string\">&#x27;level1master&#x27;</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1001</span>;</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"delete删除数据\"><a href=\"#delete删除数据\" class=\"headerlink\" title=\"delete删除数据\"></a>delete删除数据</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> tablename <span class=\"keyword\">where</span> 条件</span><br><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> t_ownertype <span class=\"keyword\">where</span> id <span class=\"operator\">=</span><span class=\"number\">1004</span>;</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> t_ownertype <span class=\"keyword\">where</span> id <span class=\"operator\">&gt;</span><span class=\"number\">1001</span>;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> t_ownertype <span class=\"keyword\">where</span> id <span class=\"keyword\">in</span> (<span class=\"number\">1001</span>,<span class=\"number\">1002</span>,<span class=\"number\">1003</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意增删改查操作完成后记得commit提交事务</p>\n</blockquote>\n<h4 id=\"导入导出\"><a href=\"#导入导出\" class=\"headerlink\" title=\"导入导出\"></a>导入导出</h4><p>数据的导出</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expdp(impdp) 用户名<span class=\"operator\">/</span>密码@连接地址:端口<span class=\"operator\">/</span>服务名 [schemas<span class=\"operator\">|</span>owner]<span class=\"operator\">=</span>用户名 [dumpfile<span class=\"operator\">|</span>file]<span class=\"operator\">=</span>file1.dmp logfile<span class=\"operator\">=</span>file1.log directory<span class=\"operator\">=</span>testdata1 remap_schema<span class=\"operator\">=</span>test:test;</span><br><span class=\"line\">exp:导出命令，导出时必写。</span><br><span class=\"line\">imp:导入命令，导入时必写,每次操作，二者只能选择一个执行。</span><br><span class=\"line\">username:导出数据的用户名，必写;</span><br><span class=\"line\">password:导出数据的密码，必写;</span><br><span class=\"line\">@:地址符号，必写;</span><br><span class=\"line\">SERVICENAME:Oracle的服务名，必写;</span><br><span class=\"line\"><span class=\"number\">1521</span>:端口号，<span class=\"number\">1521</span>是默认的可以不写,非默认要写;</span><br><span class=\"line\">schemas：导出操作的用户名;</span><br><span class=\"line\">dumpfile：导出的文件;</span><br><span class=\"line\">logfile:导出的日志文件,可以不写；</span><br><span class=\"line\">directory: 如果手工创建了转储文件和日志文件，通过本命令指定导出位置</span><br><span class=\"line\">remap_schema<span class=\"operator\">=</span>源数据库用户名:目标数据库用户名,二者不同时必写，相同可以省略;</span><br><span class=\"line\"></span><br><span class=\"line\">#例如</span><br><span class=\"line\">exp <span class=\"keyword\">system</span><span class=\"operator\">/</span>local123 <span class=\"keyword\">full</span><span class=\"operator\">=</span>y 整个数据库全部导出</span><br><span class=\"line\">exp <span class=\"keyword\">system</span><span class=\"operator\">/</span>local123 <span class=\"keyword\">full</span><span class=\"operator\">=</span>y [dumpfile<span class=\"operator\">|</span>file]<span class=\"operator\">=</span>a.dmp</span><br><span class=\"line\">exp lili<span class=\"operator\">/</span>lili123 file<span class=\"operator\">=</span>lili.dmp owner<span class=\"operator\">=</span>lili;</span><br><span class=\"line\">按用户导入</span><br><span class=\"line\">imp lili<span class=\"operator\">/</span>lili123 file<span class=\"operator\">=</span>lili.dmp fromuserlili;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过<span class=\"variable\">@F</span>:\\website\\oraok\\ot\\<span class=\"number\">11</span>g\\ot_drop.sql 导入F盘下的\\website\\oraok\\ot\\<span class=\"number\">11</span>g\\目录下的ot_drop.sql文件</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4、DML练习\"><a href=\"#4、DML练习\" class=\"headerlink\" title=\"4、DML练习\"></a>4、DML练习</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> tac.areaid,<span class=\"built_in\">sum</span>(tac.money),ta.name <span class=\"keyword\">from</span> t_account tac,t_area ta <span class=\"keyword\">where</span> tac.areaid<span class=\"operator\">=</span>ta.id <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> tac.areaid,ta.name;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"简单查询\"><a href=\"#简单查询\" class=\"headerlink\" title=\"简单查询\"></a>简单查询</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners;</span><br><span class=\"line\">#精确查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> watermeter<span class=\"operator\">=</span><span class=\"number\">5678</span>;</span><br><span class=\"line\">#模糊查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%张%&#x27;</span>;</span><br><span class=\"line\">#<span class=\"keyword\">and</span>的运算符 <span class=\"keyword\">or</span>运算符</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;张%&#x27;</span> <span class=\"keyword\">or</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%山%&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;_山__&#x27;</span> <span class=\"keyword\">or</span> watermeter<span class=\"operator\">&gt;</span><span class=\"number\">5678</span>;</span><br><span class=\"line\">#<span class=\"keyword\">and</span>运算符 <span class=\"keyword\">or</span>运算符混合使用</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> (name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%苏%&#x27;</span> <span class=\"keyword\">or</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%山%&#x27;</span> ) <span class=\"keyword\">and</span> addressid <span class=\"operator\">=</span><span class=\"number\">1002</span>;</span><br><span class=\"line\">#范围查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> num0<span class=\"operator\">&gt;=</span><span class=\"number\">50000</span> <span class=\"keyword\">and</span> num0<span class=\"operator\">&lt;=</span><span class=\"number\">70000</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> num0 <span class=\"keyword\">between</span> <span class=\"number\">50000</span> <span class=\"keyword\">and</span> <span class=\"number\">70000</span>;</span><br><span class=\"line\">#空值查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span>  <span class=\"keyword\">from</span> t_account isfee <span class=\"keyword\">is</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">#查询非空值</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account isfee <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">#去重查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">distinct</span> addressid <span class=\"keyword\">from</span> t_owners ; </span><br><span class=\"line\">#排序 默认升序<span class=\"keyword\">asc</span> <span class=\"keyword\">desc</span>降序</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> usenum <span class=\"keyword\">desc</span>;</span><br><span class=\"line\">#基于伪列的查询rowid rowid是保存数据在磁盘上的物理地址</span><br><span class=\"line\"><span class=\"keyword\">select</span> rowid,t.<span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners t;</span><br><span class=\"line\">#可以通过rowid来指定查询的某条数据</span><br><span class=\"line\"><span class=\"keyword\">select</span> rowid,t.<span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners t <span class=\"keyword\">where</span> rowid<span class=\"operator\">=</span><span class=\"string\">&#x27;AAASNcAABAAAVJpAAD&#x27;</span>;</span><br><span class=\"line\">#基于伪列的查询rownum rownum是基于查询出的结果集的序号</span><br><span class=\"line\"><span class=\"keyword\">select</span> rownum,t.<span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners t;</span><br><span class=\"line\">#聚合统计sum</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">sum</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"string\">&#x27;2023&#x27;</span>;</span><br><span class=\"line\">#平均值</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">avg</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"string\">&#x27;2023&#x27;</span>;</span><br><span class=\"line\">#最小值</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">min</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"string\">&#x27;2023&#x27;</span>;</span><br><span class=\"line\">#最大值</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">max</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"string\">&#x27;2023&#x27;</span>;</span><br><span class=\"line\">#统计个数</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">count</span>(id) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"string\">&#x27;2023&#x27;</span>;</span><br><span class=\"line\">#分组查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> areaid,<span class=\"built_in\">sum</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> areaid;</span><br><span class=\"line\">#分组后在指定条件的查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> areaid,<span class=\"built_in\">sum</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> areaid <span class=\"keyword\">having</span> <span class=\"built_in\">sum</span>(usenum)<span class=\"operator\">&gt;</span><span class=\"number\">20000</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"连接查询\"><a href=\"#连接查询\" class=\"headerlink\" title=\"连接查询\"></a>连接查询</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#多表内连接</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,ta.name addressname <span class=\"keyword\">from</span> t_owners twn,t_address ta <span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id;</span><br><span class=\"line\"></span><br><span class=\"line\">#查询显示业主编号，业主名称、地址和业主类型</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.id,twn.name,ta.name addressname,tt.name ownertype <span class=\"keyword\">from</span> t_owners twn,t_ownertype tt,t_address ta <span class=\"keyword\">where</span> twn.ownertypeid<span class=\"operator\">=</span>tt.id <span class=\"keyword\">and</span> twn.addressid<span class=\"operator\">=</span>ta.id; </span><br><span class=\"line\"></span><br><span class=\"line\">#查询显示业主编号、业主名称、地址、所属区域、业主分类</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.id,twn.name,ta.name addressname,t1.name areaname,tt.name ownername <span class=\"keyword\">from</span> t_owners twn, t_area t1,t_address ta,t_ownertype tt <span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id <span class=\"keyword\">and</span> twn.ownertypeid<span class=\"operator\">=</span>tt.id <span class=\"keyword\">and</span> ta.areaid<span class=\"operator\">=</span>t1.id;</span><br><span class=\"line\"></span><br><span class=\"line\">#查询显示业主编号、业主名称、地址、所属区域、收费员、业主分类</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.id,twn.name,ta.name addressname,t1.name areaname,top.name operatorname,tt.name ownertypename <span class=\"keyword\">from</span> t_owners twn,t_address ta,t_area t1,t_operator top,t_ownertype tt</span><br><span class=\"line\"><span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id <span class=\"keyword\">and</span> twn.ownertypeid<span class=\"operator\">=</span>tt.id <span class=\"keyword\">and</span> ta.areaid<span class=\"operator\">=</span>t1.id <span class=\"keyword\">and</span> ta.operatorid<span class=\"operator\">=</span>top.id;</span><br><span class=\"line\"></span><br><span class=\"line\">#查询业主的账务记录，显示业主编号、名称、年、月、金额。如果此业主没有账务记录也要列出姓名。</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.id,twn.name,tacc.year,tacc.month,tacc.money <span class=\"keyword\">from</span> t_owners twn <span class=\"keyword\">left</span> <span class=\"keyword\">join</span> t_account tacc <span class=\"keyword\">on</span> twn.id<span class=\"operator\">=</span>tacc.ownerid; </span><br><span class=\"line\"></span><br><span class=\"line\">#左外连接</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.id,twn.name,tacc.year,tacc.month,tacc.money <span class=\"keyword\">from</span> t_owners twn,t_account tacc <span class=\"keyword\">where</span> twn.id<span class=\"operator\">=</span>tacc.ownerid(<span class=\"operator\">+</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">#右外连接</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.id,twn.name,tacc.year,tacc.month,tacc.money <span class=\"keyword\">from</span> t_owners twn,t_account tacc <span class=\"keyword\">where</span> twn.id(<span class=\"operator\">+</span>)<span class=\"operator\">=</span>tacc.ownerid;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"子查询\"><a href=\"#子查询\" class=\"headerlink\" title=\"子查询\"></a>子查询</h4><ol>\n<li><p>where子句中的子查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#单行子查询</span><br><span class=\"line\">#查询 <span class=\"number\">2023</span> 年 <span class=\"number\">6</span> 月用水量大于平均值的台账记录</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">avg</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">month</span><span class=\"operator\">=</span><span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> usenum <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> usenum<span class=\"operator\">&gt;</span>(<span class=\"keyword\">select</span> <span class=\"built_in\">avg</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">month</span><span class=\"operator\">=</span><span class=\"number\">6</span>) <span class=\"keyword\">and</span> <span class=\"keyword\">month</span><span class=\"operator\">=</span><span class=\"number\">6</span>;</span><br><span class=\"line\">#多行子查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> id <span class=\"keyword\">in</span> (<span class=\"number\">1001</span>,<span class=\"number\">1002</span>);</span><br><span class=\"line\">#查询地址含有“草”的业主的信息</span><br><span class=\"line\"><span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%草%&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> addressid <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%江安河%&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">#查询地址不含有“草”的业主的信息</span><br><span class=\"line\"><span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> name <span class=\"keyword\">not</span> <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%草%&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> addressid <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> name <span class=\"keyword\">not</span> <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%草%&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_onwers <span class=\"keyword\">where</span> addressid <span class=\"keyword\">not</span> <span class=\"keyword\">in</span>(<span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%草%&#x27;</span>);</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>from子句中的子查询</p>\n<p>from子查询为多行子查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查询显示业主编号，业主名称，业主类型名称，条件为业主类型为”居民”，使用子查询实现。</span><br><span class=\"line\"><span class=\"keyword\">select</span> id,name,ownertypename <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,tt.name ownertypename  <span class=\"keyword\">from</span> t_owners twn,t_ownertype tt  <span class=\"keyword\">where</span> twn.ownertypeid<span class=\"operator\">=</span>tt.id <span class=\"keyword\">and</span> tt.name<span class=\"operator\">=</span><span class=\"string\">&#x27;居民&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>select 子句中的子查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#列出业主信息，包括 ID，名称，所属地址。</span><br><span class=\"line\"><span class=\"keyword\">select</span> id,name,(<span class=\"keyword\">select</span> name <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> id<span class=\"operator\">=</span>addressid) addressname <span class=\"keyword\">from</span> t_owners;</span><br><span class=\"line\">#列出业主信息，包括 ID，名称，所属地址，所属区域</span><br><span class=\"line\"><span class=\"keyword\">select</span> id,name,</span><br><span class=\"line\">(<span class=\"keyword\">select</span> name <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> id<span class=\"operator\">=</span>addressid) addressname,</span><br><span class=\"line\">(<span class=\"keyword\">select</span> (<span class=\"keyword\">select</span> name <span class=\"keyword\">from</span> t_area <span class=\"keyword\">where</span> id<span class=\"operator\">=</span>areaid) <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> id<span class=\"operator\">=</span>addressid) areaname</span><br><span class=\"line\"><span class=\"keyword\">from</span> t_owners;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>分页查询</p>\n<p>使用rownum伪列来完成分页查询的功能。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#分页查询台账表 T_ACCOUNT，每页 <span class=\"number\">10</span> 条记录</span><br><span class=\"line\"><span class=\"keyword\">select</span> rownum,t.<span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account t <span class=\"keyword\">where</span> rownum<span class=\"operator\">&lt;=</span><span class=\"number\">5</span>; </span><br><span class=\"line\">#查询<span class=\"number\">5</span>到<span class=\"number\">10</span>的数据</span><br><span class=\"line\">#子查询里rownum小于较大值,外面rownum大于较小值</span><br><span class=\"line\"><span class=\"keyword\">select</span> rownum,t.<span class=\"operator\">*</span> <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> rownum r,t.<span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account t <span class=\"keyword\">where</span> rownum<span class=\"operator\">&lt;=</span><span class=\"number\">20</span>) t <span class=\"keyword\">where</span> r<span class=\"operator\">&lt;=</span><span class=\"number\">5</span>;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"5、函数\"><a href=\"#5、函数\" class=\"headerlink\" title=\"5、函数\"></a>5、函数</h2><h4 id=\"字符函数\"><a href=\"#字符函数\" class=\"headerlink\" title=\"字符函数\"></a>字符函数</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> ascii(<span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">from</span> dual;ASCII() 返回字符的十进制数;</span><br><span class=\"line\"><span class=\"keyword\">select</span> chr(<span class=\"number\">97</span>) <span class=\"keyword\">from</span> dual; chr() 返回十进制数的对应的字符;</span><br><span class=\"line\"><span class=\"keyword\">select</span> concat(<span class=\"string\">&#x27;aa&#x27;</span>,<span class=\"string\">&#x27;bb&#x27;</span>) <span class=\"keyword\">from</span> dual; 拼接两个字符串 <span class=\"operator\">||</span> </span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">&#x27;aa&#x27;</span> <span class=\"operator\">||</span> <span class=\"string\">&#x27;bb&#x27;</span> <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> initcap(<span class=\"string\">&#x27;string&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> instr(<span class=\"string\">&#x27;adbc&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">from</span> dual; 找出某个字符的位置</span><br><span class=\"line\"><span class=\"keyword\">select</span> instrb(<span class=\"string\">&#x27;abc&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> length(<span class=\"string\">&#x27;asdfgh&#x27;</span>) <span class=\"keyword\">from</span> dual; 给出字符串的长度</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">lower</span>(<span class=\"string\">&#x27;HELLO&#x27;</span>) <span class=\"keyword\">from</span> dual;将字符转化成小写</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">upper</span>(<span class=\"string\">&#x27;apple&#x27;</span>) <span class=\"keyword\">from</span> dual;将字符串转化成小写</span><br><span class=\"line\">#去除指定的字符串</span><br><span class=\"line\"><span class=\"keyword\">select</span> ltrim(<span class=\"string\">&#x27;##apple&#x27;</span>,<span class=\"string\">&#x27;#&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> rtrim(<span class=\"string\">&#x27;apple@@&#x27;</span>,<span class=\"string\">&#x27;@&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">trim</span>(<span class=\"string\">&#x27;p&#x27;</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;apple&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> lpad(<span class=\"string\">&#x27;apple&#x27;</span>,<span class=\"number\">10</span>,<span class=\"string\">&#x27;*&#x27;</span>) <span class=\"keyword\">from</span> dual;在字符串c1的左边用字符串c2填充，直到长度为<span class=\"number\">10</span>时为止</span><br><span class=\"line\"><span class=\"keyword\">select</span> rpad(<span class=\"string\">&#x27;apple&#x27;</span>,<span class=\"number\">10</span>,<span class=\"string\">&#x27;#&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> replace(<span class=\"string\">&#x27;apple&#x27;</span>,<span class=\"string\">&#x27;p&#x27;</span>,<span class=\"string\">&#x27;bb&#x27;</span>) <span class=\"keyword\">from</span> dual;替换指定的字符串。</span><br><span class=\"line\"><span class=\"keyword\">select</span> substr(<span class=\"string\">&#x27;apple&#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"number\">2</span>) <span class=\"keyword\">from</span> dual;从第一个位置开始截取，截取两位</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"日期函数\"><a href=\"#日期函数\" class=\"headerlink\" title=\"日期函数\"></a>日期函数</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysdate 返回系统当前时间</span><br><span class=\"line\"><span class=\"keyword\">select</span> sysdate <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\">add_months 给系统返回的时间加一天</span><br><span class=\"line\"><span class=\"keyword\">select</span> add_months(sysdate,<span class=\"number\">1</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\">last_day 返回月份的最后一天</span><br><span class=\"line\"><span class=\"keyword\">select</span> last_day(add_months(sysdate,<span class=\"number\">2</span>)) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> months_between(sysdate,to_date(<span class=\"string\">&#x27;2023-04-30&#x27;</span>,<span class=\"string\">&#x27;yyyy-MM-dd&#x27;</span>)) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">localtimestamp</span> <span class=\"keyword\">from</span> dual;返回会话中的日期和时间 </span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">current_timestamp</span> <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> greatest(sysdate,add_months(sysdate,<span class=\"number\">2</span>)) <span class=\"keyword\">from</span> dual; 返回两个时间中最晚的。时间戳最大的。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"数值函数\"><a href=\"#数值函数\" class=\"headerlink\" title=\"数值函数\"></a>数值函数</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span>  <span class=\"built_in\">abs</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;绝对值</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">ceil</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;大于或等于 <span class=\"keyword\">value</span> 的最小整数</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">cos</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual; 余弦</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">cosh</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;反余弦</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">exp</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;e的<span class=\"keyword\">value</span>次幂</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">floor</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;小于或等于 <span class=\"keyword\">value</span> 的最大整数</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">ln</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span> 的自然对数</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">log</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span> 的以 <span class=\"number\">10</span> 为底的对数</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">mod</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;求模</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">power</span>(v,p) <span class=\"keyword\">from</span> dual;v的p次幂</span><br><span class=\"line\"><span class=\"keyword\">select</span> round(v,p) <span class=\"keyword\">from</span> dual;按 <span class=\"keyword\">precision</span> 精度<span class=\"number\">4</span>舍<span class=\"number\">5</span>入</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">sin</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span>的正弦</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">sinh</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span>的反正弦</span><br><span class=\"line\"><span class=\"keyword\">select</span> sign(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span> 为正返回 <span class=\"number\">1</span>;为负返回<span class=\"number\">-1</span>;为 <span class=\"number\">0</span> 返回 <span class=\"number\">0.</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">tan</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span>的正切</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">tanh</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span>的反正切</span><br><span class=\"line\"><span class=\"keyword\">select</span> vsize(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;返回<span class=\"keyword\">value</span>在ORACLE的存储空间大小</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">sqrt</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span>的平方根</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6、表空间巡检\"><a href=\"#6、表空间巡检\" class=\"headerlink\" title=\"6、表空间巡检\"></a>6、表空间巡检</h2><h4 id=\"查询视图dba-data-files\"><a href=\"#查询视图dba-data-files\" class=\"headerlink\" title=\"查询视图dba_data_files\"></a>查询视图dba_data_files</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file_name:表空间数据文件的位置</span><br><span class=\"line\">file_id:数据文件的ID</span><br><span class=\"line\">tablespace_name：表空间名称</span><br><span class=\"line\">bytes:表空间大小 字节显示</span><br><span class=\"line\">blocks:表示数据块数量</span><br><span class=\"line\">status:表示当前文件是否可用</span><br><span class=\"line\">relative_fno:相对文件号</span><br><span class=\"line\">autoextensible:是否自动扩展</span><br><span class=\"line\">maxbytes:如果扩展，最大扩展的大小</span><br><span class=\"line\">maxblocks：如果扩展，最大的数据块数</span><br><span class=\"line\">increment_by：最大增加的数据块数</span><br><span class=\"line\">user_bytes:文件中实际有用的字节数</span><br><span class=\"line\">user_blocks:文件中实际有用的数据块数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> file_name,tablespace_name,bytes<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> <span class=\"keyword\">from</span> dba_data_files;</span><br><span class=\"line\"><span class=\"keyword\">select</span> file_name,tablespace_name,<span class=\"built_in\">sum</span>(bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> <span class=\"keyword\">from</span> dba_data_files <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> file_name,tablespace_name;</span><br><span class=\"line\"></span><br><span class=\"line\">#查看表空间总容量和剩余容量和使用量。</span><br><span class=\"line\"><span class=\"keyword\">select</span> df.tablespace_name,<span class=\"built_in\">SUM</span>(df.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> total,<span class=\"built_in\">SUM</span>(fs.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> <span class=\"keyword\">free</span>,<span class=\"built_in\">SUM</span>(df.bytes<span class=\"operator\">-</span>fs.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> used <span class=\"keyword\">from</span> dba_data_files df,dba_free_space fs</span><br><span class=\"line\"><span class=\"keyword\">where</span> df.tablespace_name <span class=\"operator\">=</span> fs.tablespace_name</span><br><span class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span> df.tablespace_name <span class=\"keyword\">having</span> df.tablespace_name<span class=\"operator\">=</span><span class=\"string\">&#x27;WATERBOSS&#x27;</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查询视图dba-free-space\"><a href=\"#查询视图dba-free-space\" class=\"headerlink\" title=\"查询视图dba_free_space\"></a>查询视图dba_free_space</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tablespace_name:表空间名称</span><br><span class=\"line\">file_id：表空间ID</span><br><span class=\"line\">block_id:开始块的ID</span><br><span class=\"line\">bytes:表示空闲的字节数</span><br><span class=\"line\">blocks:表示空闲的数据块数</span><br><span class=\"line\">relative_fno:相对文件的id</span><br><span class=\"line\">#查看表空间总容量和剩余容量和使用量。</span><br><span class=\"line\"><span class=\"keyword\">select</span> ds.tablespace_name,<span class=\"built_in\">sum</span>(ds.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> total,<span class=\"built_in\">sum</span>(fs.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> <span class=\"keyword\">free</span>,<span class=\"built_in\">sum</span>(ds.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">-</span><span class=\"built_in\">sum</span>(fs.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> used <span class=\"keyword\">from</span> dba_data_files ds,dba_free_space fs <span class=\"keyword\">where</span> ds.tablespace_name<span class=\"operator\">=</span>fs.tablespace_name <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> ds.tablespace_name;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7、视图\"><a href=\"#7、视图\" class=\"headerlink\" title=\"7、视图\"></a>7、视图</h2><p>概念：视图是一种数据库对象，是从一个或者多个数据表或视图中导出的虚表，视图所对应的数据并不真正地存储在视图中，而是存储在所引用的数据表中，视图的结构和数据是对数据表进行查询的结果。</p>\n<p>优点：</p>\n<ul>\n<li>简化数据操作：视图可以简化用户处理数据的方式。</li>\n<li>着重于特定数据：不必要的数据或敏感数据可以不出现在视图中。</li>\n<li>视图提供了一个简单而有效的安全机制，可以定制不同用户对数据的访问权限。</li>\n<li>提供向后兼容性：视图使用户能够在表的架构更改时为表创建向后兼容接口。</li>\n</ul>\n<h4 id=\"创建和修改视图\"><a href=\"#创建和修改视图\" class=\"headerlink\" title=\"创建和修改视图\"></a>创建和修改视图</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> [<span class=\"keyword\">or</span> replace] [force] <span class=\"keyword\">view</span> view_name</span><br><span class=\"line\"><span class=\"keyword\">as</span> subquery</span><br><span class=\"line\">[<span class=\"keyword\">with</span> <span class=\"keyword\">check</span> option]</span><br><span class=\"line\">[<span class=\"keyword\">with</span> read <span class=\"keyword\">only</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"keyword\">or</span> replace]:若已经存在该视图，oracle自动重构该视图</span><br><span class=\"line\">[force]:不管基表是否存在，oracle都会自动创建该视图</span><br><span class=\"line\">suquery:子查询</span><br><span class=\"line\">[<span class=\"keyword\">with</span> <span class=\"keyword\">check</span> option]:插入和修改的数据行必须满足定义视图的约束</span><br><span class=\"line\">[<span class=\"keyword\">with</span> read <span class=\"keyword\">only</span>]:该视图上不能进行任何 DML 操作。</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">view</span> dba_data_files_v1 <span class=\"keyword\">as</span> <span class=\"keyword\">select</span> file_name,tablespace_name, <span class=\"keyword\">from</span> dba_data_files;</span><br><span class=\"line\"><span class=\"keyword\">create</span> [<span class=\"keyword\">or</span> replace] <span class=\"keyword\">view</span> t_account_v1 <span class=\"keyword\">as</span> <span class=\"keyword\">select</span> id,ownerid,ownertypeid,areaid <span class=\"keyword\">from</span> t_account;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account_v1;</span><br><span class=\"line\">#简单视图，可以进行增删改查记录</span><br><span class=\"line\">#<span class=\"keyword\">update</span> view_name <span class=\"keyword\">set</span> <span class=\"keyword\">column</span><span class=\"operator\">=</span>新值 <span class=\"keyword\">where</span> 条件</span><br><span class=\"line\"><span class=\"keyword\">update</span> t_account_v1 <span class=\"keyword\">set</span> areaid<span class=\"operator\">=</span><span class=\"number\">1002</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account_v1;</span><br></pre></td></tr></table></figure>\n\n<p>视图其实是一个虚拟的表，它的数据其实来自于表。如果更改了视图的数据，表的数据也自然会变化，更改了<br>表的数据，视图也自然会变化。</p>\n<h4 id=\"删除视图\"><a href=\"#删除视图\" class=\"headerlink\" title=\"删除视图\"></a>删除视图</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">view</span> view_name;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"带检查约束的视图\"><a href=\"#带检查约束的视图\" class=\"headerlink\" title=\"带检查约束的视图\"></a>带检查约束的视图</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">view</span> t_account_v2 </span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> id,ownerid,ownertypeid,areaid <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> areaid<span class=\"operator\">=</span><span class=\"number\">1001</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"keyword\">check</span> option;</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"keyword\">update</span> t_account_v2 <span class=\"keyword\">set</span> areaid<span class=\"operator\">=</span><span class=\"number\">1002</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">#会报错<span class=\"keyword\">view</span> <span class=\"keyword\">WITH</span> <span class=\"keyword\">CHECK</span> OPTION <span class=\"keyword\">where</span><span class=\"operator\">-</span>clause violation</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"只读视图的创建与使用\"><a href=\"#只读视图的创建与使用\" class=\"headerlink\" title=\"只读视图的创建与使用\"></a>只读视图的创建与使用</h4><p>指定 WITH READ ONLY 选项，这样创建的视图就是一个只读视图</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">view</span> t_account_v2</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> id,ownerid,ownertypeid,areaid <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> areaid<span class=\"operator\">=</span><span class=\"number\">1001</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> read <span class=\"keyword\">only</span>;</span><br><span class=\"line\"><span class=\"keyword\">update</span> t_account_v2 <span class=\"keyword\">set</span> areaid<span class=\"operator\">=</span><span class=\"number\">1002</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">#修改只读视图出现：cannot perform a DML operation <span class=\"keyword\">on</span> a read<span class=\"operator\">-</span><span class=\"keyword\">only</span> <span class=\"keyword\">view</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建不存在基表的视图\"><a href=\"#创建不存在基表的视图\" class=\"headerlink\" title=\"创建不存在基表的视图\"></a>创建不存在基表的视图</h4><p>有的时候，创建视图时的表可能并不存在，但是以后可能会存在，此时需要创建这样的视图，需要添加 FORCE 选项</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace force <span class=\"keyword\">view</span> t_temp_vi </span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_temp;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查询所有的视图\"><a href=\"#查询所有的视图\" class=\"headerlink\" title=\"查询所有的视图\"></a>查询所有的视图</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> user_views;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"复杂视图的创建与使用\"><a href=\"#复杂视图的创建与使用\" class=\"headerlink\" title=\"复杂视图的创建与使用\"></a>复杂视图的创建与使用</h4><p>复杂视图，就是视图的 SQL 语句中，有聚合函数或多表关联查询。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"number\">1</span>、多表关联查询的视图</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace force <span class=\"keyword\">view</span> twn_tt_v1</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,tt.name <span class=\"keyword\">as</span> ownertypename <span class=\"keyword\">from</span> t_owners twn,t_ownertype tt <span class=\"keyword\">where</span> twn.ownertypeid<span class=\"operator\">=</span>tt.id(<span class=\"operator\">+</span>)</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"keyword\">check</span> option;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> twn_tt_v1;</span><br><span class=\"line\"><span class=\"keyword\">update</span> twn_tt_v1 <span class=\"keyword\">set</span> name<span class=\"operator\">=</span><span class=\"string\">&#x27;suhe&#x27;</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1002</span>;</span><br><span class=\"line\">#可以修改主表的数据不可以修改关联表的数据</span><br><span class=\"line\">#<span class=\"number\">2</span>、分组聚合统计查询的视图</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account;</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace force <span class=\"keyword\">view</span> month_per_num_2023</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">year</span>,<span class=\"keyword\">month</span>,<span class=\"built_in\">sum</span>(usenum) sumuse <span class=\"keyword\">from</span> t_account <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> <span class=\"keyword\">year</span>,<span class=\"keyword\">month</span> <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> <span class=\"keyword\">year</span>,<span class=\"keyword\">month</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> month_per_num_2023;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"物化视图\"><a href=\"#物化视图\" class=\"headerlink\" title=\"物化视图\"></a>物化视图</h4><p>​\t视图是一个虚拟表（也可以认为是一条语句），基于它创建时指定的查询语句返回的结果集。每次访问它都会导致这个查询语句被执行一次。为了避免每次访问都执行这个查询，可以将这个查询结果集存储到一个物化视图（也叫实体化视图）。物化视图与普通的视图相比的区别是物化视图是建立的副本，它类似于一张表，需要占用存储空间。而对一个物化视图查询的执行效率与查询一个表是一样的。</p>\n<ul>\n<li>创建物化视图语法</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> meterialized <span class=\"keyword\">view</span> view_name</span><br><span class=\"line\">[build immediate <span class=\"operator\">|</span> build deferred]</span><br><span class=\"line\">refresh [fast <span class=\"operator\">|</span> complete <span class=\"operator\">|</span> force]</span><br><span class=\"line\">[</span><br><span class=\"line\"> <span class=\"keyword\">on</span> [<span class=\"keyword\">commit</span> <span class=\"operator\">|</span> demand]    <span class=\"operator\">|</span> <span class=\"keyword\">start</span> <span class=\"keyword\">with</span> (start_time) next (next_time)</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\">subquery</span><br><span class=\"line\"></span><br><span class=\"line\">build immediate:是在创建物化视图的时候就生成数据。</span><br><span class=\"line\">build dererred:则在创建时不生成数据，以后根据需要再生成数据。默认为 build immediate。</span><br><span class=\"line\">refresh:指当基表发生了 DML 操作后，物化视图何时采用哪种方式和基表进行同步。[fast <span class=\"operator\">|</span> complete<span class=\"operator\">|</span>force] fast采用增量刷新，只刷新自上次刷新以后进行的修改。complete刷新对整个物化视图进行完全的刷新。force方式，则 Oracle 在刷新时会去判断是否可以进行快速刷新，如果可以则采用 fast 方式，否则采用 complete的方式，force 是默认的方式。</span><br><span class=\"line\">刷新模式：<span class=\"keyword\">on</span> <span class=\"keyword\">commit</span>和<span class=\"keyword\">on</span> demand两种， <span class=\"keyword\">on</span> demand指需要手动刷新物化视图（默认）。<span class=\"keyword\">on</span> <span class=\"keyword\">commit</span>指在基表发生<span class=\"keyword\">commit</span>操作时自动刷新.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建手动刷新的物化视图</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> meterialized <span class=\"keyword\">view</span> mv_v1</span><br><span class=\"line\">[build immediate</span><br><span class=\"line\">refresh force <span class=\"keyword\">on</span> demand]</span><br><span class=\"line\"><span class=\"keyword\">as</span> </span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,ta.name <span class=\"keyword\">as</span> addressname <span class=\"keyword\">from</span> t_owners twn,t_address ta <span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id(<span class=\"operator\">+</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners <span class=\"keyword\">VALUES</span> (<span class=\"number\">1004</span>,<span class=\"string\">&#x27;lili&#x27;</span>,<span class=\"number\">1003</span>,<span class=\"string\">&#x27;6-1&#x27;</span>,<span class=\"string\">&#x27;7895&#x27;</span>,sysdate,<span class=\"number\">1002</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> mv_v2;</span><br><span class=\"line\">#物化视图中没有新插入的数据。</span><br><span class=\"line\">#PL<span class=\"operator\">/</span><span class=\"keyword\">SQL</span>执行</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">DBMS_MVIEW.refresh(<span class=\"string\">&#x27;mv_v2&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\">#或者在命令行执行</span><br><span class=\"line\"><span class=\"keyword\">EXEC</span> DBMS_MVIEW.refresh(<span class=\"string\">&#x27;mv_v2&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>);</span><br><span class=\"line\">#DBMS_MVIEW.refresh 实际上是系统内置的存储过程</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建自动刷新的物化视图</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> materialized <span class=\"keyword\">view</span> mv_v3</span><br><span class=\"line\">build immediate</span><br><span class=\"line\">refresh force</span><br><span class=\"line\"><span class=\"keyword\">on</span> <span class=\"keyword\">commit</span></span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,ta.name <span class=\"keyword\">as</span> addressname <span class=\"keyword\">from</span> t_owners twn,t_address ta <span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id(<span class=\"operator\">+</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners <span class=\"keyword\">VALUES</span> (<span class=\"number\">1005</span>,<span class=\"string\">&#x27;longlong&#x27;</span>,<span class=\"number\">1002</span>,<span class=\"string\">&#x27;6-2&#x27;</span>,<span class=\"string\">&#x27;1234&#x27;</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> mv_v3;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建时不生成数据的物化视图</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> materailized <span class=\"keyword\">view</span> mv_v4</span><br><span class=\"line\">build deferred</span><br><span class=\"line\">refresh force <span class=\"keyword\">on</span> <span class=\"keyword\">commit</span></span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,ta.name <span class=\"keyword\">as</span> addressname <span class=\"keyword\">from</span> t_owners twn,t_address ta <span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id(<span class=\"operator\">+</span>);</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> mv_v4;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">DBMS_MVIEW.refresh(<span class=\"string\">&#x27;mv_v4&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners <span class=\"keyword\">VALUES</span> (<span class=\"number\">1006</span>,<span class=\"string\">&#x27;chuan&#x27;</span>,<span class=\"number\">1001</span>,<span class=\"string\">&#x27;7-2&#x27;</span>,<span class=\"string\">&#x27;7534&#x27;</span>,sysdate,<span class=\"number\">1003</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> mv_v4;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>删除物化视图</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drop materialized view view_name;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建增量刷新的物化视图</li>\n</ul>\n<p>如果创建增量刷新的物化视图，必须首先创建物化视图日志</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#创建物化视图日志</span><br><span class=\"line\"><span class=\"keyword\">create</span> materialized <span class=\"keyword\">view</span> log <span class=\"keyword\">on</span> t_owners <span class=\"keyword\">with</span> rowid;</span><br><span class=\"line\"><span class=\"keyword\">create</span> materialized <span class=\"keyword\">view</span> log <span class=\"keyword\">on</span> t_address <span class=\"keyword\">with</span> rowid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> materialized <span class=\"keyword\">view</span> mv_v5</span><br><span class=\"line\">build immediate</span><br><span class=\"line\">refresh fast</span><br><span class=\"line\"><span class=\"keyword\">on</span> <span class=\"keyword\">commit</span></span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,twn.rowid <span class=\"keyword\">as</span> twnrowid,ta.rowid <span class=\"keyword\">as</span> tarowid,ta.name <span class=\"keyword\">as</span> addressname <span class=\"keyword\">from</span> t_owners twn,t_address ta <span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id(<span class=\"operator\">+</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners <span class=\"keyword\">VALUES</span> (<span class=\"number\">1007</span>,<span class=\"string\">&#x27;su&#x27;</span>,<span class=\"number\">1002</span>,<span class=\"string\">&#x27;8-2&#x27;</span>,<span class=\"string\">&#x27;3455&#x27;</span>,sysdate,<span class=\"number\">1002</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\">#创建增量刷新的物化视图，必须：</span><br><span class=\"line\">#<span class=\"number\">1</span>、创建物化视图中涉及表的物化视图日志。</span><br><span class=\"line\">#<span class=\"number\">2</span>、在查询语句中，必须包含所有表的rowid(以rowid方式建立物化视图日志)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8、序列\"><a href=\"#8、序列\" class=\"headerlink\" title=\"8、序列\"></a>8、序列</h2><p>序列是 ORACLE 提供的用于产生一系列唯一数字的数据库对象。</p>\n<h4 id=\"创建序列语法\"><a href=\"#创建序列语法\" class=\"headerlink\" title=\"创建序列语法\"></a>创建序列语法</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> sequence sequence_name;</span><br></pre></td></tr></table></figure>\n\n<p>通过序列的伪列来访问序列的值,NEXTVAL 返回序列的下一个值,CURRVAL 返回序列的当前值</p>\n<blockquote>\n<p>注意：我们在刚建立序列后，无法提取当前值，只有先提取下一个值时才能再次提取当前值。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> sequence sequence_one;</span><br><span class=\"line\"><span class=\"keyword\">select</span> sequence_one.nextval <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> sequence_one.currval <span class=\"keyword\">from</span> dual;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建复杂序列\"><a href=\"#创建复杂序列\" class=\"headerlink\" title=\"创建复杂序列\"></a>创建复杂序列</h4><ul>\n<li>语法：</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> sequence sequence_one</span><br><span class=\"line\">[increment <span class=\"keyword\">by</span> n] #递增的序列值是n 如果n是正数就递增,如果是负数就递减 默认是<span class=\"number\">1</span></span><br><span class=\"line\">[<span class=\"keyword\">start</span> <span class=\"keyword\">with</span> n] #开始的值,递增默认是 minvalue 递减是 maxvalue</span><br><span class=\"line\">[&#123;maxvalue n<span class=\"operator\">|</span>nomaxvalue&#125;] #最大值</span><br><span class=\"line\">[&#123;minvalue n<span class=\"operator\">|</span>nominvalue&#125;]#最小值</span><br><span class=\"line\">[&#123;<span class=\"keyword\">cycle</span> <span class=\"operator\">|</span> nocycle&#125;] #循环</span><br><span class=\"line\">[&#123;cache n <span class=\"operator\">|</span> nocache&#125;] #分配并存入到内存中</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建有最大值的非循环序列</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> sequence seq_1</span><br><span class=\"line\">increment <span class=\"keyword\">by</span> <span class=\"number\">20</span></span><br><span class=\"line\">maxvalue <span class=\"number\">100</span></span><br><span class=\"line\">minvalue <span class=\"number\">20</span></span><br><span class=\"line\">nocycle;</span><br><span class=\"line\"><span class=\"keyword\">select</span> seq_1.nextval <span class=\"keyword\">from</span> dual;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>有最大值的循环序列</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> sequence seq_2</span><br><span class=\"line\">increment <span class=\"keyword\">by</span> <span class=\"number\">20</span></span><br><span class=\"line\">maxvalue <span class=\"number\">100</span></span><br><span class=\"line\">minvalue <span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"keyword\">cycle</span></span><br><span class=\"line\">cache <span class=\"number\">4</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意：CACHE &lt;&#x3D; CEIL((MAXVALUE - MINVALUE) &#x2F; ABS(INCREMENT))<br>例如：cache &lt;&#x3D;ceil(100-20)&#x2F;abs(20)</p>\n</blockquote>\n<h4 id=\"修改和删除序列\"><a href=\"#修改和删除序列\" class=\"headerlink\" title=\"修改和删除序列\"></a>修改和删除序列</h4><p>修改序列：使用 ALTER SEQUENCE 语句修改序列，不能更改序列的 STARTWITH 参数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> SEQUENCE 序列名称 MAXVALUE <span class=\"number\">5000</span> <span class=\"keyword\">CYCLE</span>;</span><br><span class=\"line\"><span class=\"keyword\">alter</span> sequence seq_1 maxvalue <span class=\"number\">300</span> <span class=\"keyword\">cycle</span> cache <span class=\"number\">14</span>;</span><br></pre></td></tr></table></figure>\n\n<p>删除序列</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> SEQUENCE 序列名称;</span><br><span class=\"line\"><span class=\"keyword\">drop</span> sequence seq_1;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"9、同义词\"><a href=\"#9、同义词\" class=\"headerlink\" title=\"9、同义词\"></a>9、同义词</h2><p>​\t同义词实质上是指定方案对象的一个别名。通过屏蔽对象的名称和所有者以及对分布式数据库的远程对象提供位置透明性，同义词可以提供一定程度的安全性。同时，同义词的易用性较好，降低了数据库用户的 SQL 语句复杂度。</p>\n<p>​\t同义词允许基对象重命名或者移动，这时，只需对同义词进行重定义，基于同义词的应用程序可以继续运行而无需修改。</p>\n<p>​\t同义词本身不涉及安全，当你赋予一个同义词对象权限时，你实质上是在给同义词的基对象赋予权限，同义词只是基对象的一个别名。</p>\n<h4 id=\"创建与使用同义词\"><a href=\"#创建与使用同义词\" class=\"headerlink\" title=\"创建与使用同义词\"></a>创建与使用同义词</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> [public] SYNONYM synonym <span class=\"keyword\">for</span> object</span><br><span class=\"line\">synonym:创建的同义词的名称</span><br><span class=\"line\">object:表示表，视图，序列等我们要创建同义词的对象的名称.创建共有的同义词，以另外的用户登陆，也可以使用公有同义词</span><br><span class=\"line\"><span class=\"keyword\">create</span> public SYNONYM twn <span class=\"keyword\">for</span> t_owners;</span><br><span class=\"line\">创建私有的同义词</span><br><span class=\"line\"><span class=\"keyword\">create</span> SYNONYM twn1 <span class=\"keyword\">for</span> t_owners;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10、索引\"><a href=\"#10、索引\" class=\"headerlink\" title=\"10、索引\"></a>10、索引</h2><p>索引是用于加速数据存取的数据对象。合理的使用索引可以大大降低 i&#x2F;o 次数,从而提高数据访问性能。</p>\n<p>索引是需要占据存储空间的，也可以理解为是一种特殊的数据。形式类似于下图的一棵“树”，而树的节点存储的就是每条记录的物理地址，也就是我们提到的伪列（ROWID）</p>\n<h4 id=\"普通索引\"><a href=\"#普通索引\" class=\"headerlink\" title=\"普通索引\"></a>普通索引</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> index index_name <span class=\"keyword\">on</span> table_name(column_name);#根据某张表的某列来创建索引。</span><br><span class=\"line\"><span class=\"keyword\">create</span> index t_owners_name <span class=\"keyword\">on</span> t_owners(name);</span><br><span class=\"line\"></span><br><span class=\"line\">#索引性能测试</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> T_INDEXTEST (</span><br><span class=\"line\">ID NUMBER,</span><br><span class=\"line\">NAME VARCHAR2(<span class=\"number\">30</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">BEGIN</span></span><br><span class=\"line\"><span class=\"keyword\">FOR</span> i <span class=\"keyword\">in</span> <span class=\"number\">1.</span><span class=\"number\">.1000000</span></span><br><span class=\"line\">loop</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> T_INDEXTEST <span class=\"keyword\">VALUES</span>(i,<span class=\"string\">&#x27;AA&#x27;</span><span class=\"operator\">||</span>i);</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">END</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> index t_indextest_name <span class=\"keyword\">on</span> t_indextest(name);</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_indextest <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">765432</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_indextest <span class=\"keyword\">where</span> name<span class=\"operator\">=</span><span class=\"string\">&#x27;AA765432&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"唯一索引\"><a href=\"#唯一索引\" class=\"headerlink\" title=\"唯一索引\"></a>唯一索引</h4><p>如果我们需要在某个表某个列创建索引，而这列的值是不会重复的。这是我们可以创建唯一索引。</p>\n<p>语法</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">unique</span> index index_name <span class=\"keyword\">on</span> table_name(column_name);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"复合索引\"><a href=\"#复合索引\" class=\"headerlink\" title=\"复合索引\"></a>复合索引</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> index index_name <span class=\"keyword\">on</span> table_name(column_name,column_name);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"反向键索引\"><a href=\"#反向键索引\" class=\"headerlink\" title=\"反向键索引\"></a>反向键索引</h4><p>​\t应用场景：当某个字段的值为连续增长的值，如果构建标准索引，会形成歪脖子树。这样会增加查询的层数，性能会下降。建立反向键索引，可以使索引的值变得不规则，从而使索引树能够均匀分布。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> index 索引名称 <span class=\"keyword\">on</span> 表名(列名) reverse;</span><br><span class=\"line\"><span class=\"keyword\">create</span> index t_indextest_name_reverse <span class=\"keyword\">on</span> t_indextest(id) reverse;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"位图索引\"><a href=\"#位图索引\" class=\"headerlink\" title=\"位图索引\"></a>位图索引</h4><ul>\n<li>使用场景：位图索引适合创建在低基数列上</li>\n<li>位图索引不直接存储 ROWID，而是存储字节位到 ROWID 的映射</li>\n<li>优点：减少响应时间，节省空间占用</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> bitmap index index_name table_name(column_name);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"11、PL-SQL\"><a href=\"#11、PL-SQL\" class=\"headerlink\" title=\"11、PL&#x2F;SQL\"></a>11、PL&#x2F;SQL</h2><p>PL&#x2F;SQL（Procedure Language&#x2F;SQL）是 Oracle 对 sql 语言的过程化扩展，指在 SQL 命令语言中增加了过程处理语句（如分支、循环等），使 SQL 语言具有过程处理能力。把 SQL 语言的数据操纵能力与过程语言的数据处理能力结合起来，使得 PLSQL 面向过程但比过程语言简单、高效、灵活和实用。</p>\n<h4 id=\"基本语法结构\"><a href=\"#基本语法结构\" class=\"headerlink\" title=\"基本语法结构\"></a>基本语法结构</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"keyword\">declare</span>  <span class=\"comment\">--声明变量]</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">逻辑代码</span><br><span class=\"line\">[exception <span class=\"comment\">--异常处理]</span></span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">声明变量的语法</span><br><span class=\"line\">变量名 类型(长度)</span><br><span class=\"line\">变量赋值语法</span><br><span class=\"line\">变量名:<span class=\"operator\">=</span>变量值</span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_usenum number;</span><br><span class=\"line\">v_usenum2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_price:<span class=\"operator\">=</span><span class=\"number\">2.45</span>;</span><br><span class=\"line\">v_usenum:<span class=\"operator\">=</span><span class=\"number\">8012</span>;</span><br><span class=\"line\">v_usenum2:<span class=\"operator\">=</span>round(v_usenum<span class=\"operator\">/</span><span class=\"number\">1000</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>round(v_price<span class=\"operator\">*</span>v_usenum2,<span class=\"number\">2</span>);</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;单价：&#x27;</span><span class=\"operator\">||</span>v_price<span class=\"operator\">||</span><span class=\"string\">&#x27;吨数:&#x27;</span><span class=\"operator\">||</span>v_usenum2<span class=\"operator\">||</span><span class=\"string\">&#x27;金额：&#x27;</span><span class=\"operator\">||</span>v_money);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>select into方式赋值</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> 列名 <span class=\"keyword\">into</span> 变量名 <span class=\"keyword\">from</span> 表名 <span class=\"keyword\">where</span> 条件;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意：结果必须是一条记录 ，有多条记录和没有记录都会报错</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> usenum,num0,num1 <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"number\">2023</span> <span class=\"keyword\">and</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_usenum number;</span><br><span class=\"line\">v_usenum2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_num0 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_num1 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_price:<span class=\"operator\">=</span><span class=\"number\">2.45</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> usenum,num0,num1 <span class=\"keyword\">into</span> v_usenum,v_num0,v_num1 <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"number\">2023</span> <span class=\"keyword\">and</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">v_usenum2:<span class=\"operator\">=</span>round(v_usenum<span class=\"operator\">/</span><span class=\"number\">1000</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>round(v_price<span class=\"operator\">*</span>v_usenum2,<span class=\"number\">2</span>);</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;单价：&#x27;</span><span class=\"operator\">||</span>v_price<span class=\"operator\">||</span><span class=\"string\">&#x27;吨数：&#x27;</span><span class=\"operator\">||</span>v_usenum2<span class=\"operator\">||</span><span class=\"string\">&#x27;金额：&#x27;</span><span class=\"operator\">||</span>v_money<span class=\"operator\">||</span><span class=\"string\">&#x27;上月字数：&#x27;</span><span class=\"operator\">||</span>v_num0<span class=\"operator\">||</span><span class=\"string\">&#x27;本月字数&#x27;</span><span class=\"operator\">||</span>v_num1);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"属性类型\"><a href=\"#属性类型\" class=\"headerlink\" title=\"属性类型\"></a>属性类型</h4><p>%TYPE 引用型  作用：引用某表某列的字段类型</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_usenum t_account.usenum<span class=\"operator\">%</span>TYPE;</span><br><span class=\"line\">v_num0 t_account.num0<span class=\"operator\">%</span>TYPE;</span><br><span class=\"line\">v_num1 t_account.num1<span class=\"operator\">%</span>TYPE;</span><br><span class=\"line\">v_usenum2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_price:<span class=\"operator\">=</span><span class=\"number\">2.55</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> usenum,num0,num1 <span class=\"keyword\">into</span> v_usenum,v_num0,v_num1 <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"number\">2023</span> <span class=\"keyword\">and</span> id<span class=\"operator\">=</span><span class=\"number\">3</span>;</span><br><span class=\"line\">v_usenum2:<span class=\"operator\">=</span>round(v_usenum<span class=\"operator\">/</span><span class=\"number\">1000</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>v_price<span class=\"operator\">*</span>v_usenum2;</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;单价：&#x27;</span><span class=\"operator\">||</span>v_price<span class=\"operator\">||</span><span class=\"string\">&#x27;吨数：&#x27;</span><span class=\"operator\">||</span>v_usenum2<span class=\"operator\">||</span><span class=\"string\">&#x27;金额：&#x27;</span><span class=\"operator\">||</span>v_money<span class=\"operator\">||</span><span class=\"string\">&#x27;上月字数：&#x27;</span><span class=\"operator\">||</span>v_num0<span class=\"operator\">||</span><span class=\"string\">&#x27;本月字数&#x27;</span><span class=\"operator\">||</span>v_num1);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>%ROWTYPE 记录型 ，上例中的例子可以用下面的代码代替作用: 标识某个表的行记录类型</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_account t_account<span class=\"operator\">%</span>ROWTYPE;</span><br><span class=\"line\">v_usenum2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_price:<span class=\"operator\">=</span><span class=\"number\">3.14</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">into</span> v_account <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"number\">2023</span> <span class=\"keyword\">and</span> id<span class=\"operator\">=</span><span class=\"number\">3</span>;</span><br><span class=\"line\">v_usenum2:<span class=\"operator\">=</span>round(v_account.usenum<span class=\"operator\">/</span><span class=\"number\">1000</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>v_price<span class=\"operator\">*</span>v_usenum2;</span><br><span class=\"line\">DBMS_OUTPUT.put_line(<span class=\"string\">&#x27;单价：&#x27;</span><span class=\"operator\">||</span>v_price<span class=\"operator\">||</span><span class=\"string\">&#x27;吨数：&#x27;</span><span class=\"operator\">||</span>v_usenum2<span class=\"operator\">||</span><span class=\"string\">&#x27;金额：&#x27;</span><span class=\"operator\">||</span>v_money<span class=\"operator\">||</span><span class=\"string\">&#x27;上月字数：&#x27;</span><span class=\"operator\">||</span>v_account.num0<span class=\"operator\">||</span><span class=\"string\">&#x27;本月字数&#x27;</span><span class=\"operator\">||</span>v_account.num1);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h4><p>在运行程序时出现的错误叫做异常，发生异常后，语句将停止执行，控制权转移到 PL&#x2F;SQL 块的异常处理部分</p>\n<p>异常有两种类型：</p>\n<ul>\n<li>预定义异常 - 当 PL&#x2F;SQL 程序违反 Oracle 规则或超越系统限制时隐式引发。</li>\n<li>用户定义异常 - 用户可以在 PL&#x2F;SQL 块的声明部分定义异常，自定义的异常通过 RAISE 语句显式引发。</li>\n</ul>\n<p>oracle预定义的异常21个</p>\n<table>\n<thead>\n<tr>\n<th>系统异常</th>\n<th>产生原因</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACCESS_INTO_NULL</td>\n<td>未定义对象</td>\n</tr>\n<tr>\n<td>CASE_NOT_FOUND</td>\n<td>CASE 中若未包含相应的 WHEN ，并且没有设置 ELSE 时</td>\n</tr>\n<tr>\n<td>COLLECTION_IS_NULL</td>\n<td>集合元素未初始化</td>\n</tr>\n<tr>\n<td>CURSER_ALREADY_OPEN</td>\n<td>游标已经打开</td>\n</tr>\n<tr>\n<td>DUP_VAL_ON_INDEX</td>\n<td>唯一索引对应的列上有重复值</td>\n</tr>\n<tr>\n<td>INVALID_CURSOR</td>\n<td>在不合法的游标上进行操作</td>\n</tr>\n<tr>\n<td>INVALID_NUMBER</td>\n<td>内置的SQL语句不能将字符转化为数字</td>\n</tr>\n<tr>\n<td><em><strong>NO_DATA_FOUND</strong></em></td>\n<td><em><strong>使用select into 没有行返回行</strong></em></td>\n</tr>\n<tr>\n<td><em><strong>TOO_MANY_ROWS</strong></em></td>\n<td><em><strong>使用select into 有多行数据返回</strong></em></td>\n</tr>\n<tr>\n<td>ZERO_DIVIDE</td>\n<td>除数为0</td>\n</tr>\n<tr>\n<td>SUBSCRIPT_BEYOND_COUNT</td>\n<td>元素下标超过嵌套表或 VARRAY 的最大值</td>\n</tr>\n<tr>\n<td>SUBSCRIPT_OUTSIDE_LIMIT</td>\n<td>使用嵌套表或 VARRAY 时，将下标指定为负数</td>\n</tr>\n<tr>\n<td>VALUE_ERROR</td>\n<td>赋值时，变量长度不足以容纳实际数据</td>\n</tr>\n<tr>\n<td>LOGIN_DENIED</td>\n<td>PL&#x2F;SQL 应用程序连接到 oracle 数据库时，提供了不正确的用户名或密码</td>\n</tr>\n<tr>\n<td>NOT_LOGGED_ON</td>\n<td>PL&#x2F;SQL 应用程序在没有连接 oralce 数据库的情况下访问数据</td>\n</tr>\n<tr>\n<td>PROGRAM_ERROR</td>\n<td>PL&#x2F;SQL 内部问题，可能需要重装数据字典＆ PL&#x2F;SQL 系统包</td>\n</tr>\n<tr>\n<td>ROWTYPE_MISMATCH</td>\n<td>宿主游标变量与 PL&#x2F;SQL 游标变量的返回类型不兼容</td>\n</tr>\n<tr>\n<td>SELF_IS_NULL</td>\n<td>使用对象类型时，在 NULL对象上调用对象方法</td>\n</tr>\n<tr>\n<td>STORAGE_ERROR</td>\n<td>运行 PL&#x2F;SQL 时，超出内存空间</td>\n</tr>\n<tr>\n<td>SYS_INVALID_ID</td>\n<td>无效的 ROWID 字符串</td>\n</tr>\n<tr>\n<td>TIMEOUT_ON_RESOURCE</td>\n<td>Oracle 在等待资源时超时</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<p>语法结构：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exception</span><br><span class=\"line\"><span class=\"keyword\">when</span> 异常类型 <span class=\"keyword\">then</span></span><br><span class=\"line\">异常处理逻辑</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_usenum t_account.usenum<span class=\"operator\">%</span>TYPE;</span><br><span class=\"line\">v_usenum2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_price:<span class=\"operator\">=</span><span class=\"number\">3.55</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> usenum <span class=\"keyword\">into</span> v_usenum <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"number\">2023</span> <span class=\"keyword\">and</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">v_usenum2:<span class=\"operator\">=</span>round(v_usenum<span class=\"operator\">/</span><span class=\"number\">1000</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>v_price<span class=\"operator\">*</span>v_usenum2;</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;单价：&#x27;</span><span class=\"operator\">||</span>v_price<span class=\"operator\">||</span><span class=\"string\">&#x27;吨数:&#x27;</span><span class=\"operator\">||</span>v_usenum2<span class=\"operator\">||</span><span class=\"string\">&#x27;金额：&#x27;</span><span class=\"operator\">||</span>v_money);</span><br><span class=\"line\">exception</span><br><span class=\"line\"><span class=\"keyword\">when</span> NO_DATA_FOUND <span class=\"keyword\">then</span></span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;未找到数据，请核实&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">when</span> TOO_MANY_ROWS <span class=\"keyword\">then</span></span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;查询条件有误，返回多条信息，请核实&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"条件判断\"><a href=\"#条件判断\" class=\"headerlink\" title=\"条件判断\"></a>条件判断</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#基本语法<span class=\"number\">1</span></span><br><span class=\"line\">if 条件 <span class=\"keyword\">then</span></span><br><span class=\"line\"> 业务逻辑</span><br><span class=\"line\"><span class=\"keyword\">end</span> if;</span><br><span class=\"line\"></span><br><span class=\"line\">#基本语法<span class=\"number\">2</span></span><br><span class=\"line\">if 条件 <span class=\"keyword\">then</span></span><br><span class=\"line\">业务逻辑</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">业务逻辑</span><br><span class=\"line\"><span class=\"keyword\">end</span> if;</span><br><span class=\"line\"></span><br><span class=\"line\">#基本语法<span class=\"number\">3</span></span><br><span class=\"line\">if 条件 <span class=\"keyword\">then</span></span><br><span class=\"line\">业务逻辑</span><br><span class=\"line\">elseif 条件 <span class=\"keyword\">then</span></span><br><span class=\"line\">业务逻辑</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">业务逻辑</span><br><span class=\"line\"><span class=\"keyword\">end</span> if;</span><br></pre></td></tr></table></figure>\n\n<p>需求：设置三个等级的水费 5 吨以下 2.45 元&#x2F;吨 5 吨到 10 吨部分 3.45 元&#x2F;吨 ，超过 10 吨部分 4.45 ，根据使用水费的量来计算阶梯水费。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_price1 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_price2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_price3 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_account t_account<span class=\"operator\">%</span>ROWTYPE;</span><br><span class=\"line\">v_usenum2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">into</span> v_account <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"number\">2023</span> <span class=\"keyword\">and</span> id<span class=\"operator\">=</span><span class=\"number\">3</span>;</span><br><span class=\"line\">v_usenum2:<span class=\"operator\">=</span>round(v_account.usenum<span class=\"operator\">/</span><span class=\"number\">1000</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_price1:<span class=\"operator\">=</span><span class=\"number\">2.45</span>;</span><br><span class=\"line\">v_price2:<span class=\"operator\">=</span><span class=\"number\">3.45</span>;</span><br><span class=\"line\">v_price3:<span class=\"operator\">=</span><span class=\"number\">4.45</span>;</span><br><span class=\"line\">if v_usenum2<span class=\"operator\">&lt;</span><span class=\"number\">5</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>v_price1<span class=\"operator\">*</span>v_usenum2;</span><br><span class=\"line\">elsif <span class=\"number\">5</span><span class=\"operator\">&lt;</span>v_usenum2 <span class=\"keyword\">and</span> v_usenum2<span class=\"operator\">&lt;</span><span class=\"number\">10</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>v_price1<span class=\"operator\">*</span><span class=\"number\">5</span><span class=\"operator\">+</span>v_price2<span class=\"operator\">*</span>(v_usenum2<span class=\"number\">-5</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>v_price1<span class=\"operator\">*</span><span class=\"number\">5</span><span class=\"operator\">+</span>v_price2<span class=\"operator\">*</span><span class=\"number\">5</span><span class=\"operator\">+</span>v_price3<span class=\"operator\">*</span>(v_usenum2<span class=\"number\">-5</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span> if;</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;吨数：&#x27;</span><span class=\"operator\">||</span>v_usenum2<span class=\"operator\">||</span><span class=\"string\">&#x27;金额：&#x27;</span><span class=\"operator\">||</span>v_money<span class=\"operator\">||</span><span class=\"string\">&#x27;上月字数：&#x27;</span><span class=\"operator\">||</span>v_account.num0<span class=\"operator\">||</span><span class=\"string\">&#x27;本月字数&#x27;</span><span class=\"operator\">||</span>v_account.num1);</span><br><span class=\"line\">exception</span><br><span class=\"line\"><span class=\"keyword\">when</span> NO_DATA_FOUND <span class=\"keyword\">then</span></span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;未找到数据，请核实&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">when</span> TOO_MANY_ROWS <span class=\"keyword\">then</span></span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;有多行数据被查询&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h4><ol>\n<li>无条件循环</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">loop</span><br><span class=\"line\">循环语句</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"></span><br><span class=\"line\">#例子</span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_num number;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_num:<span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\">loop</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;v_num=&#x27;</span><span class=\"operator\">||</span>v_num);</span><br><span class=\"line\">v_num:<span class=\"operator\">=</span>v_num<span class=\"operator\">+</span><span class=\"number\">1</span>;</span><br><span class=\"line\">if v_num<span class=\"operator\">=</span><span class=\"number\">100</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">exit;</span><br><span class=\"line\"><span class=\"keyword\">end</span> if;</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">#循环部分可以改写成</span><br><span class=\"line\">loop</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;v_num=&#x27;</span><span class=\"operator\">||</span>v_num);</span><br><span class=\"line\">v_num:<span class=\"operator\">=</span>v_num<span class=\"operator\">+</span><span class=\"number\">1</span>;</span><br><span class=\"line\">exit <span class=\"keyword\">when</span> v_num<span class=\"operator\">&gt;</span><span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br></pre></td></tr></table></figure>\n\n<pre><code> 2.条件循环\n</code></pre>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while 条件</span><br><span class=\"line\">loop</span><br><span class=\"line\">循环体</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"></span><br><span class=\"line\">#范例：输出从<span class=\"number\">1</span>开始的<span class=\"number\">100</span>个数</span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_num number;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_num:<span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\">while v_num<span class=\"operator\">&lt;</span><span class=\"number\">101</span></span><br><span class=\"line\">loop</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;v_num=&#x27;</span><span class=\"operator\">||</span>v_num);</span><br><span class=\"line\">v_num:<span class=\"operator\">=</span>v_num<span class=\"operator\">+</span><span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>​\t3.for循环</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#基本语法</span><br><span class=\"line\"><span class=\"keyword\">for</span> 变量 <span class=\"keyword\">in</span> 起始值..终值</span><br><span class=\"line\">loop </span><br><span class=\"line\">循环体</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> v_num <span class=\"keyword\">in</span> <span class=\"number\">0.</span><span class=\"number\">.100</span></span><br><span class=\"line\">loop</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;v_num=&#x27;</span><span class=\"operator\">||</span>v_num);</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"游标\"><a href=\"#游标\" class=\"headerlink\" title=\"游标\"></a>游标</h4><p>游标是系统为用户开设的一个数据缓冲区,存放 SQL 语句的执行结果。我们可以把游标理解为 PL&#x2F;SQL 中的结果集。</p>\n<p>在声明区声明游标，语法如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cursor</span> 游标名称 <span class=\"keyword\">is</span> <span class=\"keyword\">SQL</span> 语句;</span><br></pre></td></tr></table></figure>\n\n<p>使用游标语法</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">open</span> 游标名称</span><br><span class=\"line\">loop</span><br><span class=\"line\">\t<span class=\"keyword\">fetch</span> 游标名称 <span class=\"keyword\">into</span> 变量;</span><br><span class=\"line\">\texit <span class=\"keyword\">when</span> 游标名称<span class=\"operator\">%</span>notfound;</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">close</span> 游标名称;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">curr_jylsh varchar2(<span class=\"number\">50</span>);</span><br><span class=\"line\"><span class=\"keyword\">cursor</span> lyjsh_cursor <span class=\"keyword\">is</span> <span class=\"keyword\">select</span> jylsh <span class=\"keyword\">from</span> jylsh_table;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">open</span> lyjsh_cursor;</span><br><span class=\"line\">\tloop</span><br><span class=\"line\">\t<span class=\"keyword\">fetch</span> lyjsh_cursor <span class=\"keyword\">into</span> curr_jylsh;</span><br><span class=\"line\">\texit <span class=\"keyword\">when</span> lyjsh_cursor<span class=\"operator\">%</span>notfound;</span><br><span class=\"line\">\t<span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_sbf_sb_cxjm_sbbc_fail <span class=\"keyword\">values</span>(curr_jylsh,sysdate,<span class=\"string\">&#x27;ljh&#x27;</span>,<span class=\"string\">&#x27;00&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">update</span> sbf_sb_cxjmhdxx <span class=\"keyword\">set</span> sjclzt<span class=\"operator\">=</span><span class=\"string\">&#x27;00&#x27;</span>,xgrq<span class=\"operator\">=</span>sysdate,xgr_dm<span class=\"operator\">=</span><span class=\"string\">&#x27;ljh&#x27;</span> <span class=\"keyword\">where</span> cxjmhd_id <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> lymx_id <span class=\"keyword\">from</span> sbf_sb_wyxx <span class=\"keyword\">where</span> jylsh<span class=\"operator\">=</span>curr_jylsh);</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> sbf_sb_cxjmwyxx e <span class=\"keyword\">where</span> e.jylsh<span class=\"operator\">=</span>curr_jylsh;</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> sbf_sb_cxjm_sbwyxx e <span class=\"keyword\">where</span> e.jylsh<span class=\"operator\">=</span>curr_jylsh;</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> sbf_sb_wyxx e <span class=\"keyword\">where</span> e.jylsh<span class=\"operator\">=</span>curr_jylsh;</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">update</span> sbf_sb </span><br><span class=\"line\">\t<span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">close</span> lyjsh_cursor;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n\n<p>需求：打印业主类型为 1 的价格表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> </span><br><span class=\"line\">v_pricetable t_pricetable<span class=\"operator\">%</span>ROWTYPE;</span><br><span class=\"line\"><span class=\"keyword\">cursor</span> cur_pricetable <span class=\"keyword\">is</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_pricetable <span class=\"keyword\">where</span> ownertypeid<span class=\"operator\">=</span><span class=\"number\">1001</span>;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">open</span> cur_pricetable;</span><br><span class=\"line\">\tloop</span><br><span class=\"line\">\t<span class=\"keyword\">fetch</span>  cur_pricetable <span class=\"keyword\">into</span> v_pricetable;</span><br><span class=\"line\">\texit <span class=\"keyword\">when</span> cur_pricetable<span class=\"operator\">%</span>notfound;</span><br><span class=\"line\">\tdbms_output.put_line( <span class=\"string\">&#x27;价格:&#x27;</span><span class=\"operator\">||</span>v_pricetable.price <span class=\"operator\">||</span><span class=\"string\">&#x27;吨位：&#x27;</span><span class=\"operator\">||</span>v_pricetable.minnum<span class=\"operator\">||</span><span class=\"string\">&#x27;-&#x27;</span><span class=\"operator\">||</span>v_pricetable.maxnum );</span><br><span class=\"line\">\t<span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">close</span> cur_pricetable;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>带参数的游标</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_pricetable t_pricetable<span class=\"operator\">%</span>ROWTYPE;</span><br><span class=\"line\"><span class=\"keyword\">cursor</span> cur_pricetable(v_ownertypeid number) <span class=\"keyword\">is</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_pricetable <span class=\"keyword\">where</span> ownertypeid<span class=\"operator\">=</span>v_ownertypeid;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">open</span> cur_pricetable(<span class=\"number\">1001</span>);</span><br><span class=\"line\">loop</span><br><span class=\"line\">\t<span class=\"keyword\">fetch</span> cur_pricetable <span class=\"keyword\">into</span> v_pricetable;</span><br><span class=\"line\">\texit <span class=\"keyword\">when</span> cur_pricetable<span class=\"operator\">%</span>notfound;</span><br><span class=\"line\">\tdbms_output.put_line(<span class=\"string\">&#x27;价格:&#x27;</span><span class=\"operator\">||</span>v_pricetable.price <span class=\"operator\">||</span><span class=\"string\">&#x27;吨位：&#x27;</span><span class=\"operator\">||</span>v_pricetable.minnum<span class=\"operator\">||</span><span class=\"string\">&#x27;-&#x27;</span><span class=\"operator\">||</span>v_pricetable.maxnum );</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;\t</span><br><span class=\"line\"><span class=\"keyword\">close</span> cur_pricetable;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>for 循环提取游标值</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\"><span class=\"keyword\">cursor</span> cur_pricetable(v_ownertypeid number) <span class=\"keyword\">is</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_pricetable <span class=\"keyword\">where</span> ownertypeid<span class=\"operator\">=</span>v_ownertypeid;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> cur_pricetable <span class=\"keyword\">in</span> cur_pricetable(<span class=\"number\">1001</span>)</span><br><span class=\"line\">loop</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;价格:&#x27;</span><span class=\"operator\">||</span>cur_pricetable.price <span class=\"operator\">||</span><span class=\"string\">&#x27;吨位：&#x27;</span><span class=\"operator\">||</span>cur_pricetable.minnum<span class=\"operator\">||</span><span class=\"string\">&#x27;-&#x27;</span><span class=\"operator\">||</span>cur_pricetable.maxnum );</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12、存储函数\"><a href=\"#12、存储函数\" class=\"headerlink\" title=\"12、存储函数\"></a>12、存储函数</h2><p>存储函数又称为自定义函数。可以接收一个或多个参数，返回一个结果。在函数中我们可以使用 PL&#x2F;SQL 进行逻辑的处理。</p>\n<h4 id=\"存储函数语法结构\"><a href=\"#存储函数语法结构\" class=\"headerlink\" title=\"存储函数语法结构\"></a>存储函数语法结构</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">function</span> 函数名称(参数名称 参数类型, 参数名称 参数类型, ...)</span><br><span class=\"line\"><span class=\"keyword\">return</span> 结果变量数据类型</span><br><span class=\"line\"><span class=\"keyword\">is</span> 变量声明部分;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">逻辑部分;</span><br><span class=\"line\"><span class=\"keyword\">RETURN</span> 结果变量;</span><br><span class=\"line\">[exception 异常处理部分]</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span>  <span class=\"keyword\">function</span> pingping(v_name varchar2,v_age number)</span><br><span class=\"line\"><span class=\"keyword\">return</span> varchar2</span><br><span class=\"line\"><span class=\"keyword\">is</span></span><br><span class=\"line\">v_result varchar2(<span class=\"number\">30</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_result:<span class=\"operator\">=</span><span class=\"string\">&#x27;姓名&#x27;</span><span class=\"operator\">||</span>v_name<span class=\"operator\">||</span><span class=\"string\">&#x27;-年龄&#x27;</span><span class=\"operator\">||</span>v_age;</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;==&#x27;</span><span class=\"operator\">||</span>v_result);</span><br><span class=\"line\"><span class=\"keyword\">return</span> v_result;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\">#调用</span><br><span class=\"line\"><span class=\"keyword\">select</span> pingping(<span class=\"string\">&#x27;suhe&#x27;</span>,<span class=\"number\">18</span>) <span class=\"keyword\">from</span> dual;</span><br></pre></td></tr></table></figure>\n\n<p>需求：查询业主 ID，业主名称，业主地址，业主地址使用刚才我们创建的函数来实现。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">function</span> ss(v_id number) <span class=\"keyword\">return</span> varchar2</span><br><span class=\"line\"><span class=\"keyword\">is</span></span><br><span class=\"line\">address_name varchar2(<span class=\"number\">100</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> name <span class=\"keyword\">into</span> address_name <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> id<span class=\"operator\">=</span>v_id;</span><br><span class=\"line\"><span class=\"keyword\">return</span> address_name;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> id,name,ss(addressid) <span class=\"keyword\">from</span> t_owners;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"13、存储过程\"><a href=\"#13、存储过程\" class=\"headerlink\" title=\"13、存储过程\"></a>13、存储过程</h2><h4 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h4><p>存储过程是被命名的 PL&#x2F;SQL 块，存储于数据库中，是数据库对象的一种。应用程序可以调用存储过程，执行相应的逻辑。</p>\n<p>存储过程与存储函数都可以封装一定的业务逻辑并返回结果，存在区别如下：<br>1、存储函数中有返回值，且必须返回；而存储过程没有返回值，可以通过传出参数返回多个值。<br>2、存储函数可以在 select 语句中直接使用，而存储过程不能。过程多数是被应用程序所调用。<br>3、存储函数一般都是封装一个查询结果，而存储过程一般都封装一段事务代码。</p>\n<h4 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">procedure</span> 存储过程名字(参数<span class=\"number\">1</span> 类型,参数<span class=\"number\">2</span> 类型)</span><br><span class=\"line\"><span class=\"keyword\">is</span><span class=\"operator\">|</span><span class=\"keyword\">as</span></span><br><span class=\"line\">变量申明;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">逻辑部分;</span><br><span class=\"line\">[exception 异常处理部分]</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>参数只指定类型，不指定长度</p>\n</blockquote>\n<p>过程参数的三种模式：IN 传入参数（默认）,OUT 传出参数 ，主要用于返回程序运行结果,IN OUT 传入传出参数</p>\n<h4 id=\"案例\"><a href=\"#案例\" class=\"headerlink\" title=\"案例\"></a>案例</h4><p>1、创建不带传出参数的存储过程：添加业主信息</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> sequence owner_sequence <span class=\"keyword\">start</span> <span class=\"keyword\">with</span> <span class=\"number\">1010</span>;</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">procedure</span> owners_add(v_name varchar2,v_addressid number,v_housenumber varchar2,v_watermeter varchar2,v_type varchar2)</span><br><span class=\"line\"><span class=\"keyword\">is</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners <span class=\"keyword\">values</span>(owner_sequence.nextval,v_name,v_addressid,v_housenumber,v_watermeter,sysdate,v_type);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">call</span> owners_add(<span class=\"string\">&#x27;赵伟&#x27;</span>,<span class=\"number\">1001</span>,<span class=\"string\">&#x27;999-3&#x27;</span>,<span class=\"string\">&#x27;132-7&#x27;</span>,<span class=\"number\">1002</span>);</span><br></pre></td></tr></table></figure>\n\n<p>2、创建带传出参数的存储过程</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">procedure</span> owners_add_with_out(v_name varchar2,v_addressid number,v_housenumber varchar2,v_watermeter varchar2,v_type varchar2,v_id <span class=\"keyword\">out</span> number)</span><br><span class=\"line\"><span class=\"keyword\">is</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> owner_sequence.nextval <span class=\"keyword\">into</span> v_id <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners <span class=\"keyword\">values</span>(v_id,v_name,v_addressid,v_housenumber,v_watermeter,sysdate,v_type);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">declare</span> </span><br><span class=\"line\">v_id number;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">owners_add_with_out(<span class=\"string\">&#x27;王旺旺&#x27;</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;922-3&#x27;</span>,<span class=\"string\">&#x27;133-7&#x27;</span>,<span class=\"number\">1</span>,v_id);</span><br><span class=\"line\">DBMS_OUTPUT.put_line(<span class=\"string\">&#x27;增加成功,ID:&#x27;</span><span class=\"operator\">||</span>v_id);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"14、触发器\"><a href=\"#14、触发器\" class=\"headerlink\" title=\"14、触发器\"></a>14、触发器</h2><h4 id=\"概念-1\"><a href=\"#概念-1\" class=\"headerlink\" title=\"概念\"></a>概念</h4><p>数据库触发器是一个与表相关联的、存储的 PL&#x2F;SQL 程序。每当一个特定的数据操作语句(Insert,update,delete)在指定的表上发出时，Oracle 自动地执行触发器中定义的语句序列。</p>\n<p>触发器可用于</p>\n<ul>\n<li>数据确认</li>\n<li>实施复杂的安全性检查</li>\n<li>做审计，跟踪表上所做的数据操作等</li>\n<li>数据的备份和同步</li>\n</ul>\n<p>触发器分类</p>\n<ul>\n<li>前置触发器（BEFORE）</li>\n<li>后置触发器（AFTER）</li>\n</ul>\n<h4 id=\"触发器语法\"><a href=\"#触发器语法\" class=\"headerlink\" title=\"触发器语法\"></a>触发器语法</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">trigger</span> 触发器名字</span><br><span class=\"line\">before<span class=\"operator\">|</span>after</span><br><span class=\"line\">[<span class=\"keyword\">delete</span>][[<span class=\"keyword\">or</span>] <span class=\"keyword\">insert</span>][[<span class=\"keyword\">or</span>]<span class=\"keyword\">update</span> [<span class=\"keyword\">of</span> 列名]]</span><br><span class=\"line\"><span class=\"keyword\">on</span> 表名</span><br><span class=\"line\">[<span class=\"keyword\">for</span> <span class=\"keyword\">each</span> <span class=\"type\">row</span> ] [<span class=\"keyword\">when</span> [条件]]</span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">变量申明;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">PLSQL块</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>作用是标注此触发器是行级触发器还是语句级触发器</p>\n</blockquote>\n<p>在触发器中触发语句与伪记录变量的值</p>\n<table>\n<thead>\n<tr>\n<th>触发语句</th>\n<th>:old</th>\n<th>:new</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>insert</td>\n<td>所有字段都是空的（null）</td>\n<td>将要插入的数据</td>\n</tr>\n<tr>\n<td>update</td>\n<td>更新以前该行的值</td>\n<td>更新后的值</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>删除以前该行的值</td>\n<td>所有字段都是空的（null）</td>\n</tr>\n</tbody></table>\n<h4 id=\"案例-1\"><a href=\"#案例-1\" class=\"headerlink\" title=\"案例\"></a>案例</h4><p>1、前置触发器</p>\n<p>需求：当用户输入本月累计表数后，自动计算出本月使用数 。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">trigger</span> tri_account_update</span><br><span class=\"line\">before</span><br><span class=\"line\"><span class=\"keyword\">update</span> <span class=\"keyword\">of</span> num1</span><br><span class=\"line\"><span class=\"keyword\">on</span> t_account</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">each</span> <span class=\"type\">row</span></span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">:new.usenum:<span class=\"operator\">=</span>:new.num1<span class=\"operator\">-</span>:new.num0;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_account(id number,ownerid number,ownertypeid number,areaid number,<span class=\"keyword\">year</span> <span class=\"type\">char</span>(<span class=\"number\">4</span>),<span class=\"keyword\">month</span> #<span class=\"type\">char</span>(<span class=\"number\">2</span>),num0 number,num1 number,usenum number,meteruserid number,meterdate <span class=\"type\">date</span>,money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),isfee #<span class=\"type\">char</span>(<span class=\"number\">1</span>),feedate <span class=\"type\">date</span>,feeuserid number);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">1</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">2023</span>,<span class=\"number\">06</span>,<span class=\"number\">43543</span>,<span class=\"number\">46456</span>,<span class=\"number\">3000</span>,<span class=\"number\">1001</span>,sysdate,<span class=\"number\">3232</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">update</span> t_account <span class=\"keyword\">set</span> num1<span class=\"operator\">=</span><span class=\"number\">100000</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>2、后置触发器</p>\n<p>需求：当用户修改了业主信息表的数据时记录修改前与修改后的值</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_owners_log</span><br><span class=\"line\">(</span><br><span class=\"line\">updatetime <span class=\"type\">date</span>,</span><br><span class=\"line\">ownerid number,</span><br><span class=\"line\">oldname varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">newname varchar2(<span class=\"number\">30</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">trigger</span> tri_insert_owner</span><br><span class=\"line\">after</span><br><span class=\"line\"><span class=\"keyword\">update</span> <span class=\"keyword\">of</span> name</span><br><span class=\"line\"><span class=\"keyword\">on</span> t_owners</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">each</span> <span class=\"type\">row</span></span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners_log <span class=\"keyword\">values</span>(sysdate,:old.id,:old.name,:new.name);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">update</span> t_owners <span class=\"keyword\">set</span> name<span class=\"operator\">=</span><span class=\"string\">&#x27;lililili&#x27;</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1004</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners_log;</span><br></pre></td></tr></table></figure>\n\n","cover_type":"img","excerpt":"","more":"<h2 id=\"PL-SQL-developer安装\"><a href=\"#PL-SQL-developer安装\" class=\"headerlink\" title=\"PL&#x2F;SQL developer安装\"></a>PL&#x2F;SQL developer安装</h2><p>1、安装PL&#x2F;SQL developer程序，安装目录不要出现中文。</p>\n<p>2、配置客户端路径：点击PL&#x2F;SQL developer界面的Configure-&gt;Preferences-&gt;oracle配置的connect属性配置。，和</p>\n<p>指定Oracle Home 路径：D:\\BaiduNetdiskDownload\\client\\instantclient_12_1</p>\n<p>指定OCI library路径：D:\\BaiduNetdiskDownload\\client\\instantclient_12_1\\oci.dll</p>\n<p><img src=\"https://bitiful.hudi.space/posts/oraclebase/plsql_develop_1.png\" alt=\"image-20230714112548602\"></p>\n<p>3、在 ORACLE 的以下安装目录中找到 tnsnames.ora 文件，拷贝到本地电脑的 D盘根目录。打开 tnsnames.ora 文件编辑配置oracle所在的服务器IP地址，设置环境变量 TNS_ADMIN 为 D 盘根目录( tnsnames.ora 所在目录 )</p>\n<p><img src=\"https://bitiful.hudi.space/posts/oraclebase/plsql_develop_2.png\" alt=\"image-20230714113841909\"></p>\n<p>4、中文编码设置查看服务器端编码 </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SQL</span>:<span class=\"keyword\">select</span> userenv(<span class=\"string\">&#x27;language&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br></pre></td></tr></table></figure>\n\n<p>我实际查到的结果为:AMERICAN_AMERICA.ZHS16GBK<br>5、配置环境变量，计算机-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;新建，设置变量名:NLS_LANG,变量值:第 1 步查到的值，<br>AMERICAN_AMERICA.ZHS16GBK</p>\n<h2 id=\"1、数据类型\"><a href=\"#1、数据类型\" class=\"headerlink\" title=\"1、数据类型\"></a>1、数据类型</h2><h4 id=\"number-数值类型\"><a href=\"#number-数值类型\" class=\"headerlink\" title=\"number 数值类型\"></a>number 数值类型</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">number（<span class=\"number\">5</span>） 最大值<span class=\"number\">99999</span> </span><br><span class=\"line\">number(<span class=\"number\">5</span>,<span class=\"number\">2</span>) 最大值<span class=\"number\">999.99</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"字符串类型\"><a href=\"#字符串类型\" class=\"headerlink\" title=\"字符串类型\"></a>字符串类型</h4><figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">char 固定长度的字符类型，最多存储2000个字节</span><br><span class=\"line\">varchar2 可变长度的字符类型，最多存储4000个字节</span><br><span class=\"line\">long  大文本类型。最大可以存储2个G</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"日期类型\"><a href=\"#日期类型\" class=\"headerlink\" title=\"日期类型\"></a>日期类型</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysdate 日期时间型，精确到秒</span><br><span class=\"line\"><span class=\"type\">timestamp</span> 精确到秒的小数点后<span class=\"number\">9</span>位</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"二进制类型\"><a href=\"#二进制类型\" class=\"headerlink\" title=\"二进制类型\"></a>二进制类型</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">clob</span> 存储字符,最大可以存<span class=\"number\">4</span>个G</span><br><span class=\"line\"><span class=\"type\">blob</span> 存储图像、声音、视频等二进制数据,最多可以存<span class=\"number\">4</span>个G</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"2、DDL操作\"><a href=\"#2、DDL操作\" class=\"headerlink\" title=\"2、DDL操作\"></a>2、DDL操作</h2><h4 id=\"用SQLPLUS连接Oracle的连接字符串\"><a href=\"#用SQLPLUS连接Oracle的连接字符串\" class=\"headerlink\" title=\"用SQLPLUS连接Oracle的连接字符串\"></a>用SQLPLUS连接Oracle的连接字符串</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sqlplus <span class=\"keyword\">system</span><span class=\"operator\">/</span>local123<span class=\"variable\">@192</span><span class=\"number\">.168</span><span class=\"number\">.157</span><span class=\"number\">.129</span>:<span class=\"number\">1521</span><span class=\"operator\">/</span>orcl</span><br><span class=\"line\">sqlplus    账户名<span class=\"operator\">/</span>密码@所在主机:端口号</span><br><span class=\"line\">sqlplus <span class=\"keyword\">system</span><span class=\"operator\">/</span>local123 <span class=\"keyword\">as</span> sysdba</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建表空间\"><a href=\"#创建表空间\" class=\"headerlink\" title=\"创建表空间\"></a>创建表空间</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span>space xxxx</span><br><span class=\"line\">datafile <span class=\"string\">&#x27;c:\\xxxx.dbf&#x27;</span></span><br><span class=\"line\">size <span class=\"number\">100</span>m autoextend <span class=\"keyword\">on</span> next <span class=\"number\">10</span>m</span><br><span class=\"line\">xxx表示表空间名</span><br><span class=\"line\">datafile 表示数据储存的物理文件名</span><br><span class=\"line\">size 用于设置表的初始大小</span><br><span class=\"line\">autoextend <span class=\"keyword\">on</span> 用于设置自动增长，如果存储量超过初始大小，则开始自动扩容</span><br><span class=\"line\">next 用于设置扩容的空间大小</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span>space test;</span><br><span class=\"line\">datafile <span class=\"string\">&#x27;c:\\test.dbf&#x27;</span></span><br><span class=\"line\">size <span class=\"number\">100</span>m autoextend <span class=\"keyword\">on</span> next <span class=\"number\">10</span>m</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建用户\"><a href=\"#创建用户\" class=\"headerlink\" title=\"创建用户\"></a>创建用户</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">user</span> 用户名</span><br><span class=\"line\">identified <span class=\"keyword\">by</span> 密码</span><br><span class=\"line\"><span class=\"keyword\">default</span> tablespace 表空间名</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"用户赋予权限\"><a href=\"#用户赋予权限\" class=\"headerlink\" title=\"用户赋予权限\"></a>用户赋予权限</h4><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">grant dba to 用户名  给xxx用户授予DBA权限</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"表的创建\"><a href=\"#表的创建\" class=\"headerlink\" title=\"表的创建\"></a>表的创建</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> 表名（</span><br><span class=\"line\">字段名  字段类型[长度] [约束],</span><br><span class=\"line\">....</span><br><span class=\"line\">）</span><br><span class=\"line\">例如</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> users(</span><br><span class=\"line\">userid number <span class=\"keyword\">primary</span> key,</span><br><span class=\"line\">name varchar2(<span class=\"number\">50</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_owners(</span><br><span class=\"line\">id number <span class=\"keyword\">primary</span> key,</span><br><span class=\"line\">name varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">addressid number,</span><br><span class=\"line\">housenumber varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">watermeter varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">adddate <span class=\"type\">date</span>,</span><br><span class=\"line\">ownertypeid number</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_ownertype(id number  <span class=\"keyword\">primary</span> key,name varchar2(<span class=\"number\">30</span>));</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_pricetable(id number <span class=\"keyword\">primary</span> key,price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),ownertypeid number,minnum number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),maxnum number(<span class=\"number\">10</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_area(id number <span class=\"keyword\">primary</span> key,name varchar2(<span class=\"number\">30</span>));</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_operator(id number prmary key,name varchar2(<span class=\"number\">30</span>));</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_address(id number,name varchar2(<span class=\"number\">30</span>),areaid number,operatorid number);</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_account(id number,ownerid number,ownertypeid number,areaid number,<span class=\"keyword\">year</span> <span class=\"type\">char</span>(<span class=\"number\">4</span>),<span class=\"keyword\">month</span> <span class=\"type\">char</span>(<span class=\"number\">2</span>),num0 number,num1 number,usenum number,meteruserid number,meterdate <span class=\"type\">date</span>,money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),isfee <span class=\"type\">char</span>(<span class=\"number\">1</span>),feedate <span class=\"type\">date</span>,feeuserid number);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"表的修改\"><a href=\"#表的修改\" class=\"headerlink\" title=\"表的修改\"></a>表的修改</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">desc</span> tablename 查看表的详情</span><br><span class=\"line\">#<span class=\"number\">1</span>、增加字段语法</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tablename <span class=\"keyword\">add</span> ( 字段名  字段类型 [<span class=\"keyword\">default</span> 默认值 ],字段名  字段类型 [<span class=\"keyword\">default</span> 默认值 ] );</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> t_owners <span class=\"keyword\">add</span> ( level number <span class=\"keyword\">default</span> <span class=\"number\">1</span>,email varchar2(<span class=\"number\">255</span>) );</span><br><span class=\"line\">#<span class=\"number\">2</span>、修改字段语法</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tablename modify(字段名 字段类型[<span class=\"keyword\">default</span> 默认值],字段名 字段类型[<span class=\"keyword\">default</span> 默认值]);</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> t_owners modify(email varchar2(<span class=\"number\">50</span>));</span><br><span class=\"line\">#<span class=\"number\">3</span>、修改字段名</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tablename rename <span class=\"keyword\">column</span> 原字段名 <span class=\"keyword\">to</span> 新的字段名</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> t_owners rename <span class=\"keyword\">column</span> email <span class=\"keyword\">to</span> mail;</span><br><span class=\"line\">#<span class=\"number\">4</span>、删除字段名</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tablename <span class=\"keyword\">drop</span> <span class=\"keyword\">column</span> 字段名；</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> t_owners <span class=\"keyword\">drop</span> tel</span><br><span class=\"line\">#<span class=\"number\">5</span>、删除多个字段名</span><br><span class=\"line\"><span class=\"keyword\">alter</span> <span class=\"keyword\">table</span> tablename <span class=\"keyword\">drop</span> (字段<span class=\"number\">1</span>,字段<span class=\"number\">2</span>);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"清空表\"><a href=\"#清空表\" class=\"headerlink\" title=\"清空表\"></a>清空表</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">truncate</span> <span class=\"keyword\">table</span> tablename; 删除表再重构表</span><br><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> tablename <span class=\"keyword\">where</span> <span class=\"number\">1</span><span class=\"operator\">=</span><span class=\"number\">1</span>; 表结构还在 主键自增的序列依然存在</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"删除表\"><a href=\"#删除表\" class=\"headerlink\" title=\"删除表\"></a>删除表</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">table</span> tablename;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"3、DML操作\"><a href=\"#3、DML操作\" class=\"headerlink\" title=\"3、DML操作\"></a>3、DML操作</h2><h4 id=\"insert操作\"><a href=\"#insert操作\" class=\"headerlink\" title=\"insert操作\"></a>insert操作</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_owners(</span><br><span class=\"line\">id number <span class=\"keyword\">primary</span> key,</span><br><span class=\"line\">name varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">addressid number,</span><br><span class=\"line\">housenumber varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">watermeter varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">adddate <span class=\"type\">date</span>,</span><br><span class=\"line\">ownertypeid number</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> T_OWNERS <span class=\"keyword\">VALUES</span> (<span class=\"number\">1</span>,<span class=\"string\">&#x27;张三丰&#x27;</span>,<span class=\"number\">1001</span>,<span class=\"string\">&#x27;2-2&#x27;</span>,<span class=\"string\">&#x27;5678&#x27;</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> T_OWNERS <span class=\"keyword\">VALUES</span> (<span class=\"number\">2</span>,<span class=\"string\">&#x27;苏赫&#x27;</span>,<span class=\"number\">1002</span>,<span class=\"string\">&#x27;15-2&#x27;</span>,<span class=\"string\">&#x27;8975&#x27;</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> T_OWNERS <span class=\"keyword\">VALUES</span> (<span class=\"number\">3</span>,<span class=\"string\">&#x27;涂山红红&#x27;</span>,<span class=\"number\">1002</span>,<span class=\"string\">&#x27;6-2&#x27;</span>,<span class=\"string\">&#x27;3456&#x27;</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_ownertype(id number  <span class=\"keyword\">primary</span> key,name varchar2(<span class=\"number\">30</span>));</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_ownertype(id,name)<span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;master&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_ownertype(id,name)<span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;levelmaster&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_ownertype(id,name)<span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;supermaster&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_ownertype(id,name)<span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;居民&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_ownertype(id,name)<span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;物业&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_ownertype(id,name)<span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;来兵&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_pricetable(id number <span class=\"keyword\">primary</span> key,price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),ownertypeid number,minnum #number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),maxnum number(<span class=\"number\">10</span>,<span class=\"number\">2</span>));</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_pricetable <span class=\"keyword\">values</span>(<span class=\"number\">3</span>,<span class=\"number\">2.45</span>,<span class=\"number\">1001</span>,<span class=\"number\">0</span>,<span class=\"number\">5</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_pricetable <span class=\"keyword\">values</span>(<span class=\"number\">4</span>,<span class=\"number\">3.45</span>,<span class=\"number\">1001</span>,<span class=\"number\">5</span>,<span class=\"number\">10</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_pricetable <span class=\"keyword\">values</span>(<span class=\"number\">5</span>,<span class=\"number\">4.45</span>,<span class=\"number\">1001</span>,<span class=\"number\">10</span>,<span class=\"keyword\">null</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span></span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_area(id number <span class=\"keyword\">primary</span> key,name varchar2(<span class=\"number\">30</span>));</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;East China&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;North China&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;NorthEast&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1004</span>,<span class=\"string\">&#x27;SouthWest&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;双流区&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;温江区&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;青羊区&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1004</span>,<span class=\"string\">&#x27;青白江区&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_area <span class=\"keyword\">values</span>(<span class=\"number\">1005</span>,<span class=\"string\">&#x27;武侯区&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_operator(id number <span class=\"keyword\">primary</span> key,name varchar2(<span class=\"number\">30</span>));</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;mary&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;sueh&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;lili&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1004</span>,<span class=\"string\">&#x27;harry&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;小明&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;小何&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;小苏&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_operator <span class=\"keyword\">values</span>(<span class=\"number\">1004</span>,<span class=\"string\">&#x27;小红&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_address(id number <span class=\"keyword\">primary</span> key,name varchar2(<span class=\"number\">30</span>),areaid number,operatorid number);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;quhouqu&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;qingyangqu&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1002</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;shuangliuqu&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1003</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1004</span>,<span class=\"string\">&#x27;wenjiangqu&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1004</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1001</span>,<span class=\"string\">&#x27;草金路&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1002</span>,<span class=\"string\">&#x27;尚楠湾&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1002</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1003</span>,<span class=\"string\">&#x27;江安河大桥&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1003</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_address <span class=\"keyword\">values</span>(<span class=\"number\">1004</span>,<span class=\"string\">&#x27;崇教路&#x27;</span>,<span class=\"number\">1004</span>,<span class=\"number\">1004</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_account(id number,ownerid number,ownertypeid number,areaid number,<span class=\"keyword\">year</span> <span class=\"type\">char</span>(<span class=\"number\">4</span>),<span class=\"keyword\">month</span> #<span class=\"type\">char</span>(<span class=\"number\">2</span>),num0 number,num1 number,usenum number,meteruserid number,meterdate <span class=\"type\">date</span>,money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),isfee #<span class=\"type\">char</span>(<span class=\"number\">1</span>),feedate <span class=\"type\">date</span>,feeuserid number);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">1</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">2023</span>,<span class=\"number\">06</span>,<span class=\"number\">43543</span>,<span class=\"number\">46456</span>,<span class=\"number\">3000</span>,<span class=\"number\">1001</span>,sysdate,<span class=\"number\">3232</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">2</span>,<span class=\"number\">1002</span>,<span class=\"number\">1001</span>,<span class=\"number\">1002</span>,<span class=\"number\">2023</span>,<span class=\"number\">06</span>,<span class=\"number\">46456</span>,<span class=\"number\">50020</span>,<span class=\"number\">3564</span>,<span class=\"number\">1002</span>,sysdate,<span class=\"number\">3755</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">3</span>,<span class=\"number\">1003</span>,<span class=\"number\">1002</span>,<span class=\"number\">1003</span>,<span class=\"number\">2023</span>,<span class=\"number\">06</span>,<span class=\"number\">82122</span>,<span class=\"number\">92131</span>,<span class=\"number\">10009</span>,<span class=\"number\">1003</span>,sysdate,<span class=\"number\">12000</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">4</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">2023</span>,<span class=\"number\">07</span>,<span class=\"number\">46456</span>,<span class=\"number\">50000</span>,<span class=\"number\">3544</span>,<span class=\"number\">1004</span>,sysdate,<span class=\"number\">3232</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">5</span>,<span class=\"number\">1004</span>,<span class=\"number\">1001</span>,<span class=\"number\">1004</span>,<span class=\"number\">2023</span>,<span class=\"number\">06</span>,<span class=\"number\">60000</span>,<span class=\"number\">80000</span>,<span class=\"number\">20000</span>,<span class=\"number\">1001</span>,sysdate,<span class=\"number\">3232</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">6</span>,<span class=\"number\">1003</span>,<span class=\"number\">1001</span>,<span class=\"number\">1003</span>,<span class=\"number\">2023</span>,<span class=\"number\">07</span>,<span class=\"number\">92131</span>,<span class=\"number\">100000</span>,<span class=\"number\">7869</span>,<span class=\"number\">1001</span>,sysdate,<span class=\"number\">3232</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">7</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">2023</span>,<span class=\"number\">08</span>,<span class=\"number\">50000</span>,<span class=\"number\">70000</span>,<span class=\"number\">20000</span>,<span class=\"number\">1003</span>,sysdate,<span class=\"number\">3232</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">8</span>,<span class=\"number\">1002</span>,<span class=\"number\">1001</span>,<span class=\"number\">1002</span>,<span class=\"number\">2023</span>,<span class=\"number\">07</span>,<span class=\"number\">50020</span>,<span class=\"number\">70020</span>,<span class=\"number\">20000</span>,<span class=\"number\">1003</span>,sysdate,<span class=\"number\">20000</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\">#关联查询</span><br><span class=\"line\"><span class=\"keyword\">select</span></span><br><span class=\"line\">  tad.id <span class=\"keyword\">as</span> addressid,</span><br><span class=\"line\">  tad.name <span class=\"keyword\">as</span> addressname,</span><br><span class=\"line\">  ta.name <span class=\"keyword\">as</span> areaname,</span><br><span class=\"line\">  top.name <span class=\"keyword\">as</span> operatorname</span><br><span class=\"line\"><span class=\"keyword\">from</span> t_address tad,t_area ta,t_operator top</span><br><span class=\"line\"><span class=\"keyword\">where</span> tad.areaid<span class=\"operator\">=</span>ta.id <span class=\"keyword\">and</span> tad.operatorid<span class=\"operator\">=</span>top.id;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> </span><br><span class=\"line\">\tt1.addressid,</span><br><span class=\"line\">   \tt1.addressname,</span><br><span class=\"line\">    t2.name <span class=\"keyword\">as</span> operatoname,</span><br><span class=\"line\">   \tt1.areaname</span><br><span class=\"line\"><span class=\"keyword\">from</span> (</span><br><span class=\"line\">   <span class=\"keyword\">select</span> </span><br><span class=\"line\">   \t\ttad.id <span class=\"keyword\">as</span> addressid,</span><br><span class=\"line\">   \t\ttad.name <span class=\"keyword\">as</span> addressname,</span><br><span class=\"line\">    \ttad.operatorid <span class=\"keyword\">as</span> operatorid,</span><br><span class=\"line\">   \t\tta.name <span class=\"keyword\">as</span> areaname</span><br><span class=\"line\">   <span class=\"keyword\">from</span> t_address tad <span class=\"keyword\">left</span>  <span class=\"keyword\">join</span> t_area ta <span class=\"keyword\">on</span> tad.areaid<span class=\"operator\">=</span>ta.id</span><br><span class=\"line\">) t1 <span class=\"keyword\">left</span> <span class=\"keyword\">join</span> t_operator t2 <span class=\"keyword\">on</span> t1.operatorid<span class=\"operator\">=</span> t2.id;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"update数据修改\"><a href=\"#update数据修改\" class=\"headerlink\" title=\"update数据修改\"></a>update数据修改</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">update</span> 表名 <span class=\"keyword\">set</span> 字段<span class=\"operator\">=</span>新值，字段<span class=\"operator\">=</span>新值 <span class=\"keyword\">where</span> 条件;</span><br><span class=\"line\"><span class=\"keyword\">update</span> t_ownertype <span class=\"keyword\">set</span> id<span class=\"operator\">=</span><span class=\"number\">1004</span>,name<span class=\"operator\">=</span><span class=\"string\">&#x27;level1master&#x27;</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1001</span>;</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"delete删除数据\"><a href=\"#delete删除数据\" class=\"headerlink\" title=\"delete删除数据\"></a>delete删除数据</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> tablename <span class=\"keyword\">where</span> 条件</span><br><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> t_ownertype <span class=\"keyword\">where</span> id <span class=\"operator\">=</span><span class=\"number\">1004</span>;</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> t_ownertype <span class=\"keyword\">where</span> id <span class=\"operator\">&gt;</span><span class=\"number\">1001</span>;</span><br><span class=\"line\"><span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> t_ownertype <span class=\"keyword\">where</span> id <span class=\"keyword\">in</span> (<span class=\"number\">1001</span>,<span class=\"number\">1002</span>,<span class=\"number\">1003</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意增删改查操作完成后记得commit提交事务</p>\n</blockquote>\n<h4 id=\"导入导出\"><a href=\"#导入导出\" class=\"headerlink\" title=\"导入导出\"></a>导入导出</h4><p>数据的导出</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">expdp(impdp) 用户名<span class=\"operator\">/</span>密码@连接地址:端口<span class=\"operator\">/</span>服务名 [schemas<span class=\"operator\">|</span>owner]<span class=\"operator\">=</span>用户名 [dumpfile<span class=\"operator\">|</span>file]<span class=\"operator\">=</span>file1.dmp logfile<span class=\"operator\">=</span>file1.log directory<span class=\"operator\">=</span>testdata1 remap_schema<span class=\"operator\">=</span>test:test;</span><br><span class=\"line\">exp:导出命令，导出时必写。</span><br><span class=\"line\">imp:导入命令，导入时必写,每次操作，二者只能选择一个执行。</span><br><span class=\"line\">username:导出数据的用户名，必写;</span><br><span class=\"line\">password:导出数据的密码，必写;</span><br><span class=\"line\">@:地址符号，必写;</span><br><span class=\"line\">SERVICENAME:Oracle的服务名，必写;</span><br><span class=\"line\"><span class=\"number\">1521</span>:端口号，<span class=\"number\">1521</span>是默认的可以不写,非默认要写;</span><br><span class=\"line\">schemas：导出操作的用户名;</span><br><span class=\"line\">dumpfile：导出的文件;</span><br><span class=\"line\">logfile:导出的日志文件,可以不写；</span><br><span class=\"line\">directory: 如果手工创建了转储文件和日志文件，通过本命令指定导出位置</span><br><span class=\"line\">remap_schema<span class=\"operator\">=</span>源数据库用户名:目标数据库用户名,二者不同时必写，相同可以省略;</span><br><span class=\"line\"></span><br><span class=\"line\">#例如</span><br><span class=\"line\">exp <span class=\"keyword\">system</span><span class=\"operator\">/</span>local123 <span class=\"keyword\">full</span><span class=\"operator\">=</span>y 整个数据库全部导出</span><br><span class=\"line\">exp <span class=\"keyword\">system</span><span class=\"operator\">/</span>local123 <span class=\"keyword\">full</span><span class=\"operator\">=</span>y [dumpfile<span class=\"operator\">|</span>file]<span class=\"operator\">=</span>a.dmp</span><br><span class=\"line\">exp lili<span class=\"operator\">/</span>lili123 file<span class=\"operator\">=</span>lili.dmp owner<span class=\"operator\">=</span>lili;</span><br><span class=\"line\">按用户导入</span><br><span class=\"line\">imp lili<span class=\"operator\">/</span>lili123 file<span class=\"operator\">=</span>lili.dmp fromuserlili;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">通过<span class=\"variable\">@F</span>:\\website\\oraok\\ot\\<span class=\"number\">11</span>g\\ot_drop.sql 导入F盘下的\\website\\oraok\\ot\\<span class=\"number\">11</span>g\\目录下的ot_drop.sql文件</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"4、DML练习\"><a href=\"#4、DML练习\" class=\"headerlink\" title=\"4、DML练习\"></a>4、DML练习</h2><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> tac.areaid,<span class=\"built_in\">sum</span>(tac.money),ta.name <span class=\"keyword\">from</span> t_account tac,t_area ta <span class=\"keyword\">where</span> tac.areaid<span class=\"operator\">=</span>ta.id <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> tac.areaid,ta.name;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"简单查询\"><a href=\"#简单查询\" class=\"headerlink\" title=\"简单查询\"></a>简单查询</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners;</span><br><span class=\"line\">#精确查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> watermeter<span class=\"operator\">=</span><span class=\"number\">5678</span>;</span><br><span class=\"line\">#模糊查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%张%&#x27;</span>;</span><br><span class=\"line\">#<span class=\"keyword\">and</span>的运算符 <span class=\"keyword\">or</span>运算符</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;张%&#x27;</span> <span class=\"keyword\">or</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%山%&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;_山__&#x27;</span> <span class=\"keyword\">or</span> watermeter<span class=\"operator\">&gt;</span><span class=\"number\">5678</span>;</span><br><span class=\"line\">#<span class=\"keyword\">and</span>运算符 <span class=\"keyword\">or</span>运算符混合使用</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> (name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%苏%&#x27;</span> <span class=\"keyword\">or</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%山%&#x27;</span> ) <span class=\"keyword\">and</span> addressid <span class=\"operator\">=</span><span class=\"number\">1002</span>;</span><br><span class=\"line\">#范围查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> num0<span class=\"operator\">&gt;=</span><span class=\"number\">50000</span> <span class=\"keyword\">and</span> num0<span class=\"operator\">&lt;=</span><span class=\"number\">70000</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> num0 <span class=\"keyword\">between</span> <span class=\"number\">50000</span> <span class=\"keyword\">and</span> <span class=\"number\">70000</span>;</span><br><span class=\"line\">#空值查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span>  <span class=\"keyword\">from</span> t_account isfee <span class=\"keyword\">is</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">#查询非空值</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account isfee <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"keyword\">null</span>;</span><br><span class=\"line\">#去重查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">distinct</span> addressid <span class=\"keyword\">from</span> t_owners ; </span><br><span class=\"line\">#排序 默认升序<span class=\"keyword\">asc</span> <span class=\"keyword\">desc</span>降序</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> usenum <span class=\"keyword\">desc</span>;</span><br><span class=\"line\">#基于伪列的查询rowid rowid是保存数据在磁盘上的物理地址</span><br><span class=\"line\"><span class=\"keyword\">select</span> rowid,t.<span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners t;</span><br><span class=\"line\">#可以通过rowid来指定查询的某条数据</span><br><span class=\"line\"><span class=\"keyword\">select</span> rowid,t.<span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners t <span class=\"keyword\">where</span> rowid<span class=\"operator\">=</span><span class=\"string\">&#x27;AAASNcAABAAAVJpAAD&#x27;</span>;</span><br><span class=\"line\">#基于伪列的查询rownum rownum是基于查询出的结果集的序号</span><br><span class=\"line\"><span class=\"keyword\">select</span> rownum,t.<span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners t;</span><br><span class=\"line\">#聚合统计sum</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">sum</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"string\">&#x27;2023&#x27;</span>;</span><br><span class=\"line\">#平均值</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">avg</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"string\">&#x27;2023&#x27;</span>;</span><br><span class=\"line\">#最小值</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">min</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"string\">&#x27;2023&#x27;</span>;</span><br><span class=\"line\">#最大值</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">max</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"string\">&#x27;2023&#x27;</span>;</span><br><span class=\"line\">#统计个数</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">count</span>(id) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"string\">&#x27;2023&#x27;</span>;</span><br><span class=\"line\">#分组查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> areaid,<span class=\"built_in\">sum</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> areaid;</span><br><span class=\"line\">#分组后在指定条件的查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> areaid,<span class=\"built_in\">sum</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> areaid <span class=\"keyword\">having</span> <span class=\"built_in\">sum</span>(usenum)<span class=\"operator\">&gt;</span><span class=\"number\">20000</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"连接查询\"><a href=\"#连接查询\" class=\"headerlink\" title=\"连接查询\"></a>连接查询</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#多表内连接</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,ta.name addressname <span class=\"keyword\">from</span> t_owners twn,t_address ta <span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id;</span><br><span class=\"line\"></span><br><span class=\"line\">#查询显示业主编号，业主名称、地址和业主类型</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.id,twn.name,ta.name addressname,tt.name ownertype <span class=\"keyword\">from</span> t_owners twn,t_ownertype tt,t_address ta <span class=\"keyword\">where</span> twn.ownertypeid<span class=\"operator\">=</span>tt.id <span class=\"keyword\">and</span> twn.addressid<span class=\"operator\">=</span>ta.id; </span><br><span class=\"line\"></span><br><span class=\"line\">#查询显示业主编号、业主名称、地址、所属区域、业主分类</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.id,twn.name,ta.name addressname,t1.name areaname,tt.name ownername <span class=\"keyword\">from</span> t_owners twn, t_area t1,t_address ta,t_ownertype tt <span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id <span class=\"keyword\">and</span> twn.ownertypeid<span class=\"operator\">=</span>tt.id <span class=\"keyword\">and</span> ta.areaid<span class=\"operator\">=</span>t1.id;</span><br><span class=\"line\"></span><br><span class=\"line\">#查询显示业主编号、业主名称、地址、所属区域、收费员、业主分类</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.id,twn.name,ta.name addressname,t1.name areaname,top.name operatorname,tt.name ownertypename <span class=\"keyword\">from</span> t_owners twn,t_address ta,t_area t1,t_operator top,t_ownertype tt</span><br><span class=\"line\"><span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id <span class=\"keyword\">and</span> twn.ownertypeid<span class=\"operator\">=</span>tt.id <span class=\"keyword\">and</span> ta.areaid<span class=\"operator\">=</span>t1.id <span class=\"keyword\">and</span> ta.operatorid<span class=\"operator\">=</span>top.id;</span><br><span class=\"line\"></span><br><span class=\"line\">#查询业主的账务记录，显示业主编号、名称、年、月、金额。如果此业主没有账务记录也要列出姓名。</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.id,twn.name,tacc.year,tacc.month,tacc.money <span class=\"keyword\">from</span> t_owners twn <span class=\"keyword\">left</span> <span class=\"keyword\">join</span> t_account tacc <span class=\"keyword\">on</span> twn.id<span class=\"operator\">=</span>tacc.ownerid; </span><br><span class=\"line\"></span><br><span class=\"line\">#左外连接</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.id,twn.name,tacc.year,tacc.month,tacc.money <span class=\"keyword\">from</span> t_owners twn,t_account tacc <span class=\"keyword\">where</span> twn.id<span class=\"operator\">=</span>tacc.ownerid(<span class=\"operator\">+</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">#右外连接</span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.id,twn.name,tacc.year,tacc.month,tacc.money <span class=\"keyword\">from</span> t_owners twn,t_account tacc <span class=\"keyword\">where</span> twn.id(<span class=\"operator\">+</span>)<span class=\"operator\">=</span>tacc.ownerid;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"子查询\"><a href=\"#子查询\" class=\"headerlink\" title=\"子查询\"></a>子查询</h4><ol>\n<li><p>where子句中的子查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#单行子查询</span><br><span class=\"line\">#查询 <span class=\"number\">2023</span> 年 <span class=\"number\">6</span> 月用水量大于平均值的台账记录</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">avg</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">month</span><span class=\"operator\">=</span><span class=\"number\">6</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> usenum <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> usenum<span class=\"operator\">&gt;</span>(<span class=\"keyword\">select</span> <span class=\"built_in\">avg</span>(usenum) <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">month</span><span class=\"operator\">=</span><span class=\"number\">6</span>) <span class=\"keyword\">and</span> <span class=\"keyword\">month</span><span class=\"operator\">=</span><span class=\"number\">6</span>;</span><br><span class=\"line\">#多行子查询</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> id <span class=\"keyword\">in</span> (<span class=\"number\">1001</span>,<span class=\"number\">1002</span>);</span><br><span class=\"line\">#查询地址含有“草”的业主的信息</span><br><span class=\"line\"><span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%草%&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> addressid <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%江安河%&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">#查询地址不含有“草”的业主的信息</span><br><span class=\"line\"><span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> name <span class=\"keyword\">not</span> <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%草%&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners <span class=\"keyword\">where</span> addressid <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> name <span class=\"keyword\">not</span> <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%草%&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_onwers <span class=\"keyword\">where</span> addressid <span class=\"keyword\">not</span> <span class=\"keyword\">in</span>(<span class=\"keyword\">select</span> id <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> name <span class=\"keyword\">like</span> <span class=\"string\">&#x27;%草%&#x27;</span>);</span><br><span class=\"line\">#</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>from子句中的子查询</p>\n<p>from子查询为多行子查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#查询显示业主编号，业主名称，业主类型名称，条件为业主类型为”居民”，使用子查询实现。</span><br><span class=\"line\"><span class=\"keyword\">select</span> id,name,ownertypename <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,tt.name ownertypename  <span class=\"keyword\">from</span> t_owners twn,t_ownertype tt  <span class=\"keyword\">where</span> twn.ownertypeid<span class=\"operator\">=</span>tt.id <span class=\"keyword\">and</span> tt.name<span class=\"operator\">=</span><span class=\"string\">&#x27;居民&#x27;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n</li>\n<li><p>select 子句中的子查询</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#列出业主信息，包括 ID，名称，所属地址。</span><br><span class=\"line\"><span class=\"keyword\">select</span> id,name,(<span class=\"keyword\">select</span> name <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> id<span class=\"operator\">=</span>addressid) addressname <span class=\"keyword\">from</span> t_owners;</span><br><span class=\"line\">#列出业主信息，包括 ID，名称，所属地址，所属区域</span><br><span class=\"line\"><span class=\"keyword\">select</span> id,name,</span><br><span class=\"line\">(<span class=\"keyword\">select</span> name <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> id<span class=\"operator\">=</span>addressid) addressname,</span><br><span class=\"line\">(<span class=\"keyword\">select</span> (<span class=\"keyword\">select</span> name <span class=\"keyword\">from</span> t_area <span class=\"keyword\">where</span> id<span class=\"operator\">=</span>areaid) <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> id<span class=\"operator\">=</span>addressid) areaname</span><br><span class=\"line\"><span class=\"keyword\">from</span> t_owners;</span><br></pre></td></tr></table></figure>\n</li>\n<li><p>分页查询</p>\n<p>使用rownum伪列来完成分页查询的功能。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#分页查询台账表 T_ACCOUNT，每页 <span class=\"number\">10</span> 条记录</span><br><span class=\"line\"><span class=\"keyword\">select</span> rownum,t.<span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account t <span class=\"keyword\">where</span> rownum<span class=\"operator\">&lt;=</span><span class=\"number\">5</span>; </span><br><span class=\"line\">#查询<span class=\"number\">5</span>到<span class=\"number\">10</span>的数据</span><br><span class=\"line\">#子查询里rownum小于较大值,外面rownum大于较小值</span><br><span class=\"line\"><span class=\"keyword\">select</span> rownum,t.<span class=\"operator\">*</span> <span class=\"keyword\">from</span> (<span class=\"keyword\">select</span> rownum r,t.<span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account t <span class=\"keyword\">where</span> rownum<span class=\"operator\">&lt;=</span><span class=\"number\">20</span>) t <span class=\"keyword\">where</span> r<span class=\"operator\">&lt;=</span><span class=\"number\">5</span>;</span><br></pre></td></tr></table></figure></li>\n</ol>\n<h2 id=\"5、函数\"><a href=\"#5、函数\" class=\"headerlink\" title=\"5、函数\"></a>5、函数</h2><h4 id=\"字符函数\"><a href=\"#字符函数\" class=\"headerlink\" title=\"字符函数\"></a>字符函数</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> ascii(<span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">from</span> dual;ASCII() 返回字符的十进制数;</span><br><span class=\"line\"><span class=\"keyword\">select</span> chr(<span class=\"number\">97</span>) <span class=\"keyword\">from</span> dual; chr() 返回十进制数的对应的字符;</span><br><span class=\"line\"><span class=\"keyword\">select</span> concat(<span class=\"string\">&#x27;aa&#x27;</span>,<span class=\"string\">&#x27;bb&#x27;</span>) <span class=\"keyword\">from</span> dual; 拼接两个字符串 <span class=\"operator\">||</span> </span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"string\">&#x27;aa&#x27;</span> <span class=\"operator\">||</span> <span class=\"string\">&#x27;bb&#x27;</span> <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> initcap(<span class=\"string\">&#x27;string&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> instr(<span class=\"string\">&#x27;adbc&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">from</span> dual; 找出某个字符的位置</span><br><span class=\"line\"><span class=\"keyword\">select</span> instrb(<span class=\"string\">&#x27;abc&#x27;</span>,<span class=\"string\">&#x27;a&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> length(<span class=\"string\">&#x27;asdfgh&#x27;</span>) <span class=\"keyword\">from</span> dual; 给出字符串的长度</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">lower</span>(<span class=\"string\">&#x27;HELLO&#x27;</span>) <span class=\"keyword\">from</span> dual;将字符转化成小写</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">upper</span>(<span class=\"string\">&#x27;apple&#x27;</span>) <span class=\"keyword\">from</span> dual;将字符串转化成小写</span><br><span class=\"line\">#去除指定的字符串</span><br><span class=\"line\"><span class=\"keyword\">select</span> ltrim(<span class=\"string\">&#x27;##apple&#x27;</span>,<span class=\"string\">&#x27;#&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> rtrim(<span class=\"string\">&#x27;apple@@&#x27;</span>,<span class=\"string\">&#x27;@&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">trim</span>(<span class=\"string\">&#x27;p&#x27;</span> <span class=\"keyword\">from</span> <span class=\"string\">&#x27;apple&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> lpad(<span class=\"string\">&#x27;apple&#x27;</span>,<span class=\"number\">10</span>,<span class=\"string\">&#x27;*&#x27;</span>) <span class=\"keyword\">from</span> dual;在字符串c1的左边用字符串c2填充，直到长度为<span class=\"number\">10</span>时为止</span><br><span class=\"line\"><span class=\"keyword\">select</span> rpad(<span class=\"string\">&#x27;apple&#x27;</span>,<span class=\"number\">10</span>,<span class=\"string\">&#x27;#&#x27;</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> replace(<span class=\"string\">&#x27;apple&#x27;</span>,<span class=\"string\">&#x27;p&#x27;</span>,<span class=\"string\">&#x27;bb&#x27;</span>) <span class=\"keyword\">from</span> dual;替换指定的字符串。</span><br><span class=\"line\"><span class=\"keyword\">select</span> substr(<span class=\"string\">&#x27;apple&#x27;</span>,<span class=\"string\">&#x27;1&#x27;</span>,<span class=\"number\">2</span>) <span class=\"keyword\">from</span> dual;从第一个位置开始截取，截取两位</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"日期函数\"><a href=\"#日期函数\" class=\"headerlink\" title=\"日期函数\"></a>日期函数</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sysdate 返回系统当前时间</span><br><span class=\"line\"><span class=\"keyword\">select</span> sysdate <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\">add_months 给系统返回的时间加一天</span><br><span class=\"line\"><span class=\"keyword\">select</span> add_months(sysdate,<span class=\"number\">1</span>) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\">last_day 返回月份的最后一天</span><br><span class=\"line\"><span class=\"keyword\">select</span> last_day(add_months(sysdate,<span class=\"number\">2</span>)) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> months_between(sysdate,to_date(<span class=\"string\">&#x27;2023-04-30&#x27;</span>,<span class=\"string\">&#x27;yyyy-MM-dd&#x27;</span>)) <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">localtimestamp</span> <span class=\"keyword\">from</span> dual;返回会话中的日期和时间 </span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">current_timestamp</span> <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> greatest(sysdate,add_months(sysdate,<span class=\"number\">2</span>)) <span class=\"keyword\">from</span> dual; 返回两个时间中最晚的。时间戳最大的。</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"数值函数\"><a href=\"#数值函数\" class=\"headerlink\" title=\"数值函数\"></a>数值函数</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span>  <span class=\"built_in\">abs</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;绝对值</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">ceil</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;大于或等于 <span class=\"keyword\">value</span> 的最小整数</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">cos</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual; 余弦</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">cosh</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;反余弦</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">exp</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;e的<span class=\"keyword\">value</span>次幂</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">floor</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;小于或等于 <span class=\"keyword\">value</span> 的最大整数</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">ln</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span> 的自然对数</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">log</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span> 的以 <span class=\"number\">10</span> 为底的对数</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">mod</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;求模</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">power</span>(v,p) <span class=\"keyword\">from</span> dual;v的p次幂</span><br><span class=\"line\"><span class=\"keyword\">select</span> round(v,p) <span class=\"keyword\">from</span> dual;按 <span class=\"keyword\">precision</span> 精度<span class=\"number\">4</span>舍<span class=\"number\">5</span>入</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">sin</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span>的正弦</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">sinh</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span>的反正弦</span><br><span class=\"line\"><span class=\"keyword\">select</span> sign(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span> 为正返回 <span class=\"number\">1</span>;为负返回<span class=\"number\">-1</span>;为 <span class=\"number\">0</span> 返回 <span class=\"number\">0.</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">tan</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span>的正切</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">tanh</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span>的反正切</span><br><span class=\"line\"><span class=\"keyword\">select</span> vsize(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;返回<span class=\"keyword\">value</span>在ORACLE的存储空间大小</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"built_in\">sqrt</span>(<span class=\"keyword\">value</span>) <span class=\"keyword\">from</span> dual;<span class=\"keyword\">value</span>的平方根</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"6、表空间巡检\"><a href=\"#6、表空间巡检\" class=\"headerlink\" title=\"6、表空间巡检\"></a>6、表空间巡检</h2><h4 id=\"查询视图dba-data-files\"><a href=\"#查询视图dba-data-files\" class=\"headerlink\" title=\"查询视图dba_data_files\"></a>查询视图dba_data_files</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">file_name:表空间数据文件的位置</span><br><span class=\"line\">file_id:数据文件的ID</span><br><span class=\"line\">tablespace_name：表空间名称</span><br><span class=\"line\">bytes:表空间大小 字节显示</span><br><span class=\"line\">blocks:表示数据块数量</span><br><span class=\"line\">status:表示当前文件是否可用</span><br><span class=\"line\">relative_fno:相对文件号</span><br><span class=\"line\">autoextensible:是否自动扩展</span><br><span class=\"line\">maxbytes:如果扩展，最大扩展的大小</span><br><span class=\"line\">maxblocks：如果扩展，最大的数据块数</span><br><span class=\"line\">increment_by：最大增加的数据块数</span><br><span class=\"line\">user_bytes:文件中实际有用的字节数</span><br><span class=\"line\">user_blocks:文件中实际有用的数据块数</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> file_name,tablespace_name,bytes<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> <span class=\"keyword\">from</span> dba_data_files;</span><br><span class=\"line\"><span class=\"keyword\">select</span> file_name,tablespace_name,<span class=\"built_in\">sum</span>(bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> <span class=\"keyword\">from</span> dba_data_files <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> file_name,tablespace_name;</span><br><span class=\"line\"></span><br><span class=\"line\">#查看表空间总容量和剩余容量和使用量。</span><br><span class=\"line\"><span class=\"keyword\">select</span> df.tablespace_name,<span class=\"built_in\">SUM</span>(df.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> total,<span class=\"built_in\">SUM</span>(fs.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> <span class=\"keyword\">free</span>,<span class=\"built_in\">SUM</span>(df.bytes<span class=\"operator\">-</span>fs.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> used <span class=\"keyword\">from</span> dba_data_files df,dba_free_space fs</span><br><span class=\"line\"><span class=\"keyword\">where</span> df.tablespace_name <span class=\"operator\">=</span> fs.tablespace_name</span><br><span class=\"line\"><span class=\"keyword\">group</span> <span class=\"keyword\">by</span> df.tablespace_name <span class=\"keyword\">having</span> df.tablespace_name<span class=\"operator\">=</span><span class=\"string\">&#x27;WATERBOSS&#x27;</span>;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查询视图dba-free-space\"><a href=\"#查询视图dba-free-space\" class=\"headerlink\" title=\"查询视图dba_free_space\"></a>查询视图dba_free_space</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">tablespace_name:表空间名称</span><br><span class=\"line\">file_id：表空间ID</span><br><span class=\"line\">block_id:开始块的ID</span><br><span class=\"line\">bytes:表示空闲的字节数</span><br><span class=\"line\">blocks:表示空闲的数据块数</span><br><span class=\"line\">relative_fno:相对文件的id</span><br><span class=\"line\">#查看表空间总容量和剩余容量和使用量。</span><br><span class=\"line\"><span class=\"keyword\">select</span> ds.tablespace_name,<span class=\"built_in\">sum</span>(ds.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> total,<span class=\"built_in\">sum</span>(fs.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> <span class=\"keyword\">free</span>,<span class=\"built_in\">sum</span>(ds.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">-</span><span class=\"built_in\">sum</span>(fs.bytes)<span class=\"operator\">/</span><span class=\"number\">1024</span><span class=\"operator\">/</span><span class=\"number\">1024</span> used <span class=\"keyword\">from</span> dba_data_files ds,dba_free_space fs <span class=\"keyword\">where</span> ds.tablespace_name<span class=\"operator\">=</span>fs.tablespace_name <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> ds.tablespace_name;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"7、视图\"><a href=\"#7、视图\" class=\"headerlink\" title=\"7、视图\"></a>7、视图</h2><p>概念：视图是一种数据库对象，是从一个或者多个数据表或视图中导出的虚表，视图所对应的数据并不真正地存储在视图中，而是存储在所引用的数据表中，视图的结构和数据是对数据表进行查询的结果。</p>\n<p>优点：</p>\n<ul>\n<li>简化数据操作：视图可以简化用户处理数据的方式。</li>\n<li>着重于特定数据：不必要的数据或敏感数据可以不出现在视图中。</li>\n<li>视图提供了一个简单而有效的安全机制，可以定制不同用户对数据的访问权限。</li>\n<li>提供向后兼容性：视图使用户能够在表的架构更改时为表创建向后兼容接口。</li>\n</ul>\n<h4 id=\"创建和修改视图\"><a href=\"#创建和修改视图\" class=\"headerlink\" title=\"创建和修改视图\"></a>创建和修改视图</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> [<span class=\"keyword\">or</span> replace] [force] <span class=\"keyword\">view</span> view_name</span><br><span class=\"line\"><span class=\"keyword\">as</span> subquery</span><br><span class=\"line\">[<span class=\"keyword\">with</span> <span class=\"keyword\">check</span> option]</span><br><span class=\"line\">[<span class=\"keyword\">with</span> read <span class=\"keyword\">only</span>]</span><br><span class=\"line\"></span><br><span class=\"line\">[<span class=\"keyword\">or</span> replace]:若已经存在该视图，oracle自动重构该视图</span><br><span class=\"line\">[force]:不管基表是否存在，oracle都会自动创建该视图</span><br><span class=\"line\">suquery:子查询</span><br><span class=\"line\">[<span class=\"keyword\">with</span> <span class=\"keyword\">check</span> option]:插入和修改的数据行必须满足定义视图的约束</span><br><span class=\"line\">[<span class=\"keyword\">with</span> read <span class=\"keyword\">only</span>]:该视图上不能进行任何 DML 操作。</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">view</span> dba_data_files_v1 <span class=\"keyword\">as</span> <span class=\"keyword\">select</span> file_name,tablespace_name, <span class=\"keyword\">from</span> dba_data_files;</span><br><span class=\"line\"><span class=\"keyword\">create</span> [<span class=\"keyword\">or</span> replace] <span class=\"keyword\">view</span> t_account_v1 <span class=\"keyword\">as</span> <span class=\"keyword\">select</span> id,ownerid,ownertypeid,areaid <span class=\"keyword\">from</span> t_account;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account_v1;</span><br><span class=\"line\">#简单视图，可以进行增删改查记录</span><br><span class=\"line\">#<span class=\"keyword\">update</span> view_name <span class=\"keyword\">set</span> <span class=\"keyword\">column</span><span class=\"operator\">=</span>新值 <span class=\"keyword\">where</span> 条件</span><br><span class=\"line\"><span class=\"keyword\">update</span> t_account_v1 <span class=\"keyword\">set</span> areaid<span class=\"operator\">=</span><span class=\"number\">1002</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">5</span>;</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account_v1;</span><br></pre></td></tr></table></figure>\n\n<p>视图其实是一个虚拟的表，它的数据其实来自于表。如果更改了视图的数据，表的数据也自然会变化，更改了<br>表的数据，视图也自然会变化。</p>\n<h4 id=\"删除视图\"><a href=\"#删除视图\" class=\"headerlink\" title=\"删除视图\"></a>删除视图</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">drop</span> <span class=\"keyword\">view</span> view_name;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"带检查约束的视图\"><a href=\"#带检查约束的视图\" class=\"headerlink\" title=\"带检查约束的视图\"></a>带检查约束的视图</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">view</span> t_account_v2 </span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> id,ownerid,ownertypeid,areaid <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> areaid<span class=\"operator\">=</span><span class=\"number\">1001</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"keyword\">check</span> option;</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"keyword\">update</span> t_account_v2 <span class=\"keyword\">set</span> areaid<span class=\"operator\">=</span><span class=\"number\">1002</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">#会报错<span class=\"keyword\">view</span> <span class=\"keyword\">WITH</span> <span class=\"keyword\">CHECK</span> OPTION <span class=\"keyword\">where</span><span class=\"operator\">-</span>clause violation</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"只读视图的创建与使用\"><a href=\"#只读视图的创建与使用\" class=\"headerlink\" title=\"只读视图的创建与使用\"></a>只读视图的创建与使用</h4><p>指定 WITH READ ONLY 选项，这样创建的视图就是一个只读视图</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">view</span> t_account_v2</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> id,ownerid,ownertypeid,areaid <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> areaid<span class=\"operator\">=</span><span class=\"number\">1001</span></span><br><span class=\"line\"><span class=\"keyword\">with</span> read <span class=\"keyword\">only</span>;</span><br><span class=\"line\"><span class=\"keyword\">update</span> t_account_v2 <span class=\"keyword\">set</span> areaid<span class=\"operator\">=</span><span class=\"number\">1002</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">#修改只读视图出现：cannot perform a DML operation <span class=\"keyword\">on</span> a read<span class=\"operator\">-</span><span class=\"keyword\">only</span> <span class=\"keyword\">view</span></span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建不存在基表的视图\"><a href=\"#创建不存在基表的视图\" class=\"headerlink\" title=\"创建不存在基表的视图\"></a>创建不存在基表的视图</h4><p>有的时候，创建视图时的表可能并不存在，但是以后可能会存在，此时需要创建这样的视图，需要添加 FORCE 选项</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace force <span class=\"keyword\">view</span> t_temp_vi </span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_temp;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"查询所有的视图\"><a href=\"#查询所有的视图\" class=\"headerlink\" title=\"查询所有的视图\"></a>查询所有的视图</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> user_views;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"复杂视图的创建与使用\"><a href=\"#复杂视图的创建与使用\" class=\"headerlink\" title=\"复杂视图的创建与使用\"></a>复杂视图的创建与使用</h4><p>复杂视图，就是视图的 SQL 语句中，有聚合函数或多表关联查询。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#<span class=\"number\">1</span>、多表关联查询的视图</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace force <span class=\"keyword\">view</span> twn_tt_v1</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,tt.name <span class=\"keyword\">as</span> ownertypename <span class=\"keyword\">from</span> t_owners twn,t_ownertype tt <span class=\"keyword\">where</span> twn.ownertypeid<span class=\"operator\">=</span>tt.id(<span class=\"operator\">+</span>)</span><br><span class=\"line\"><span class=\"keyword\">with</span> <span class=\"keyword\">check</span> option;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> twn_tt_v1;</span><br><span class=\"line\"><span class=\"keyword\">update</span> twn_tt_v1 <span class=\"keyword\">set</span> name<span class=\"operator\">=</span><span class=\"string\">&#x27;suhe&#x27;</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1002</span>;</span><br><span class=\"line\">#可以修改主表的数据不可以修改关联表的数据</span><br><span class=\"line\">#<span class=\"number\">2</span>、分组聚合统计查询的视图</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_account;</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace force <span class=\"keyword\">view</span> month_per_num_2023</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"keyword\">year</span>,<span class=\"keyword\">month</span>,<span class=\"built_in\">sum</span>(usenum) sumuse <span class=\"keyword\">from</span> t_account <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> <span class=\"keyword\">year</span>,<span class=\"keyword\">month</span> <span class=\"keyword\">group</span> <span class=\"keyword\">by</span> <span class=\"keyword\">year</span>,<span class=\"keyword\">month</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> month_per_num_2023;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"物化视图\"><a href=\"#物化视图\" class=\"headerlink\" title=\"物化视图\"></a>物化视图</h4><p>​\t视图是一个虚拟表（也可以认为是一条语句），基于它创建时指定的查询语句返回的结果集。每次访问它都会导致这个查询语句被执行一次。为了避免每次访问都执行这个查询，可以将这个查询结果集存储到一个物化视图（也叫实体化视图）。物化视图与普通的视图相比的区别是物化视图是建立的副本，它类似于一张表，需要占用存储空间。而对一个物化视图查询的执行效率与查询一个表是一样的。</p>\n<ul>\n<li>创建物化视图语法</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> meterialized <span class=\"keyword\">view</span> view_name</span><br><span class=\"line\">[build immediate <span class=\"operator\">|</span> build deferred]</span><br><span class=\"line\">refresh [fast <span class=\"operator\">|</span> complete <span class=\"operator\">|</span> force]</span><br><span class=\"line\">[</span><br><span class=\"line\"> <span class=\"keyword\">on</span> [<span class=\"keyword\">commit</span> <span class=\"operator\">|</span> demand]    <span class=\"operator\">|</span> <span class=\"keyword\">start</span> <span class=\"keyword\">with</span> (start_time) next (next_time)</span><br><span class=\"line\">]</span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\">subquery</span><br><span class=\"line\"></span><br><span class=\"line\">build immediate:是在创建物化视图的时候就生成数据。</span><br><span class=\"line\">build dererred:则在创建时不生成数据，以后根据需要再生成数据。默认为 build immediate。</span><br><span class=\"line\">refresh:指当基表发生了 DML 操作后，物化视图何时采用哪种方式和基表进行同步。[fast <span class=\"operator\">|</span> complete<span class=\"operator\">|</span>force] fast采用增量刷新，只刷新自上次刷新以后进行的修改。complete刷新对整个物化视图进行完全的刷新。force方式，则 Oracle 在刷新时会去判断是否可以进行快速刷新，如果可以则采用 fast 方式，否则采用 complete的方式，force 是默认的方式。</span><br><span class=\"line\">刷新模式：<span class=\"keyword\">on</span> <span class=\"keyword\">commit</span>和<span class=\"keyword\">on</span> demand两种， <span class=\"keyword\">on</span> demand指需要手动刷新物化视图（默认）。<span class=\"keyword\">on</span> <span class=\"keyword\">commit</span>指在基表发生<span class=\"keyword\">commit</span>操作时自动刷新.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建手动刷新的物化视图</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> meterialized <span class=\"keyword\">view</span> mv_v1</span><br><span class=\"line\">[build immediate</span><br><span class=\"line\">refresh force <span class=\"keyword\">on</span> demand]</span><br><span class=\"line\"><span class=\"keyword\">as</span> </span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,ta.name <span class=\"keyword\">as</span> addressname <span class=\"keyword\">from</span> t_owners twn,t_address ta <span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id(<span class=\"operator\">+</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners <span class=\"keyword\">VALUES</span> (<span class=\"number\">1004</span>,<span class=\"string\">&#x27;lili&#x27;</span>,<span class=\"number\">1003</span>,<span class=\"string\">&#x27;6-1&#x27;</span>,<span class=\"string\">&#x27;7895&#x27;</span>,sysdate,<span class=\"number\">1002</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> mv_v2;</span><br><span class=\"line\">#物化视图中没有新插入的数据。</span><br><span class=\"line\">#PL<span class=\"operator\">/</span><span class=\"keyword\">SQL</span>执行</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">DBMS_MVIEW.refresh(<span class=\"string\">&#x27;mv_v2&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\">#或者在命令行执行</span><br><span class=\"line\"><span class=\"keyword\">EXEC</span> DBMS_MVIEW.refresh(<span class=\"string\">&#x27;mv_v2&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>);</span><br><span class=\"line\">#DBMS_MVIEW.refresh 实际上是系统内置的存储过程</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建自动刷新的物化视图</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> materialized <span class=\"keyword\">view</span> mv_v3</span><br><span class=\"line\">build immediate</span><br><span class=\"line\">refresh force</span><br><span class=\"line\"><span class=\"keyword\">on</span> <span class=\"keyword\">commit</span></span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,ta.name <span class=\"keyword\">as</span> addressname <span class=\"keyword\">from</span> t_owners twn,t_address ta <span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id(<span class=\"operator\">+</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners <span class=\"keyword\">VALUES</span> (<span class=\"number\">1005</span>,<span class=\"string\">&#x27;longlong&#x27;</span>,<span class=\"number\">1002</span>,<span class=\"string\">&#x27;6-2&#x27;</span>,<span class=\"string\">&#x27;1234&#x27;</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> mv_v3;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建时不生成数据的物化视图</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> materailized <span class=\"keyword\">view</span> mv_v4</span><br><span class=\"line\">build deferred</span><br><span class=\"line\">refresh force <span class=\"keyword\">on</span> <span class=\"keyword\">commit</span></span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,ta.name <span class=\"keyword\">as</span> addressname <span class=\"keyword\">from</span> t_owners twn,t_address ta <span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id(<span class=\"operator\">+</span>);</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> mv_v4;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">DBMS_MVIEW.refresh(<span class=\"string\">&#x27;mv_v4&#x27;</span>,<span class=\"string\">&#x27;C&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners <span class=\"keyword\">VALUES</span> (<span class=\"number\">1006</span>,<span class=\"string\">&#x27;chuan&#x27;</span>,<span class=\"number\">1001</span>,<span class=\"string\">&#x27;7-2&#x27;</span>,<span class=\"string\">&#x27;7534&#x27;</span>,sysdate,<span class=\"number\">1003</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> mv_v4;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>删除物化视图</li>\n</ul>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">drop materialized view view_name;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建增量刷新的物化视图</li>\n</ul>\n<p>如果创建增量刷新的物化视图，必须首先创建物化视图日志</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#创建物化视图日志</span><br><span class=\"line\"><span class=\"keyword\">create</span> materialized <span class=\"keyword\">view</span> log <span class=\"keyword\">on</span> t_owners <span class=\"keyword\">with</span> rowid;</span><br><span class=\"line\"><span class=\"keyword\">create</span> materialized <span class=\"keyword\">view</span> log <span class=\"keyword\">on</span> t_address <span class=\"keyword\">with</span> rowid;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> materialized <span class=\"keyword\">view</span> mv_v5</span><br><span class=\"line\">build immediate</span><br><span class=\"line\">refresh fast</span><br><span class=\"line\"><span class=\"keyword\">on</span> <span class=\"keyword\">commit</span></span><br><span class=\"line\"><span class=\"keyword\">as</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> twn.<span class=\"operator\">*</span>,twn.rowid <span class=\"keyword\">as</span> twnrowid,ta.rowid <span class=\"keyword\">as</span> tarowid,ta.name <span class=\"keyword\">as</span> addressname <span class=\"keyword\">from</span> t_owners twn,t_address ta <span class=\"keyword\">where</span> twn.addressid<span class=\"operator\">=</span>ta.id(<span class=\"operator\">+</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners <span class=\"keyword\">VALUES</span> (<span class=\"number\">1007</span>,<span class=\"string\">&#x27;su&#x27;</span>,<span class=\"number\">1002</span>,<span class=\"string\">&#x27;8-2&#x27;</span>,<span class=\"string\">&#x27;3455&#x27;</span>,sysdate,<span class=\"number\">1002</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\">#创建增量刷新的物化视图，必须：</span><br><span class=\"line\">#<span class=\"number\">1</span>、创建物化视图中涉及表的物化视图日志。</span><br><span class=\"line\">#<span class=\"number\">2</span>、在查询语句中，必须包含所有表的rowid(以rowid方式建立物化视图日志)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"8、序列\"><a href=\"#8、序列\" class=\"headerlink\" title=\"8、序列\"></a>8、序列</h2><p>序列是 ORACLE 提供的用于产生一系列唯一数字的数据库对象。</p>\n<h4 id=\"创建序列语法\"><a href=\"#创建序列语法\" class=\"headerlink\" title=\"创建序列语法\"></a>创建序列语法</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> sequence sequence_name;</span><br></pre></td></tr></table></figure>\n\n<p>通过序列的伪列来访问序列的值,NEXTVAL 返回序列的下一个值,CURRVAL 返回序列的当前值</p>\n<blockquote>\n<p>注意：我们在刚建立序列后，无法提取当前值，只有先提取下一个值时才能再次提取当前值。</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> sequence sequence_one;</span><br><span class=\"line\"><span class=\"keyword\">select</span> sequence_one.nextval <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">select</span> sequence_one.currval <span class=\"keyword\">from</span> dual;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"创建复杂序列\"><a href=\"#创建复杂序列\" class=\"headerlink\" title=\"创建复杂序列\"></a>创建复杂序列</h4><ul>\n<li>语法：</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> sequence sequence_one</span><br><span class=\"line\">[increment <span class=\"keyword\">by</span> n] #递增的序列值是n 如果n是正数就递增,如果是负数就递减 默认是<span class=\"number\">1</span></span><br><span class=\"line\">[<span class=\"keyword\">start</span> <span class=\"keyword\">with</span> n] #开始的值,递增默认是 minvalue 递减是 maxvalue</span><br><span class=\"line\">[&#123;maxvalue n<span class=\"operator\">|</span>nomaxvalue&#125;] #最大值</span><br><span class=\"line\">[&#123;minvalue n<span class=\"operator\">|</span>nominvalue&#125;]#最小值</span><br><span class=\"line\">[&#123;<span class=\"keyword\">cycle</span> <span class=\"operator\">|</span> nocycle&#125;] #循环</span><br><span class=\"line\">[&#123;cache n <span class=\"operator\">|</span> nocache&#125;] #分配并存入到内存中</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>创建有最大值的非循环序列</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> sequence seq_1</span><br><span class=\"line\">increment <span class=\"keyword\">by</span> <span class=\"number\">20</span></span><br><span class=\"line\">maxvalue <span class=\"number\">100</span></span><br><span class=\"line\">minvalue <span class=\"number\">20</span></span><br><span class=\"line\">nocycle;</span><br><span class=\"line\"><span class=\"keyword\">select</span> seq_1.nextval <span class=\"keyword\">from</span> dual;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>有最大值的循环序列</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> sequence seq_2</span><br><span class=\"line\">increment <span class=\"keyword\">by</span> <span class=\"number\">20</span></span><br><span class=\"line\">maxvalue <span class=\"number\">100</span></span><br><span class=\"line\">minvalue <span class=\"number\">20</span></span><br><span class=\"line\"><span class=\"keyword\">cycle</span></span><br><span class=\"line\">cache <span class=\"number\">4</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意：CACHE &lt;&#x3D; CEIL((MAXVALUE - MINVALUE) &#x2F; ABS(INCREMENT))<br>例如：cache &lt;&#x3D;ceil(100-20)&#x2F;abs(20)</p>\n</blockquote>\n<h4 id=\"修改和删除序列\"><a href=\"#修改和删除序列\" class=\"headerlink\" title=\"修改和删除序列\"></a>修改和删除序列</h4><p>修改序列：使用 ALTER SEQUENCE 语句修改序列，不能更改序列的 STARTWITH 参数</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">ALTER</span> SEQUENCE 序列名称 MAXVALUE <span class=\"number\">5000</span> <span class=\"keyword\">CYCLE</span>;</span><br><span class=\"line\"><span class=\"keyword\">alter</span> sequence seq_1 maxvalue <span class=\"number\">300</span> <span class=\"keyword\">cycle</span> cache <span class=\"number\">14</span>;</span><br></pre></td></tr></table></figure>\n\n<p>删除序列</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">DROP</span> SEQUENCE 序列名称;</span><br><span class=\"line\"><span class=\"keyword\">drop</span> sequence seq_1;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"9、同义词\"><a href=\"#9、同义词\" class=\"headerlink\" title=\"9、同义词\"></a>9、同义词</h2><p>​\t同义词实质上是指定方案对象的一个别名。通过屏蔽对象的名称和所有者以及对分布式数据库的远程对象提供位置透明性，同义词可以提供一定程度的安全性。同时，同义词的易用性较好，降低了数据库用户的 SQL 语句复杂度。</p>\n<p>​\t同义词允许基对象重命名或者移动，这时，只需对同义词进行重定义，基于同义词的应用程序可以继续运行而无需修改。</p>\n<p>​\t同义词本身不涉及安全，当你赋予一个同义词对象权限时，你实质上是在给同义词的基对象赋予权限，同义词只是基对象的一个别名。</p>\n<h4 id=\"创建与使用同义词\"><a href=\"#创建与使用同义词\" class=\"headerlink\" title=\"创建与使用同义词\"></a>创建与使用同义词</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> [public] SYNONYM synonym <span class=\"keyword\">for</span> object</span><br><span class=\"line\">synonym:创建的同义词的名称</span><br><span class=\"line\">object:表示表，视图，序列等我们要创建同义词的对象的名称.创建共有的同义词，以另外的用户登陆，也可以使用公有同义词</span><br><span class=\"line\"><span class=\"keyword\">create</span> public SYNONYM twn <span class=\"keyword\">for</span> t_owners;</span><br><span class=\"line\">创建私有的同义词</span><br><span class=\"line\"><span class=\"keyword\">create</span> SYNONYM twn1 <span class=\"keyword\">for</span> t_owners;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"10、索引\"><a href=\"#10、索引\" class=\"headerlink\" title=\"10、索引\"></a>10、索引</h2><p>索引是用于加速数据存取的数据对象。合理的使用索引可以大大降低 i&#x2F;o 次数,从而提高数据访问性能。</p>\n<p>索引是需要占据存储空间的，也可以理解为是一种特殊的数据。形式类似于下图的一棵“树”，而树的节点存储的就是每条记录的物理地址，也就是我们提到的伪列（ROWID）</p>\n<h4 id=\"普通索引\"><a href=\"#普通索引\" class=\"headerlink\" title=\"普通索引\"></a>普通索引</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> index index_name <span class=\"keyword\">on</span> table_name(column_name);#根据某张表的某列来创建索引。</span><br><span class=\"line\"><span class=\"keyword\">create</span> index t_owners_name <span class=\"keyword\">on</span> t_owners(name);</span><br><span class=\"line\"></span><br><span class=\"line\">#索引性能测试</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> T_INDEXTEST (</span><br><span class=\"line\">ID NUMBER,</span><br><span class=\"line\">NAME VARCHAR2(<span class=\"number\">30</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"keyword\">BEGIN</span></span><br><span class=\"line\"><span class=\"keyword\">FOR</span> i <span class=\"keyword\">in</span> <span class=\"number\">1.</span><span class=\"number\">.1000000</span></span><br><span class=\"line\">loop</span><br><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> T_INDEXTEST <span class=\"keyword\">VALUES</span>(i,<span class=\"string\">&#x27;AA&#x27;</span><span class=\"operator\">||</span>i);</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">END</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> index t_indextest_name <span class=\"keyword\">on</span> t_indextest(name);</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_indextest <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">765432</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_indextest <span class=\"keyword\">where</span> name<span class=\"operator\">=</span><span class=\"string\">&#x27;AA765432&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"唯一索引\"><a href=\"#唯一索引\" class=\"headerlink\" title=\"唯一索引\"></a>唯一索引</h4><p>如果我们需要在某个表某个列创建索引，而这列的值是不会重复的。这是我们可以创建唯一索引。</p>\n<p>语法</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">unique</span> index index_name <span class=\"keyword\">on</span> table_name(column_name);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"复合索引\"><a href=\"#复合索引\" class=\"headerlink\" title=\"复合索引\"></a>复合索引</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> index index_name <span class=\"keyword\">on</span> table_name(column_name,column_name);</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"反向键索引\"><a href=\"#反向键索引\" class=\"headerlink\" title=\"反向键索引\"></a>反向键索引</h4><p>​\t应用场景：当某个字段的值为连续增长的值，如果构建标准索引，会形成歪脖子树。这样会增加查询的层数，性能会下降。建立反向键索引，可以使索引的值变得不规则，从而使索引树能够均匀分布。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> index 索引名称 <span class=\"keyword\">on</span> 表名(列名) reverse;</span><br><span class=\"line\"><span class=\"keyword\">create</span> index t_indextest_name_reverse <span class=\"keyword\">on</span> t_indextest(id) reverse;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"位图索引\"><a href=\"#位图索引\" class=\"headerlink\" title=\"位图索引\"></a>位图索引</h4><ul>\n<li>使用场景：位图索引适合创建在低基数列上</li>\n<li>位图索引不直接存储 ROWID，而是存储字节位到 ROWID 的映射</li>\n<li>优点：减少响应时间，节省空间占用</li>\n</ul>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> bitmap index index_name table_name(column_name);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"11、PL-SQL\"><a href=\"#11、PL-SQL\" class=\"headerlink\" title=\"11、PL&#x2F;SQL\"></a>11、PL&#x2F;SQL</h2><p>PL&#x2F;SQL（Procedure Language&#x2F;SQL）是 Oracle 对 sql 语言的过程化扩展，指在 SQL 命令语言中增加了过程处理语句（如分支、循环等），使 SQL 语言具有过程处理能力。把 SQL 语言的数据操纵能力与过程语言的数据处理能力结合起来，使得 PLSQL 面向过程但比过程语言简单、高效、灵活和实用。</p>\n<h4 id=\"基本语法结构\"><a href=\"#基本语法结构\" class=\"headerlink\" title=\"基本语法结构\"></a>基本语法结构</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[<span class=\"keyword\">declare</span>  <span class=\"comment\">--声明变量]</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">逻辑代码</span><br><span class=\"line\">[exception <span class=\"comment\">--异常处理]</span></span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">声明变量的语法</span><br><span class=\"line\">变量名 类型(长度)</span><br><span class=\"line\">变量赋值语法</span><br><span class=\"line\">变量名:<span class=\"operator\">=</span>变量值</span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_usenum number;</span><br><span class=\"line\">v_usenum2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_price:<span class=\"operator\">=</span><span class=\"number\">2.45</span>;</span><br><span class=\"line\">v_usenum:<span class=\"operator\">=</span><span class=\"number\">8012</span>;</span><br><span class=\"line\">v_usenum2:<span class=\"operator\">=</span>round(v_usenum<span class=\"operator\">/</span><span class=\"number\">1000</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>round(v_price<span class=\"operator\">*</span>v_usenum2,<span class=\"number\">2</span>);</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;单价：&#x27;</span><span class=\"operator\">||</span>v_price<span class=\"operator\">||</span><span class=\"string\">&#x27;吨数:&#x27;</span><span class=\"operator\">||</span>v_usenum2<span class=\"operator\">||</span><span class=\"string\">&#x27;金额：&#x27;</span><span class=\"operator\">||</span>v_money);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>select into方式赋值</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> 列名 <span class=\"keyword\">into</span> 变量名 <span class=\"keyword\">from</span> 表名 <span class=\"keyword\">where</span> 条件;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>注意：结果必须是一条记录 ，有多条记录和没有记录都会报错</p>\n</blockquote>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> usenum,num0,num1 <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"number\">2023</span> <span class=\"keyword\">and</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_usenum number;</span><br><span class=\"line\">v_usenum2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_num0 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_num1 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_price:<span class=\"operator\">=</span><span class=\"number\">2.45</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> usenum,num0,num1 <span class=\"keyword\">into</span> v_usenum,v_num0,v_num1 <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"number\">2023</span> <span class=\"keyword\">and</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">v_usenum2:<span class=\"operator\">=</span>round(v_usenum<span class=\"operator\">/</span><span class=\"number\">1000</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>round(v_price<span class=\"operator\">*</span>v_usenum2,<span class=\"number\">2</span>);</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;单价：&#x27;</span><span class=\"operator\">||</span>v_price<span class=\"operator\">||</span><span class=\"string\">&#x27;吨数：&#x27;</span><span class=\"operator\">||</span>v_usenum2<span class=\"operator\">||</span><span class=\"string\">&#x27;金额：&#x27;</span><span class=\"operator\">||</span>v_money<span class=\"operator\">||</span><span class=\"string\">&#x27;上月字数：&#x27;</span><span class=\"operator\">||</span>v_num0<span class=\"operator\">||</span><span class=\"string\">&#x27;本月字数&#x27;</span><span class=\"operator\">||</span>v_num1);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"属性类型\"><a href=\"#属性类型\" class=\"headerlink\" title=\"属性类型\"></a>属性类型</h4><p>%TYPE 引用型  作用：引用某表某列的字段类型</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_usenum t_account.usenum<span class=\"operator\">%</span>TYPE;</span><br><span class=\"line\">v_num0 t_account.num0<span class=\"operator\">%</span>TYPE;</span><br><span class=\"line\">v_num1 t_account.num1<span class=\"operator\">%</span>TYPE;</span><br><span class=\"line\">v_usenum2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_price:<span class=\"operator\">=</span><span class=\"number\">2.55</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> usenum,num0,num1 <span class=\"keyword\">into</span> v_usenum,v_num0,v_num1 <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"number\">2023</span> <span class=\"keyword\">and</span> id<span class=\"operator\">=</span><span class=\"number\">3</span>;</span><br><span class=\"line\">v_usenum2:<span class=\"operator\">=</span>round(v_usenum<span class=\"operator\">/</span><span class=\"number\">1000</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>v_price<span class=\"operator\">*</span>v_usenum2;</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;单价：&#x27;</span><span class=\"operator\">||</span>v_price<span class=\"operator\">||</span><span class=\"string\">&#x27;吨数：&#x27;</span><span class=\"operator\">||</span>v_usenum2<span class=\"operator\">||</span><span class=\"string\">&#x27;金额：&#x27;</span><span class=\"operator\">||</span>v_money<span class=\"operator\">||</span><span class=\"string\">&#x27;上月字数：&#x27;</span><span class=\"operator\">||</span>v_num0<span class=\"operator\">||</span><span class=\"string\">&#x27;本月字数&#x27;</span><span class=\"operator\">||</span>v_num1);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>%ROWTYPE 记录型 ，上例中的例子可以用下面的代码代替作用: 标识某个表的行记录类型</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_account t_account<span class=\"operator\">%</span>ROWTYPE;</span><br><span class=\"line\">v_usenum2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_price:<span class=\"operator\">=</span><span class=\"number\">3.14</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">into</span> v_account <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"number\">2023</span> <span class=\"keyword\">and</span> id<span class=\"operator\">=</span><span class=\"number\">3</span>;</span><br><span class=\"line\">v_usenum2:<span class=\"operator\">=</span>round(v_account.usenum<span class=\"operator\">/</span><span class=\"number\">1000</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>v_price<span class=\"operator\">*</span>v_usenum2;</span><br><span class=\"line\">DBMS_OUTPUT.put_line(<span class=\"string\">&#x27;单价：&#x27;</span><span class=\"operator\">||</span>v_price<span class=\"operator\">||</span><span class=\"string\">&#x27;吨数：&#x27;</span><span class=\"operator\">||</span>v_usenum2<span class=\"operator\">||</span><span class=\"string\">&#x27;金额：&#x27;</span><span class=\"operator\">||</span>v_money<span class=\"operator\">||</span><span class=\"string\">&#x27;上月字数：&#x27;</span><span class=\"operator\">||</span>v_account.num0<span class=\"operator\">||</span><span class=\"string\">&#x27;本月字数&#x27;</span><span class=\"operator\">||</span>v_account.num1);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"异常\"><a href=\"#异常\" class=\"headerlink\" title=\"异常\"></a>异常</h4><p>在运行程序时出现的错误叫做异常，发生异常后，语句将停止执行，控制权转移到 PL&#x2F;SQL 块的异常处理部分</p>\n<p>异常有两种类型：</p>\n<ul>\n<li>预定义异常 - 当 PL&#x2F;SQL 程序违反 Oracle 规则或超越系统限制时隐式引发。</li>\n<li>用户定义异常 - 用户可以在 PL&#x2F;SQL 块的声明部分定义异常，自定义的异常通过 RAISE 语句显式引发。</li>\n</ul>\n<p>oracle预定义的异常21个</p>\n<table>\n<thead>\n<tr>\n<th>系统异常</th>\n<th>产生原因</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>ACCESS_INTO_NULL</td>\n<td>未定义对象</td>\n</tr>\n<tr>\n<td>CASE_NOT_FOUND</td>\n<td>CASE 中若未包含相应的 WHEN ，并且没有设置 ELSE 时</td>\n</tr>\n<tr>\n<td>COLLECTION_IS_NULL</td>\n<td>集合元素未初始化</td>\n</tr>\n<tr>\n<td>CURSER_ALREADY_OPEN</td>\n<td>游标已经打开</td>\n</tr>\n<tr>\n<td>DUP_VAL_ON_INDEX</td>\n<td>唯一索引对应的列上有重复值</td>\n</tr>\n<tr>\n<td>INVALID_CURSOR</td>\n<td>在不合法的游标上进行操作</td>\n</tr>\n<tr>\n<td>INVALID_NUMBER</td>\n<td>内置的SQL语句不能将字符转化为数字</td>\n</tr>\n<tr>\n<td><em><strong>NO_DATA_FOUND</strong></em></td>\n<td><em><strong>使用select into 没有行返回行</strong></em></td>\n</tr>\n<tr>\n<td><em><strong>TOO_MANY_ROWS</strong></em></td>\n<td><em><strong>使用select into 有多行数据返回</strong></em></td>\n</tr>\n<tr>\n<td>ZERO_DIVIDE</td>\n<td>除数为0</td>\n</tr>\n<tr>\n<td>SUBSCRIPT_BEYOND_COUNT</td>\n<td>元素下标超过嵌套表或 VARRAY 的最大值</td>\n</tr>\n<tr>\n<td>SUBSCRIPT_OUTSIDE_LIMIT</td>\n<td>使用嵌套表或 VARRAY 时，将下标指定为负数</td>\n</tr>\n<tr>\n<td>VALUE_ERROR</td>\n<td>赋值时，变量长度不足以容纳实际数据</td>\n</tr>\n<tr>\n<td>LOGIN_DENIED</td>\n<td>PL&#x2F;SQL 应用程序连接到 oracle 数据库时，提供了不正确的用户名或密码</td>\n</tr>\n<tr>\n<td>NOT_LOGGED_ON</td>\n<td>PL&#x2F;SQL 应用程序在没有连接 oralce 数据库的情况下访问数据</td>\n</tr>\n<tr>\n<td>PROGRAM_ERROR</td>\n<td>PL&#x2F;SQL 内部问题，可能需要重装数据字典＆ PL&#x2F;SQL 系统包</td>\n</tr>\n<tr>\n<td>ROWTYPE_MISMATCH</td>\n<td>宿主游标变量与 PL&#x2F;SQL 游标变量的返回类型不兼容</td>\n</tr>\n<tr>\n<td>SELF_IS_NULL</td>\n<td>使用对象类型时，在 NULL对象上调用对象方法</td>\n</tr>\n<tr>\n<td>STORAGE_ERROR</td>\n<td>运行 PL&#x2F;SQL 时，超出内存空间</td>\n</tr>\n<tr>\n<td>SYS_INVALID_ID</td>\n<td>无效的 ROWID 字符串</td>\n</tr>\n<tr>\n<td>TIMEOUT_ON_RESOURCE</td>\n<td>Oracle 在等待资源时超时</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n</tbody></table>\n<p>语法结构：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">exception</span><br><span class=\"line\"><span class=\"keyword\">when</span> 异常类型 <span class=\"keyword\">then</span></span><br><span class=\"line\">异常处理逻辑</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_price number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_usenum t_account.usenum<span class=\"operator\">%</span>TYPE;</span><br><span class=\"line\">v_usenum2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_price:<span class=\"operator\">=</span><span class=\"number\">3.55</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> usenum <span class=\"keyword\">into</span> v_usenum <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"number\">2023</span> <span class=\"keyword\">and</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br><span class=\"line\">v_usenum2:<span class=\"operator\">=</span>round(v_usenum<span class=\"operator\">/</span><span class=\"number\">1000</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>v_price<span class=\"operator\">*</span>v_usenum2;</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;单价：&#x27;</span><span class=\"operator\">||</span>v_price<span class=\"operator\">||</span><span class=\"string\">&#x27;吨数:&#x27;</span><span class=\"operator\">||</span>v_usenum2<span class=\"operator\">||</span><span class=\"string\">&#x27;金额：&#x27;</span><span class=\"operator\">||</span>v_money);</span><br><span class=\"line\">exception</span><br><span class=\"line\"><span class=\"keyword\">when</span> NO_DATA_FOUND <span class=\"keyword\">then</span></span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;未找到数据，请核实&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">when</span> TOO_MANY_ROWS <span class=\"keyword\">then</span></span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;查询条件有误，返回多条信息，请核实&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"条件判断\"><a href=\"#条件判断\" class=\"headerlink\" title=\"条件判断\"></a>条件判断</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#基本语法<span class=\"number\">1</span></span><br><span class=\"line\">if 条件 <span class=\"keyword\">then</span></span><br><span class=\"line\"> 业务逻辑</span><br><span class=\"line\"><span class=\"keyword\">end</span> if;</span><br><span class=\"line\"></span><br><span class=\"line\">#基本语法<span class=\"number\">2</span></span><br><span class=\"line\">if 条件 <span class=\"keyword\">then</span></span><br><span class=\"line\">业务逻辑</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">业务逻辑</span><br><span class=\"line\"><span class=\"keyword\">end</span> if;</span><br><span class=\"line\"></span><br><span class=\"line\">#基本语法<span class=\"number\">3</span></span><br><span class=\"line\">if 条件 <span class=\"keyword\">then</span></span><br><span class=\"line\">业务逻辑</span><br><span class=\"line\">elseif 条件 <span class=\"keyword\">then</span></span><br><span class=\"line\">业务逻辑</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">业务逻辑</span><br><span class=\"line\"><span class=\"keyword\">end</span> if;</span><br></pre></td></tr></table></figure>\n\n<p>需求：设置三个等级的水费 5 吨以下 2.45 元&#x2F;吨 5 吨到 10 吨部分 3.45 元&#x2F;吨 ，超过 10 吨部分 4.45 ，根据使用水费的量来计算阶梯水费。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_price1 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_price2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_price3 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_account t_account<span class=\"operator\">%</span>ROWTYPE;</span><br><span class=\"line\">v_usenum2 number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">into</span> v_account <span class=\"keyword\">from</span> t_account <span class=\"keyword\">where</span> <span class=\"keyword\">year</span><span class=\"operator\">=</span><span class=\"number\">2023</span> <span class=\"keyword\">and</span> id<span class=\"operator\">=</span><span class=\"number\">3</span>;</span><br><span class=\"line\">v_usenum2:<span class=\"operator\">=</span>round(v_account.usenum<span class=\"operator\">/</span><span class=\"number\">1000</span>,<span class=\"number\">2</span>);</span><br><span class=\"line\">v_price1:<span class=\"operator\">=</span><span class=\"number\">2.45</span>;</span><br><span class=\"line\">v_price2:<span class=\"operator\">=</span><span class=\"number\">3.45</span>;</span><br><span class=\"line\">v_price3:<span class=\"operator\">=</span><span class=\"number\">4.45</span>;</span><br><span class=\"line\">if v_usenum2<span class=\"operator\">&lt;</span><span class=\"number\">5</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>v_price1<span class=\"operator\">*</span>v_usenum2;</span><br><span class=\"line\">elsif <span class=\"number\">5</span><span class=\"operator\">&lt;</span>v_usenum2 <span class=\"keyword\">and</span> v_usenum2<span class=\"operator\">&lt;</span><span class=\"number\">10</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>v_price1<span class=\"operator\">*</span><span class=\"number\">5</span><span class=\"operator\">+</span>v_price2<span class=\"operator\">*</span>(v_usenum2<span class=\"number\">-5</span>);</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">v_money:<span class=\"operator\">=</span>v_price1<span class=\"operator\">*</span><span class=\"number\">5</span><span class=\"operator\">+</span>v_price2<span class=\"operator\">*</span><span class=\"number\">5</span><span class=\"operator\">+</span>v_price3<span class=\"operator\">*</span>(v_usenum2<span class=\"number\">-5</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span> if;</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;吨数：&#x27;</span><span class=\"operator\">||</span>v_usenum2<span class=\"operator\">||</span><span class=\"string\">&#x27;金额：&#x27;</span><span class=\"operator\">||</span>v_money<span class=\"operator\">||</span><span class=\"string\">&#x27;上月字数：&#x27;</span><span class=\"operator\">||</span>v_account.num0<span class=\"operator\">||</span><span class=\"string\">&#x27;本月字数&#x27;</span><span class=\"operator\">||</span>v_account.num1);</span><br><span class=\"line\">exception</span><br><span class=\"line\"><span class=\"keyword\">when</span> NO_DATA_FOUND <span class=\"keyword\">then</span></span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;未找到数据，请核实&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">when</span> TOO_MANY_ROWS <span class=\"keyword\">then</span></span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;有多行数据被查询&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"循环\"><a href=\"#循环\" class=\"headerlink\" title=\"循环\"></a>循环</h4><ol>\n<li>无条件循环</li>\n</ol>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">loop</span><br><span class=\"line\">循环语句</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"></span><br><span class=\"line\">#例子</span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_num number;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_num:<span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\">loop</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;v_num=&#x27;</span><span class=\"operator\">||</span>v_num);</span><br><span class=\"line\">v_num:<span class=\"operator\">=</span>v_num<span class=\"operator\">+</span><span class=\"number\">1</span>;</span><br><span class=\"line\">if v_num<span class=\"operator\">=</span><span class=\"number\">100</span> <span class=\"keyword\">then</span></span><br><span class=\"line\">exit;</span><br><span class=\"line\"><span class=\"keyword\">end</span> if;</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">#循环部分可以改写成</span><br><span class=\"line\">loop</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;v_num=&#x27;</span><span class=\"operator\">||</span>v_num);</span><br><span class=\"line\">v_num:<span class=\"operator\">=</span>v_num<span class=\"operator\">+</span><span class=\"number\">1</span>;</span><br><span class=\"line\">exit <span class=\"keyword\">when</span> v_num<span class=\"operator\">&gt;</span><span class=\"number\">100</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br></pre></td></tr></table></figure>\n\n<pre><code> 2.条件循环\n</code></pre>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">while 条件</span><br><span class=\"line\">loop</span><br><span class=\"line\">循环体</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"></span><br><span class=\"line\">#范例：输出从<span class=\"number\">1</span>开始的<span class=\"number\">100</span>个数</span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_num number;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_num:<span class=\"operator\">=</span><span class=\"number\">0</span>;</span><br><span class=\"line\">while v_num<span class=\"operator\">&lt;</span><span class=\"number\">101</span></span><br><span class=\"line\">loop</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;v_num=&#x27;</span><span class=\"operator\">||</span>v_num);</span><br><span class=\"line\">v_num:<span class=\"operator\">=</span>v_num<span class=\"operator\">+</span><span class=\"number\">1</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>​\t3.for循环</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">#基本语法</span><br><span class=\"line\"><span class=\"keyword\">for</span> 变量 <span class=\"keyword\">in</span> 起始值..终值</span><br><span class=\"line\">loop </span><br><span class=\"line\">循环体</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> v_num <span class=\"keyword\">in</span> <span class=\"number\">0.</span><span class=\"number\">.100</span></span><br><span class=\"line\">loop</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;v_num=&#x27;</span><span class=\"operator\">||</span>v_num);</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"游标\"><a href=\"#游标\" class=\"headerlink\" title=\"游标\"></a>游标</h4><p>游标是系统为用户开设的一个数据缓冲区,存放 SQL 语句的执行结果。我们可以把游标理解为 PL&#x2F;SQL 中的结果集。</p>\n<p>在声明区声明游标，语法如下：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">cursor</span> 游标名称 <span class=\"keyword\">is</span> <span class=\"keyword\">SQL</span> 语句;</span><br></pre></td></tr></table></figure>\n\n<p>使用游标语法</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">open</span> 游标名称</span><br><span class=\"line\">loop</span><br><span class=\"line\">\t<span class=\"keyword\">fetch</span> 游标名称 <span class=\"keyword\">into</span> 变量;</span><br><span class=\"line\">\texit <span class=\"keyword\">when</span> 游标名称<span class=\"operator\">%</span>notfound;</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">close</span> 游标名称;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">curr_jylsh varchar2(<span class=\"number\">50</span>);</span><br><span class=\"line\"><span class=\"keyword\">cursor</span> lyjsh_cursor <span class=\"keyword\">is</span> <span class=\"keyword\">select</span> jylsh <span class=\"keyword\">from</span> jylsh_table;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">open</span> lyjsh_cursor;</span><br><span class=\"line\">\tloop</span><br><span class=\"line\">\t<span class=\"keyword\">fetch</span> lyjsh_cursor <span class=\"keyword\">into</span> curr_jylsh;</span><br><span class=\"line\">\texit <span class=\"keyword\">when</span> lyjsh_cursor<span class=\"operator\">%</span>notfound;</span><br><span class=\"line\">\t<span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_sbf_sb_cxjm_sbbc_fail <span class=\"keyword\">values</span>(curr_jylsh,sysdate,<span class=\"string\">&#x27;ljh&#x27;</span>,<span class=\"string\">&#x27;00&#x27;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">update</span> sbf_sb_cxjmhdxx <span class=\"keyword\">set</span> sjclzt<span class=\"operator\">=</span><span class=\"string\">&#x27;00&#x27;</span>,xgrq<span class=\"operator\">=</span>sysdate,xgr_dm<span class=\"operator\">=</span><span class=\"string\">&#x27;ljh&#x27;</span> <span class=\"keyword\">where</span> cxjmhd_id <span class=\"keyword\">in</span> (<span class=\"keyword\">select</span> lymx_id <span class=\"keyword\">from</span> sbf_sb_wyxx <span class=\"keyword\">where</span> jylsh<span class=\"operator\">=</span>curr_jylsh);</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> sbf_sb_cxjmwyxx e <span class=\"keyword\">where</span> e.jylsh<span class=\"operator\">=</span>curr_jylsh;</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> sbf_sb_cxjm_sbwyxx e <span class=\"keyword\">where</span> e.jylsh<span class=\"operator\">=</span>curr_jylsh;</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">delete</span> <span class=\"keyword\">from</span> sbf_sb_wyxx e <span class=\"keyword\">where</span> e.jylsh<span class=\"operator\">=</span>curr_jylsh;</span><br><span class=\"line\">\t<span class=\"keyword\">commit</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">update</span> sbf_sb </span><br><span class=\"line\">\t<span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">close</span> lyjsh_cursor;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\">\t</span><br></pre></td></tr></table></figure>\n\n<p>需求：打印业主类型为 1 的价格表</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span> </span><br><span class=\"line\">v_pricetable t_pricetable<span class=\"operator\">%</span>ROWTYPE;</span><br><span class=\"line\"><span class=\"keyword\">cursor</span> cur_pricetable <span class=\"keyword\">is</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_pricetable <span class=\"keyword\">where</span> ownertypeid<span class=\"operator\">=</span><span class=\"number\">1001</span>;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">open</span> cur_pricetable;</span><br><span class=\"line\">\tloop</span><br><span class=\"line\">\t<span class=\"keyword\">fetch</span>  cur_pricetable <span class=\"keyword\">into</span> v_pricetable;</span><br><span class=\"line\">\texit <span class=\"keyword\">when</span> cur_pricetable<span class=\"operator\">%</span>notfound;</span><br><span class=\"line\">\tdbms_output.put_line( <span class=\"string\">&#x27;价格:&#x27;</span><span class=\"operator\">||</span>v_pricetable.price <span class=\"operator\">||</span><span class=\"string\">&#x27;吨位：&#x27;</span><span class=\"operator\">||</span>v_pricetable.minnum<span class=\"operator\">||</span><span class=\"string\">&#x27;-&#x27;</span><span class=\"operator\">||</span>v_pricetable.maxnum );</span><br><span class=\"line\">\t<span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">close</span> cur_pricetable;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>带参数的游标</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">v_pricetable t_pricetable<span class=\"operator\">%</span>ROWTYPE;</span><br><span class=\"line\"><span class=\"keyword\">cursor</span> cur_pricetable(v_ownertypeid number) <span class=\"keyword\">is</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_pricetable <span class=\"keyword\">where</span> ownertypeid<span class=\"operator\">=</span>v_ownertypeid;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">open</span> cur_pricetable(<span class=\"number\">1001</span>);</span><br><span class=\"line\">loop</span><br><span class=\"line\">\t<span class=\"keyword\">fetch</span> cur_pricetable <span class=\"keyword\">into</span> v_pricetable;</span><br><span class=\"line\">\texit <span class=\"keyword\">when</span> cur_pricetable<span class=\"operator\">%</span>notfound;</span><br><span class=\"line\">\tdbms_output.put_line(<span class=\"string\">&#x27;价格:&#x27;</span><span class=\"operator\">||</span>v_pricetable.price <span class=\"operator\">||</span><span class=\"string\">&#x27;吨位：&#x27;</span><span class=\"operator\">||</span>v_pricetable.minnum<span class=\"operator\">||</span><span class=\"string\">&#x27;-&#x27;</span><span class=\"operator\">||</span>v_pricetable.maxnum );</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;\t</span><br><span class=\"line\"><span class=\"keyword\">close</span> cur_pricetable;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<p>for 循环提取游标值</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\"><span class=\"keyword\">cursor</span> cur_pricetable(v_ownertypeid number) <span class=\"keyword\">is</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_pricetable <span class=\"keyword\">where</span> ownertypeid<span class=\"operator\">=</span>v_ownertypeid;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> cur_pricetable <span class=\"keyword\">in</span> cur_pricetable(<span class=\"number\">1001</span>)</span><br><span class=\"line\">loop</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;价格:&#x27;</span><span class=\"operator\">||</span>cur_pricetable.price <span class=\"operator\">||</span><span class=\"string\">&#x27;吨位：&#x27;</span><span class=\"operator\">||</span>cur_pricetable.minnum<span class=\"operator\">||</span><span class=\"string\">&#x27;-&#x27;</span><span class=\"operator\">||</span>cur_pricetable.maxnum );</span><br><span class=\"line\"><span class=\"keyword\">end</span> loop;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"12、存储函数\"><a href=\"#12、存储函数\" class=\"headerlink\" title=\"12、存储函数\"></a>12、存储函数</h2><p>存储函数又称为自定义函数。可以接收一个或多个参数，返回一个结果。在函数中我们可以使用 PL&#x2F;SQL 进行逻辑的处理。</p>\n<h4 id=\"存储函数语法结构\"><a href=\"#存储函数语法结构\" class=\"headerlink\" title=\"存储函数语法结构\"></a>存储函数语法结构</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">function</span> 函数名称(参数名称 参数类型, 参数名称 参数类型, ...)</span><br><span class=\"line\"><span class=\"keyword\">return</span> 结果变量数据类型</span><br><span class=\"line\"><span class=\"keyword\">is</span> 变量声明部分;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">逻辑部分;</span><br><span class=\"line\"><span class=\"keyword\">RETURN</span> 结果变量;</span><br><span class=\"line\">[exception 异常处理部分]</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h4 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span>  <span class=\"keyword\">function</span> pingping(v_name varchar2,v_age number)</span><br><span class=\"line\"><span class=\"keyword\">return</span> varchar2</span><br><span class=\"line\"><span class=\"keyword\">is</span></span><br><span class=\"line\">v_result varchar2(<span class=\"number\">30</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">v_result:<span class=\"operator\">=</span><span class=\"string\">&#x27;姓名&#x27;</span><span class=\"operator\">||</span>v_name<span class=\"operator\">||</span><span class=\"string\">&#x27;-年龄&#x27;</span><span class=\"operator\">||</span>v_age;</span><br><span class=\"line\">dbms_output.put_line(<span class=\"string\">&#x27;==&#x27;</span><span class=\"operator\">||</span>v_result);</span><br><span class=\"line\"><span class=\"keyword\">return</span> v_result;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\">#调用</span><br><span class=\"line\"><span class=\"keyword\">select</span> pingping(<span class=\"string\">&#x27;suhe&#x27;</span>,<span class=\"number\">18</span>) <span class=\"keyword\">from</span> dual;</span><br></pre></td></tr></table></figure>\n\n<p>需求：查询业主 ID，业主名称，业主地址，业主地址使用刚才我们创建的函数来实现。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">function</span> ss(v_id number) <span class=\"keyword\">return</span> varchar2</span><br><span class=\"line\"><span class=\"keyword\">is</span></span><br><span class=\"line\">address_name varchar2(<span class=\"number\">100</span>);</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> name <span class=\"keyword\">into</span> address_name <span class=\"keyword\">from</span> t_address <span class=\"keyword\">where</span> id<span class=\"operator\">=</span>v_id;</span><br><span class=\"line\"><span class=\"keyword\">return</span> address_name;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">select</span> id,name,ss(addressid) <span class=\"keyword\">from</span> t_owners;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"13、存储过程\"><a href=\"#13、存储过程\" class=\"headerlink\" title=\"13、存储过程\"></a>13、存储过程</h2><h4 id=\"概念\"><a href=\"#概念\" class=\"headerlink\" title=\"概念\"></a>概念</h4><p>存储过程是被命名的 PL&#x2F;SQL 块，存储于数据库中，是数据库对象的一种。应用程序可以调用存储过程，执行相应的逻辑。</p>\n<p>存储过程与存储函数都可以封装一定的业务逻辑并返回结果，存在区别如下：<br>1、存储函数中有返回值，且必须返回；而存储过程没有返回值，可以通过传出参数返回多个值。<br>2、存储函数可以在 select 语句中直接使用，而存储过程不能。过程多数是被应用程序所调用。<br>3、存储函数一般都是封装一个查询结果，而存储过程一般都封装一段事务代码。</p>\n<h4 id=\"语法\"><a href=\"#语法\" class=\"headerlink\" title=\"语法\"></a>语法</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">procedure</span> 存储过程名字(参数<span class=\"number\">1</span> 类型,参数<span class=\"number\">2</span> 类型)</span><br><span class=\"line\"><span class=\"keyword\">is</span><span class=\"operator\">|</span><span class=\"keyword\">as</span></span><br><span class=\"line\">变量申明;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">逻辑部分;</span><br><span class=\"line\">[exception 异常处理部分]</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>参数只指定类型，不指定长度</p>\n</blockquote>\n<p>过程参数的三种模式：IN 传入参数（默认）,OUT 传出参数 ，主要用于返回程序运行结果,IN OUT 传入传出参数</p>\n<h4 id=\"案例\"><a href=\"#案例\" class=\"headerlink\" title=\"案例\"></a>案例</h4><p>1、创建不带传出参数的存储过程：添加业主信息</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> sequence owner_sequence <span class=\"keyword\">start</span> <span class=\"keyword\">with</span> <span class=\"number\">1010</span>;</span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">procedure</span> owners_add(v_name varchar2,v_addressid number,v_housenumber varchar2,v_watermeter varchar2,v_type varchar2)</span><br><span class=\"line\"><span class=\"keyword\">is</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners <span class=\"keyword\">values</span>(owner_sequence.nextval,v_name,v_addressid,v_housenumber,v_watermeter,sysdate,v_type);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"><span class=\"keyword\">call</span> owners_add(<span class=\"string\">&#x27;赵伟&#x27;</span>,<span class=\"number\">1001</span>,<span class=\"string\">&#x27;999-3&#x27;</span>,<span class=\"string\">&#x27;132-7&#x27;</span>,<span class=\"number\">1002</span>);</span><br></pre></td></tr></table></figure>\n\n<p>2、创建带传出参数的存储过程</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">procedure</span> owners_add_with_out(v_name varchar2,v_addressid number,v_housenumber varchar2,v_watermeter varchar2,v_type varchar2,v_id <span class=\"keyword\">out</span> number)</span><br><span class=\"line\"><span class=\"keyword\">is</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">select</span> owner_sequence.nextval <span class=\"keyword\">into</span> v_id <span class=\"keyword\">from</span> dual;</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners <span class=\"keyword\">values</span>(v_id,v_name,v_addressid,v_housenumber,v_watermeter,sysdate,v_type);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">declare</span> </span><br><span class=\"line\">v_id number;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">owners_add_with_out(<span class=\"string\">&#x27;王旺旺&#x27;</span>,<span class=\"number\">1</span>,<span class=\"string\">&#x27;922-3&#x27;</span>,<span class=\"string\">&#x27;133-7&#x27;</span>,<span class=\"number\">1</span>,v_id);</span><br><span class=\"line\">DBMS_OUTPUT.put_line(<span class=\"string\">&#x27;增加成功,ID:&#x27;</span><span class=\"operator\">||</span>v_id);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"14、触发器\"><a href=\"#14、触发器\" class=\"headerlink\" title=\"14、触发器\"></a>14、触发器</h2><h4 id=\"概念-1\"><a href=\"#概念-1\" class=\"headerlink\" title=\"概念\"></a>概念</h4><p>数据库触发器是一个与表相关联的、存储的 PL&#x2F;SQL 程序。每当一个特定的数据操作语句(Insert,update,delete)在指定的表上发出时，Oracle 自动地执行触发器中定义的语句序列。</p>\n<p>触发器可用于</p>\n<ul>\n<li>数据确认</li>\n<li>实施复杂的安全性检查</li>\n<li>做审计，跟踪表上所做的数据操作等</li>\n<li>数据的备份和同步</li>\n</ul>\n<p>触发器分类</p>\n<ul>\n<li>前置触发器（BEFORE）</li>\n<li>后置触发器（AFTER）</li>\n</ul>\n<h4 id=\"触发器语法\"><a href=\"#触发器语法\" class=\"headerlink\" title=\"触发器语法\"></a>触发器语法</h4><figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">trigger</span> 触发器名字</span><br><span class=\"line\">before<span class=\"operator\">|</span>after</span><br><span class=\"line\">[<span class=\"keyword\">delete</span>][[<span class=\"keyword\">or</span>] <span class=\"keyword\">insert</span>][[<span class=\"keyword\">or</span>]<span class=\"keyword\">update</span> [<span class=\"keyword\">of</span> 列名]]</span><br><span class=\"line\"><span class=\"keyword\">on</span> 表名</span><br><span class=\"line\">[<span class=\"keyword\">for</span> <span class=\"keyword\">each</span> <span class=\"type\">row</span> ] [<span class=\"keyword\">when</span> [条件]]</span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\">变量申明;</span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">PLSQL块</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>作用是标注此触发器是行级触发器还是语句级触发器</p>\n</blockquote>\n<p>在触发器中触发语句与伪记录变量的值</p>\n<table>\n<thead>\n<tr>\n<th>触发语句</th>\n<th>:old</th>\n<th>:new</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>insert</td>\n<td>所有字段都是空的（null）</td>\n<td>将要插入的数据</td>\n</tr>\n<tr>\n<td>update</td>\n<td>更新以前该行的值</td>\n<td>更新后的值</td>\n</tr>\n<tr>\n<td>delete</td>\n<td>删除以前该行的值</td>\n<td>所有字段都是空的（null）</td>\n</tr>\n</tbody></table>\n<h4 id=\"案例-1\"><a href=\"#案例-1\" class=\"headerlink\" title=\"案例\"></a>案例</h4><p>1、前置触发器</p>\n<p>需求：当用户输入本月累计表数后，自动计算出本月使用数 。</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">trigger</span> tri_account_update</span><br><span class=\"line\">before</span><br><span class=\"line\"><span class=\"keyword\">update</span> <span class=\"keyword\">of</span> num1</span><br><span class=\"line\"><span class=\"keyword\">on</span> t_account</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">each</span> <span class=\"type\">row</span></span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\">:new.usenum:<span class=\"operator\">=</span>:new.num1<span class=\"operator\">-</span>:new.num0;</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">#<span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_account(id number,ownerid number,ownertypeid number,areaid number,<span class=\"keyword\">year</span> <span class=\"type\">char</span>(<span class=\"number\">4</span>),<span class=\"keyword\">month</span> #<span class=\"type\">char</span>(<span class=\"number\">2</span>),num0 number,num1 number,usenum number,meteruserid number,meterdate <span class=\"type\">date</span>,money number(<span class=\"number\">10</span>,<span class=\"number\">2</span>),isfee #<span class=\"type\">char</span>(<span class=\"number\">1</span>),feedate <span class=\"type\">date</span>,feeuserid number);</span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_account <span class=\"keyword\">values</span>(<span class=\"number\">1</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">1001</span>,<span class=\"number\">2023</span>,<span class=\"number\">06</span>,<span class=\"number\">43543</span>,<span class=\"number\">46456</span>,<span class=\"number\">3000</span>,<span class=\"number\">1001</span>,sysdate,<span class=\"number\">3232</span>,<span class=\"number\">0</span>,sysdate,<span class=\"number\">1001</span>);</span><br><span class=\"line\"><span class=\"keyword\">commit</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">update</span> t_account <span class=\"keyword\">set</span> num1<span class=\"operator\">=</span><span class=\"number\">100000</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>2、后置触发器</p>\n<p>需求：当用户修改了业主信息表的数据时记录修改前与修改后的值</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">table</span> t_owners_log</span><br><span class=\"line\">(</span><br><span class=\"line\">updatetime <span class=\"type\">date</span>,</span><br><span class=\"line\">ownerid number,</span><br><span class=\"line\">oldname varchar2(<span class=\"number\">30</span>),</span><br><span class=\"line\">newname varchar2(<span class=\"number\">30</span>)</span><br><span class=\"line\">);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">create</span> <span class=\"keyword\">or</span> replace <span class=\"keyword\">trigger</span> tri_insert_owner</span><br><span class=\"line\">after</span><br><span class=\"line\"><span class=\"keyword\">update</span> <span class=\"keyword\">of</span> name</span><br><span class=\"line\"><span class=\"keyword\">on</span> t_owners</span><br><span class=\"line\"><span class=\"keyword\">for</span> <span class=\"keyword\">each</span> <span class=\"type\">row</span></span><br><span class=\"line\"><span class=\"keyword\">declare</span></span><br><span class=\"line\"><span class=\"keyword\">begin</span></span><br><span class=\"line\"><span class=\"keyword\">insert</span> <span class=\"keyword\">into</span> t_owners_log <span class=\"keyword\">values</span>(sysdate,:old.id,:old.name,:new.name);</span><br><span class=\"line\"><span class=\"keyword\">end</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">update</span> t_owners <span class=\"keyword\">set</span> name<span class=\"operator\">=</span><span class=\"string\">&#x27;lililili&#x27;</span> <span class=\"keyword\">where</span> id<span class=\"operator\">=</span><span class=\"number\">1004</span>;</span><br><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> t_owners_log;</span><br></pre></td></tr></table></figure>\n\n"},{"title":"Picgo+Typora+SMMS图床配置","thumbnail":"https://bitiful.hudi.space/posts/picgo_typora_cover_post.jpeg","cover":"https://bitiful.hudi.space/posts/picgo_typora_cover_post.jpeg","description":"本文介绍了使用免费图床 sm.ms 以及扩展到又拍云的配置方法。首先说明了选择 sm.ms 图床的原因，并详细介绍了 Picgo 安装配置及与 sm.ms 图床的连接步骤，使用插件方式。接着介绍了 Typora 的配置，使其能利用 Picgo 工具将图片自动上传到 sm.ms 图床。最后以又拍云为例进行扩展，包括注册账号、创建服务、绑定域名、操作员授权等步骤，以及在 Picgo 中的配置方法。","abbrlink":"532806c","_content":"\n# Picgo+Typora+SMMS图床配置\n\n​\t\t由于每次写学习笔记都会有相应的图片。之前有使用过***阿里云的OSS***。使用起来也是相当不错的，但是OSS是收费的。其***付费模式***可以包月，也可以按访问流量来付费，虽然便宜，但是对于还在学习的小伙伴来说也是没必要的。使用***免费的图床***也可以实现相同的功能。比如sm.ms图床，有免费版本和付费版本，免费容量是5G。访问速度来说也还算是OK。所以本次配置的图床选择sm.ms。\n\n​\t\t写这篇配置教程的***目的***是，将自己以前的学习做一个***记录***，就是想帮助一下***更多的***，想要实现相同功能的朋友。其次也是帮助一下特别好的朋友配置图床。\n\n## 一、Picgo\n\n### Picgo简介： \n\n1. 应用概述：一个用于快速上传图片并获取图片 URL 链接的工具。\n\n2. picgo本身支持：`七牛图床` v1.0、`腾讯云 COS v4\\v5 版本` v1.1 & v1.5.0、`又拍云` v1.2.0、`GitHub` v1.5.0、`SM.MS V2` v2.3.0-beta.0、`阿里云 OSS` v1.6.0、`Imgur` v1.6.0等。还可以通过插件扩展其他图床。\n\n3. 应用界面：\n\n   ![image-20241020140658220](https://bitiful.hudi.space/posts/image-20241020140658220.png)\n\n### Picgo安装配置：\n\n1. 下载地址： https://github.com/Molunerfinn/PicGo ，或者选择其他镜像源下载也可。下载已经打包好的exe程序，安装直接点击exe可执行程序，点击下一步即可。\n\n2. 下载完成后。配置sm.ms图床。配置sm.ms图床前需要注册图床的账户。图床地址 https://smms.app/ 。\n\n   >这里使用picgo-plugin-smms-user插件，插件下载地址 https://github.com/xlzy520/picgo-plugin-smms-user 。可以使用git或者直接点击下载压缩包。\n   >\n   >- 在线安装直接在插件设置界面搜索：**smms-user**安装，安装完成后重启应用\n   >\n   >- 离线安装，下载插件包，将插件包移动到picgo的安装目录下执行以下命令。这里使用本地插件导入的方式使用。\n   >\n   >  ~~~node.js\n   >  npm install ./picgo-plugin-smms-user\n   >  ~~~\n\n   ![image-20241020142806786](https://bitiful.hudi.space/posts/image-20241020142806786.png)\n\n3. 安装使用导入本地插件的方式如上图。导入后就会在《插件设置》菜单显示。\n\n4. 点击插件的设置按钮，选择最后一项《配置uploader-smms-user》配置smms-user的auth值，auth通过[smms官网](https://smms.app/)的API-Token获取即可。\n\n   ![image-20241020145626017](https://bitiful.hudi.space/posts/sm_msauth.png)\n\n5. 配置完成后在《上传区》图片上传勾选SM.MS-登录用户就完成了picgo和sm.ms的配置。和上述picgo简介应用图片位置一致。将图片拖入相应位置就可以直接将图片上传到sm.ms图床上了。登录 https://smms.app/ 即可查看。\n\n6. 对于picgo的其他配置可以在设置模块查看，建议开启上传前重命名功能。此项功能方便以后管理sm.ms图床的图片。\n\n## 二、Typora\n\n### 功能需求：\n\n>将typora笔记中的图片，利用picgo工具直接上传到sm.ms图床上并返回图片地址供typora笔记所使用。\n\n### Typora配置：\n\nTypora本软件不再做介绍，直接给出配置步骤。\n\n1. 点击菜单栏的《文件》选项。\n2. 选择《偏好设置》。\n3. 选择《图像设置》，插入图片时->***上传图片。***\n4. 勾选☑️对本地位置的图片应用上述规则。\n5. 上传服务选择***Picgo(app)***\n6. picgo的路径选择picgo的安装路径中的picgo.exe可执行程序即可如下图。\n\n![image-20241020151951062](https://bitiful.hudi.space/posts/smms_typora_config.png)\n\n完成以上的配置，你的typora就实现了插入图片自动上传到smms的图床的功能啦。🎉🎉🎉\n\n## 三、扩展\n\n当然你也可以使用其他的图床或者是云存储的服务。大部分的云存储服务都是收费的，比例***[阿里云OSS](https://www.aliyun.com/product/oss)***，***[腾讯云COS](https://cloud.tencent.com/product/cos)***，***[七牛云](https://www.qiniu.com/products/kodo)***，[***又拍云***](https://www.upyun.com/)等，可以根据自己的经济情况选择一款云存储服务，当然用免费的不是更好吗。毕竟白嫖的就是香，但是便宜的免费的可能会面临就是***服务提供商跑路***了，图片就可能找不到。选择大厂的虽说付费，也不算太贵不是。至少不太可能出现跑路的情况。\n\n这里以[又拍云](https://www.upyun.com/)为例。\n\n这里没有广告！没有广告！没有广告！重要的事情说三遍。\n\n### 又拍云\n\n1. 登录[又拍云官方网站](https://www.upyun.com/)，注册账号。\n\n2. 进入又拍云控制台，在云服务列表，创建服务。服务名称就是bucket。在后续picgo配置中会使用到，应用场景-填写网页图片，存储类型-选择标准类型，这里授权账号可以先不授权。也可以直接授权已有的操作员，或者新建授权操作员。然后点击下方的创建。服务创建完成后，点击进入配置。\n\n   ![image-20241020162956667](https://bitiful.hudi.space/posts/upyun-bucket-create.png)\n\n3. 在功能配置的域名管理模块，域名加速模块绑定域名。这里注意，在绑定域名时，域名需要***备案***，不然***审核不通过***，然后去域名提供商网站增加域名解析记录。这里以***阿里云为例***。\n\n   - 在域名解析控制台，点击已有的域名进入解析设置。\n\n   - 点击添加记录，记录类型选择***[CNAME](https://www.aliyun.com/)***。CNAME的意思是从一个域名指向另一个域名，主机记录值可以随意填写，如下图表示的内容。一般来说设置二级域名更加合适。\n\n   - 解析请求来源设置默认即可。\n\n     记录值填写在又拍云云存储服务的CNAME就可以了。该值的查找方式，又拍云控制台->云存储服务->服务管理 云存储（在该页面中点击服务名称）->域名管理页面的CNAME。\n\n   ![image-20241020165402733](https://bitiful.hudi.space/posts/alyun_dns_e.png)\n\n4. 存储管理模块的***操作员授权***。点击授权按钮，有操作员就直接勾选☑️，没有操作员的点击新建授权操作员。输入操作员名称，密码项只能点击系统生成。生成完成后复制该密码，保存起来后续在配置picgo中使用。然后权限勾选☑️可读取，可写入，可删除。根据实际用途勾选权限。点击创建即可，如下图。\n\n   ![image-20241020164210706](https://bitiful.hudi.space/posts/auth_upyun_bucket.png)\n\n5. 完成上述步骤，你的又拍云云存储服务就创建好了。🎉🎉🎉\n\n### Picgo配置\n\n1. 在picgo的界面找到图床设置。在图床设置中选择***又拍云***配置。\n2. 在又拍云的设置界面填写相关的配置即可。\n3. 设定Bucket,这里的***bucket***就是前面创建的***云存储服务的名称。***\n4. 设定操作员就是你给云服务授权的操作人名称\n5. 设定***操作员密码***，这个密码就是在创建操作员的时候生成的密码。\n6. 设定加速域名，该项值是在又拍云控制台->云存储服务->服务管理 云存储（在该页面中点击服务名称）->域名管理页面的加速域名\n7. 设定网址后缀（选填），可以不填不影响使用。\n8. 设定***存储路径***，就是你在bucket(云存储服务)中的***文件夹路径***。也可以不填，这样图片会上传到你的bucket的根目录下。\n9. 完成以上设置以后，点击保存，在上传区域选择又拍云。就可以完成图片通过picgo上传又拍云云存储了。\n10. 这时在typora写文章图片同样也会上传又拍云。\n\n其他云存储服务和图床的配置基本上大致相同。这里就不展开描述了。后续可能会添加其他的免费的图床配置的内容。\n\n\n完结\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/Picgo+Typora+SM.MS图床配置.md","raw":"---\ntitle: Picgo+Typora+SMMS图床配置\nthumbnail: 'https://bitiful.hudi.space/posts/picgo_typora_cover_post.jpeg'\ncover: 'https://bitiful.hudi.space/posts/picgo_typora_cover_post.jpeg'\ndescription: '本文介绍了使用免费图床 sm.ms 以及扩展到又拍云的配置方法。首先说明了选择 sm.ms 图床的原因，并详细介绍了 Picgo 安装配置及与 sm.ms\n  图床的连接步骤，使用插件方式。接着介绍了 Typora 的配置，使其能利用 Picgo 工具将图片自动上传到 sm.ms\n  图床。最后以又拍云为例进行扩展，包括注册账号、创建服务、绑定域名、操作员授权等步骤，以及在 Picgo 中的配置方法。'\ncategories:\n  - 工具\n  - 图床\ntags:\n  - 工具\n  - 图床配置\n  - Picgo\n  - 云存储服务\nabbrlink: 532806c\n---\n\n# Picgo+Typora+SMMS图床配置\n\n​\t\t由于每次写学习笔记都会有相应的图片。之前有使用过***阿里云的OSS***。使用起来也是相当不错的，但是OSS是收费的。其***付费模式***可以包月，也可以按访问流量来付费，虽然便宜，但是对于还在学习的小伙伴来说也是没必要的。使用***免费的图床***也可以实现相同的功能。比如sm.ms图床，有免费版本和付费版本，免费容量是5G。访问速度来说也还算是OK。所以本次配置的图床选择sm.ms。\n\n​\t\t写这篇配置教程的***目的***是，将自己以前的学习做一个***记录***，就是想帮助一下***更多的***，想要实现相同功能的朋友。其次也是帮助一下特别好的朋友配置图床。\n\n## 一、Picgo\n\n### Picgo简介： \n\n1. 应用概述：一个用于快速上传图片并获取图片 URL 链接的工具。\n\n2. picgo本身支持：`七牛图床` v1.0、`腾讯云 COS v4\\v5 版本` v1.1 & v1.5.0、`又拍云` v1.2.0、`GitHub` v1.5.0、`SM.MS V2` v2.3.0-beta.0、`阿里云 OSS` v1.6.0、`Imgur` v1.6.0等。还可以通过插件扩展其他图床。\n\n3. 应用界面：\n\n   ![image-20241020140658220](https://bitiful.hudi.space/posts/image-20241020140658220.png)\n\n### Picgo安装配置：\n\n1. 下载地址： https://github.com/Molunerfinn/PicGo ，或者选择其他镜像源下载也可。下载已经打包好的exe程序，安装直接点击exe可执行程序，点击下一步即可。\n\n2. 下载完成后。配置sm.ms图床。配置sm.ms图床前需要注册图床的账户。图床地址 https://smms.app/ 。\n\n   >这里使用picgo-plugin-smms-user插件，插件下载地址 https://github.com/xlzy520/picgo-plugin-smms-user 。可以使用git或者直接点击下载压缩包。\n   >\n   >- 在线安装直接在插件设置界面搜索：**smms-user**安装，安装完成后重启应用\n   >\n   >- 离线安装，下载插件包，将插件包移动到picgo的安装目录下执行以下命令。这里使用本地插件导入的方式使用。\n   >\n   >  ~~~node.js\n   >  npm install ./picgo-plugin-smms-user\n   >  ~~~\n\n   ![image-20241020142806786](https://bitiful.hudi.space/posts/image-20241020142806786.png)\n\n3. 安装使用导入本地插件的方式如上图。导入后就会在《插件设置》菜单显示。\n\n4. 点击插件的设置按钮，选择最后一项《配置uploader-smms-user》配置smms-user的auth值，auth通过[smms官网](https://smms.app/)的API-Token获取即可。\n\n   ![image-20241020145626017](https://bitiful.hudi.space/posts/sm_msauth.png)\n\n5. 配置完成后在《上传区》图片上传勾选SM.MS-登录用户就完成了picgo和sm.ms的配置。和上述picgo简介应用图片位置一致。将图片拖入相应位置就可以直接将图片上传到sm.ms图床上了。登录 https://smms.app/ 即可查看。\n\n6. 对于picgo的其他配置可以在设置模块查看，建议开启上传前重命名功能。此项功能方便以后管理sm.ms图床的图片。\n\n## 二、Typora\n\n### 功能需求：\n\n>将typora笔记中的图片，利用picgo工具直接上传到sm.ms图床上并返回图片地址供typora笔记所使用。\n\n### Typora配置：\n\nTypora本软件不再做介绍，直接给出配置步骤。\n\n1. 点击菜单栏的《文件》选项。\n2. 选择《偏好设置》。\n3. 选择《图像设置》，插入图片时->***上传图片。***\n4. 勾选☑️对本地位置的图片应用上述规则。\n5. 上传服务选择***Picgo(app)***\n6. picgo的路径选择picgo的安装路径中的picgo.exe可执行程序即可如下图。\n\n![image-20241020151951062](https://bitiful.hudi.space/posts/smms_typora_config.png)\n\n完成以上的配置，你的typora就实现了插入图片自动上传到smms的图床的功能啦。🎉🎉🎉\n\n## 三、扩展\n\n当然你也可以使用其他的图床或者是云存储的服务。大部分的云存储服务都是收费的，比例***[阿里云OSS](https://www.aliyun.com/product/oss)***，***[腾讯云COS](https://cloud.tencent.com/product/cos)***，***[七牛云](https://www.qiniu.com/products/kodo)***，[***又拍云***](https://www.upyun.com/)等，可以根据自己的经济情况选择一款云存储服务，当然用免费的不是更好吗。毕竟白嫖的就是香，但是便宜的免费的可能会面临就是***服务提供商跑路***了，图片就可能找不到。选择大厂的虽说付费，也不算太贵不是。至少不太可能出现跑路的情况。\n\n这里以[又拍云](https://www.upyun.com/)为例。\n\n这里没有广告！没有广告！没有广告！重要的事情说三遍。\n\n### 又拍云\n\n1. 登录[又拍云官方网站](https://www.upyun.com/)，注册账号。\n\n2. 进入又拍云控制台，在云服务列表，创建服务。服务名称就是bucket。在后续picgo配置中会使用到，应用场景-填写网页图片，存储类型-选择标准类型，这里授权账号可以先不授权。也可以直接授权已有的操作员，或者新建授权操作员。然后点击下方的创建。服务创建完成后，点击进入配置。\n\n   ![image-20241020162956667](https://bitiful.hudi.space/posts/upyun-bucket-create.png)\n\n3. 在功能配置的域名管理模块，域名加速模块绑定域名。这里注意，在绑定域名时，域名需要***备案***，不然***审核不通过***，然后去域名提供商网站增加域名解析记录。这里以***阿里云为例***。\n\n   - 在域名解析控制台，点击已有的域名进入解析设置。\n\n   - 点击添加记录，记录类型选择***[CNAME](https://www.aliyun.com/)***。CNAME的意思是从一个域名指向另一个域名，主机记录值可以随意填写，如下图表示的内容。一般来说设置二级域名更加合适。\n\n   - 解析请求来源设置默认即可。\n\n     记录值填写在又拍云云存储服务的CNAME就可以了。该值的查找方式，又拍云控制台->云存储服务->服务管理 云存储（在该页面中点击服务名称）->域名管理页面的CNAME。\n\n   ![image-20241020165402733](https://bitiful.hudi.space/posts/alyun_dns_e.png)\n\n4. 存储管理模块的***操作员授权***。点击授权按钮，有操作员就直接勾选☑️，没有操作员的点击新建授权操作员。输入操作员名称，密码项只能点击系统生成。生成完成后复制该密码，保存起来后续在配置picgo中使用。然后权限勾选☑️可读取，可写入，可删除。根据实际用途勾选权限。点击创建即可，如下图。\n\n   ![image-20241020164210706](https://bitiful.hudi.space/posts/auth_upyun_bucket.png)\n\n5. 完成上述步骤，你的又拍云云存储服务就创建好了。🎉🎉🎉\n\n### Picgo配置\n\n1. 在picgo的界面找到图床设置。在图床设置中选择***又拍云***配置。\n2. 在又拍云的设置界面填写相关的配置即可。\n3. 设定Bucket,这里的***bucket***就是前面创建的***云存储服务的名称。***\n4. 设定操作员就是你给云服务授权的操作人名称\n5. 设定***操作员密码***，这个密码就是在创建操作员的时候生成的密码。\n6. 设定加速域名，该项值是在又拍云控制台->云存储服务->服务管理 云存储（在该页面中点击服务名称）->域名管理页面的加速域名\n7. 设定网址后缀（选填），可以不填不影响使用。\n8. 设定***存储路径***，就是你在bucket(云存储服务)中的***文件夹路径***。也可以不填，这样图片会上传到你的bucket的根目录下。\n9. 完成以上设置以后，点击保存，在上传区域选择又拍云。就可以完成图片通过picgo上传又拍云云存储了。\n10. 这时在typora写文章图片同样也会上传又拍云。\n\n其他云存储服务和图床的配置基本上大致相同。这里就不展开描述了。后续可能会添加其他的免费的图床配置的内容。\n\n\n完结\n\n\n\n\n\n\n\n\n\n\n\n","slug":"Picgo+Typora+SM.MS图床配置","published":1,"date":"2024-10-23T05:36:20.335Z","updated":"2024-11-18T10:30:59.426Z","comments":1,"layout":"post","photos":[],"_id":"cm3u077s80007ogst752j5gwp","content":"<h1 id=\"Picgo-Typora-SMMS图床配置\"><a href=\"#Picgo-Typora-SMMS图床配置\" class=\"headerlink\" title=\"Picgo+Typora+SMMS图床配置\"></a>Picgo+Typora+SMMS图床配置</h1><p>​\t\t由于每次写学习笔记都会有相应的图片。之前有使用过<em><strong>阿里云的OSS</strong></em>。使用起来也是相当不错的，但是OSS是收费的。其<em><strong>付费模式</strong></em>可以包月，也可以按访问流量来付费，虽然便宜，但是对于还在学习的小伙伴来说也是没必要的。使用<em><strong>免费的图床</strong></em>也可以实现相同的功能。比如sm.ms图床，有免费版本和付费版本，免费容量是5G。访问速度来说也还算是OK。所以本次配置的图床选择sm.ms。</p>\n<p>​\t\t写这篇配置教程的<em><strong>目的</strong></em>是，将自己以前的学习做一个<em><strong>记录</strong></em>，就是想帮助一下<em><strong>更多的</strong></em>，想要实现相同功能的朋友。其次也是帮助一下特别好的朋友配置图床。</p>\n<h2 id=\"一、Picgo\"><a href=\"#一、Picgo\" class=\"headerlink\" title=\"一、Picgo\"></a>一、Picgo</h2><h3 id=\"Picgo简介：\"><a href=\"#Picgo简介：\" class=\"headerlink\" title=\"Picgo简介：\"></a>Picgo简介：</h3><ol>\n<li><p>应用概述：一个用于快速上传图片并获取图片 URL 链接的工具。</p>\n</li>\n<li><p>picgo本身支持：<code>七牛图床</code> v1.0、<code>腾讯云 COS v4\\v5 版本</code> v1.1 &amp; v1.5.0、<code>又拍云</code> v1.2.0、<code>GitHub</code> v1.5.0、<code>SM.MS V2</code> v2.3.0-beta.0、<code>阿里云 OSS</code> v1.6.0、<code>Imgur</code> v1.6.0等。还可以通过插件扩展其他图床。</p>\n</li>\n<li><p>应用界面：</p>\n<p><img src=\"https://bitiful.hudi.space/posts/image-20241020140658220.png\" alt=\"image-20241020140658220\"></p>\n</li>\n</ol>\n<h3 id=\"Picgo安装配置：\"><a href=\"#Picgo安装配置：\" class=\"headerlink\" title=\"Picgo安装配置：\"></a>Picgo安装配置：</h3><ol>\n<li><p>下载地址： <a href=\"https://github.com/Molunerfinn/PicGo\">https://github.com/Molunerfinn/PicGo</a> ，或者选择其他镜像源下载也可。下载已经打包好的exe程序，安装直接点击exe可执行程序，点击下一步即可。</p>\n</li>\n<li><p>下载完成后。配置sm.ms图床。配置sm.ms图床前需要注册图床的账户。图床地址 <a href=\"https://smms.app/\">https://smms.app/</a> 。</p>\n<blockquote>\n<p>这里使用picgo-plugin-smms-user插件，插件下载地址 <a href=\"https://github.com/xlzy520/picgo-plugin-smms-user\">https://github.com/xlzy520/picgo-plugin-smms-user</a> 。可以使用git或者直接点击下载压缩包。</p>\n<ul>\n<li><p>在线安装直接在插件设置界面搜索：<strong>smms-user</strong>安装，安装完成后重启应用</p>\n</li>\n<li><p>离线安装，下载插件包，将插件包移动到picgo的安装目录下执行以下命令。这里使用本地插件导入的方式使用。</p>\n</li>\n</ul>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install ./picgo-plugin-smms-user</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><img src=\"https://bitiful.hudi.space/posts/image-20241020142806786.png\" alt=\"image-20241020142806786\"></p>\n</li>\n<li><p>安装使用导入本地插件的方式如上图。导入后就会在《插件设置》菜单显示。</p>\n</li>\n<li><p>点击插件的设置按钮，选择最后一项《配置uploader-smms-user》配置smms-user的auth值，auth通过<a href=\"https://smms.app/\">smms官网</a>的API-Token获取即可。</p>\n<p><img src=\"https://bitiful.hudi.space/posts/sm_msauth.png\" alt=\"image-20241020145626017\"></p>\n</li>\n<li><p>配置完成后在《上传区》图片上传勾选SM.MS-登录用户就完成了picgo和sm.ms的配置。和上述picgo简介应用图片位置一致。将图片拖入相应位置就可以直接将图片上传到sm.ms图床上了。登录 <a href=\"https://smms.app/\">https://smms.app/</a> 即可查看。</p>\n</li>\n<li><p>对于picgo的其他配置可以在设置模块查看，建议开启上传前重命名功能。此项功能方便以后管理sm.ms图床的图片。</p>\n</li>\n</ol>\n<h2 id=\"二、Typora\"><a href=\"#二、Typora\" class=\"headerlink\" title=\"二、Typora\"></a>二、Typora</h2><h3 id=\"功能需求：\"><a href=\"#功能需求：\" class=\"headerlink\" title=\"功能需求：\"></a>功能需求：</h3><blockquote>\n<p>将typora笔记中的图片，利用picgo工具直接上传到sm.ms图床上并返回图片地址供typora笔记所使用。</p>\n</blockquote>\n<h3 id=\"Typora配置：\"><a href=\"#Typora配置：\" class=\"headerlink\" title=\"Typora配置：\"></a>Typora配置：</h3><p>Typora本软件不再做介绍，直接给出配置步骤。</p>\n<ol>\n<li>点击菜单栏的《文件》选项。</li>\n<li>选择《偏好设置》。</li>\n<li>选择《图像设置》，插入图片时-&gt;<em><strong>上传图片。</strong></em></li>\n<li>勾选☑️对本地位置的图片应用上述规则。</li>\n<li>上传服务选择<em><strong>Picgo(app)</strong></em></li>\n<li>picgo的路径选择picgo的安装路径中的picgo.exe可执行程序即可如下图。</li>\n</ol>\n<p><img src=\"https://bitiful.hudi.space/posts/smms_typora_config.png\" alt=\"image-20241020151951062\"></p>\n<p>完成以上的配置，你的typora就实现了插入图片自动上传到smms的图床的功能啦。🎉🎉🎉</p>\n<h2 id=\"三、扩展\"><a href=\"#三、扩展\" class=\"headerlink\" title=\"三、扩展\"></a>三、扩展</h2><p>当然你也可以使用其他的图床或者是云存储的服务。大部分的云存储服务都是收费的，比例***<a href=\"https://www.aliyun.com/product/oss\">阿里云OSS</a><em><strong>，</strong></em><a href=\"https://cloud.tencent.com/product/cos\">腾讯云COS</a><em><strong>，</strong></em><a href=\"https://www.qiniu.com/products/kodo\">七牛云</a><em><strong>，<a href=\"https://www.upyun.com/\"><em><strong>又拍云</strong></em></a>等，可以根据自己的经济情况选择一款云存储服务，当然用免费的不是更好吗。毕竟白嫖的就是香，但是便宜的免费的可能会面临就是</strong></em>服务提供商跑路***了，图片就可能找不到。选择大厂的虽说付费，也不算太贵不是。至少不太可能出现跑路的情况。</p>\n<p>这里以<a href=\"https://www.upyun.com/\">又拍云</a>为例。</p>\n<p>这里没有广告！没有广告！没有广告！重要的事情说三遍。</p>\n<h3 id=\"又拍云\"><a href=\"#又拍云\" class=\"headerlink\" title=\"又拍云\"></a>又拍云</h3><ol>\n<li><p>登录<a href=\"https://www.upyun.com/\">又拍云官方网站</a>，注册账号。</p>\n</li>\n<li><p>进入又拍云控制台，在云服务列表，创建服务。服务名称就是bucket。在后续picgo配置中会使用到，应用场景-填写网页图片，存储类型-选择标准类型，这里授权账号可以先不授权。也可以直接授权已有的操作员，或者新建授权操作员。然后点击下方的创建。服务创建完成后，点击进入配置。</p>\n<p><img src=\"https://bitiful.hudi.space/posts/upyun-bucket-create.png\" alt=\"image-20241020162956667\"></p>\n</li>\n<li><p>在功能配置的域名管理模块，域名加速模块绑定域名。这里注意，在绑定域名时，域名需要<em><strong>备案</strong></em>，不然<em><strong>审核不通过</strong></em>，然后去域名提供商网站增加域名解析记录。这里以<em><strong>阿里云为例</strong></em>。</p>\n<ul>\n<li><p>在域名解析控制台，点击已有的域名进入解析设置。</p>\n</li>\n<li><p>点击添加记录，记录类型选择***<a href=\"https://www.aliyun.com/\">CNAME</a>***。CNAME的意思是从一个域名指向另一个域名，主机记录值可以随意填写，如下图表示的内容。一般来说设置二级域名更加合适。</p>\n</li>\n<li><p>解析请求来源设置默认即可。</p>\n<p>记录值填写在又拍云云存储服务的CNAME就可以了。该值的查找方式，又拍云控制台-&gt;云存储服务-&gt;服务管理 云存储（在该页面中点击服务名称）-&gt;域名管理页面的CNAME。</p>\n</li>\n</ul>\n<p><img src=\"https://bitiful.hudi.space/posts/alyun_dns_e.png\" alt=\"image-20241020165402733\"></p>\n</li>\n<li><p>存储管理模块的<em><strong>操作员授权</strong></em>。点击授权按钮，有操作员就直接勾选☑️，没有操作员的点击新建授权操作员。输入操作员名称，密码项只能点击系统生成。生成完成后复制该密码，保存起来后续在配置picgo中使用。然后权限勾选☑️可读取，可写入，可删除。根据实际用途勾选权限。点击创建即可，如下图。</p>\n<p><img src=\"https://bitiful.hudi.space/posts/auth_upyun_bucket.png\" alt=\"image-20241020164210706\"></p>\n</li>\n<li><p>完成上述步骤，你的又拍云云存储服务就创建好了。🎉🎉🎉</p>\n</li>\n</ol>\n<h3 id=\"Picgo配置\"><a href=\"#Picgo配置\" class=\"headerlink\" title=\"Picgo配置\"></a>Picgo配置</h3><ol>\n<li>在picgo的界面找到图床设置。在图床设置中选择<em><strong>又拍云</strong></em>配置。</li>\n<li>在又拍云的设置界面填写相关的配置即可。</li>\n<li>设定Bucket,这里的<em><strong>bucket</strong></em>就是前面创建的<em><strong>云存储服务的名称。</strong></em></li>\n<li>设定操作员就是你给云服务授权的操作人名称</li>\n<li>设定<em><strong>操作员密码</strong></em>，这个密码就是在创建操作员的时候生成的密码。</li>\n<li>设定加速域名，该项值是在又拍云控制台-&gt;云存储服务-&gt;服务管理 云存储（在该页面中点击服务名称）-&gt;域名管理页面的加速域名</li>\n<li>设定网址后缀（选填），可以不填不影响使用。</li>\n<li>设定<em><strong>存储路径</strong></em>，就是你在bucket(云存储服务)中的<em><strong>文件夹路径</strong></em>。也可以不填，这样图片会上传到你的bucket的根目录下。</li>\n<li>完成以上设置以后，点击保存，在上传区域选择又拍云。就可以完成图片通过picgo上传又拍云云存储了。</li>\n<li>这时在typora写文章图片同样也会上传又拍云。</li>\n</ol>\n<p>其他云存储服务和图床的配置基本上大致相同。这里就不展开描述了。后续可能会添加其他的免费的图床配置的内容。</p>\n<p>完结</p>\n","cover_type":"img","excerpt":"","more":"<h1 id=\"Picgo-Typora-SMMS图床配置\"><a href=\"#Picgo-Typora-SMMS图床配置\" class=\"headerlink\" title=\"Picgo+Typora+SMMS图床配置\"></a>Picgo+Typora+SMMS图床配置</h1><p>​\t\t由于每次写学习笔记都会有相应的图片。之前有使用过<em><strong>阿里云的OSS</strong></em>。使用起来也是相当不错的，但是OSS是收费的。其<em><strong>付费模式</strong></em>可以包月，也可以按访问流量来付费，虽然便宜，但是对于还在学习的小伙伴来说也是没必要的。使用<em><strong>免费的图床</strong></em>也可以实现相同的功能。比如sm.ms图床，有免费版本和付费版本，免费容量是5G。访问速度来说也还算是OK。所以本次配置的图床选择sm.ms。</p>\n<p>​\t\t写这篇配置教程的<em><strong>目的</strong></em>是，将自己以前的学习做一个<em><strong>记录</strong></em>，就是想帮助一下<em><strong>更多的</strong></em>，想要实现相同功能的朋友。其次也是帮助一下特别好的朋友配置图床。</p>\n<h2 id=\"一、Picgo\"><a href=\"#一、Picgo\" class=\"headerlink\" title=\"一、Picgo\"></a>一、Picgo</h2><h3 id=\"Picgo简介：\"><a href=\"#Picgo简介：\" class=\"headerlink\" title=\"Picgo简介：\"></a>Picgo简介：</h3><ol>\n<li><p>应用概述：一个用于快速上传图片并获取图片 URL 链接的工具。</p>\n</li>\n<li><p>picgo本身支持：<code>七牛图床</code> v1.0、<code>腾讯云 COS v4\\v5 版本</code> v1.1 &amp; v1.5.0、<code>又拍云</code> v1.2.0、<code>GitHub</code> v1.5.0、<code>SM.MS V2</code> v2.3.0-beta.0、<code>阿里云 OSS</code> v1.6.0、<code>Imgur</code> v1.6.0等。还可以通过插件扩展其他图床。</p>\n</li>\n<li><p>应用界面：</p>\n<p><img src=\"https://bitiful.hudi.space/posts/image-20241020140658220.png\" alt=\"image-20241020140658220\"></p>\n</li>\n</ol>\n<h3 id=\"Picgo安装配置：\"><a href=\"#Picgo安装配置：\" class=\"headerlink\" title=\"Picgo安装配置：\"></a>Picgo安装配置：</h3><ol>\n<li><p>下载地址： <a href=\"https://github.com/Molunerfinn/PicGo\">https://github.com/Molunerfinn/PicGo</a> ，或者选择其他镜像源下载也可。下载已经打包好的exe程序，安装直接点击exe可执行程序，点击下一步即可。</p>\n</li>\n<li><p>下载完成后。配置sm.ms图床。配置sm.ms图床前需要注册图床的账户。图床地址 <a href=\"https://smms.app/\">https://smms.app/</a> 。</p>\n<blockquote>\n<p>这里使用picgo-plugin-smms-user插件，插件下载地址 <a href=\"https://github.com/xlzy520/picgo-plugin-smms-user\">https://github.com/xlzy520/picgo-plugin-smms-user</a> 。可以使用git或者直接点击下载压缩包。</p>\n<ul>\n<li><p>在线安装直接在插件设置界面搜索：<strong>smms-user</strong>安装，安装完成后重启应用</p>\n</li>\n<li><p>离线安装，下载插件包，将插件包移动到picgo的安装目录下执行以下命令。这里使用本地插件导入的方式使用。</p>\n</li>\n</ul>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install ./picgo-plugin-smms-user</span><br></pre></td></tr></table></figure>\n</blockquote>\n<p><img src=\"https://bitiful.hudi.space/posts/image-20241020142806786.png\" alt=\"image-20241020142806786\"></p>\n</li>\n<li><p>安装使用导入本地插件的方式如上图。导入后就会在《插件设置》菜单显示。</p>\n</li>\n<li><p>点击插件的设置按钮，选择最后一项《配置uploader-smms-user》配置smms-user的auth值，auth通过<a href=\"https://smms.app/\">smms官网</a>的API-Token获取即可。</p>\n<p><img src=\"https://bitiful.hudi.space/posts/sm_msauth.png\" alt=\"image-20241020145626017\"></p>\n</li>\n<li><p>配置完成后在《上传区》图片上传勾选SM.MS-登录用户就完成了picgo和sm.ms的配置。和上述picgo简介应用图片位置一致。将图片拖入相应位置就可以直接将图片上传到sm.ms图床上了。登录 <a href=\"https://smms.app/\">https://smms.app/</a> 即可查看。</p>\n</li>\n<li><p>对于picgo的其他配置可以在设置模块查看，建议开启上传前重命名功能。此项功能方便以后管理sm.ms图床的图片。</p>\n</li>\n</ol>\n<h2 id=\"二、Typora\"><a href=\"#二、Typora\" class=\"headerlink\" title=\"二、Typora\"></a>二、Typora</h2><h3 id=\"功能需求：\"><a href=\"#功能需求：\" class=\"headerlink\" title=\"功能需求：\"></a>功能需求：</h3><blockquote>\n<p>将typora笔记中的图片，利用picgo工具直接上传到sm.ms图床上并返回图片地址供typora笔记所使用。</p>\n</blockquote>\n<h3 id=\"Typora配置：\"><a href=\"#Typora配置：\" class=\"headerlink\" title=\"Typora配置：\"></a>Typora配置：</h3><p>Typora本软件不再做介绍，直接给出配置步骤。</p>\n<ol>\n<li>点击菜单栏的《文件》选项。</li>\n<li>选择《偏好设置》。</li>\n<li>选择《图像设置》，插入图片时-&gt;<em><strong>上传图片。</strong></em></li>\n<li>勾选☑️对本地位置的图片应用上述规则。</li>\n<li>上传服务选择<em><strong>Picgo(app)</strong></em></li>\n<li>picgo的路径选择picgo的安装路径中的picgo.exe可执行程序即可如下图。</li>\n</ol>\n<p><img src=\"https://bitiful.hudi.space/posts/smms_typora_config.png\" alt=\"image-20241020151951062\"></p>\n<p>完成以上的配置，你的typora就实现了插入图片自动上传到smms的图床的功能啦。🎉🎉🎉</p>\n<h2 id=\"三、扩展\"><a href=\"#三、扩展\" class=\"headerlink\" title=\"三、扩展\"></a>三、扩展</h2><p>当然你也可以使用其他的图床或者是云存储的服务。大部分的云存储服务都是收费的，比例***<a href=\"https://www.aliyun.com/product/oss\">阿里云OSS</a><em><strong>，</strong></em><a href=\"https://cloud.tencent.com/product/cos\">腾讯云COS</a><em><strong>，</strong></em><a href=\"https://www.qiniu.com/products/kodo\">七牛云</a><em><strong>，<a href=\"https://www.upyun.com/\"><em><strong>又拍云</strong></em></a>等，可以根据自己的经济情况选择一款云存储服务，当然用免费的不是更好吗。毕竟白嫖的就是香，但是便宜的免费的可能会面临就是</strong></em>服务提供商跑路***了，图片就可能找不到。选择大厂的虽说付费，也不算太贵不是。至少不太可能出现跑路的情况。</p>\n<p>这里以<a href=\"https://www.upyun.com/\">又拍云</a>为例。</p>\n<p>这里没有广告！没有广告！没有广告！重要的事情说三遍。</p>\n<h3 id=\"又拍云\"><a href=\"#又拍云\" class=\"headerlink\" title=\"又拍云\"></a>又拍云</h3><ol>\n<li><p>登录<a href=\"https://www.upyun.com/\">又拍云官方网站</a>，注册账号。</p>\n</li>\n<li><p>进入又拍云控制台，在云服务列表，创建服务。服务名称就是bucket。在后续picgo配置中会使用到，应用场景-填写网页图片，存储类型-选择标准类型，这里授权账号可以先不授权。也可以直接授权已有的操作员，或者新建授权操作员。然后点击下方的创建。服务创建完成后，点击进入配置。</p>\n<p><img src=\"https://bitiful.hudi.space/posts/upyun-bucket-create.png\" alt=\"image-20241020162956667\"></p>\n</li>\n<li><p>在功能配置的域名管理模块，域名加速模块绑定域名。这里注意，在绑定域名时，域名需要<em><strong>备案</strong></em>，不然<em><strong>审核不通过</strong></em>，然后去域名提供商网站增加域名解析记录。这里以<em><strong>阿里云为例</strong></em>。</p>\n<ul>\n<li><p>在域名解析控制台，点击已有的域名进入解析设置。</p>\n</li>\n<li><p>点击添加记录，记录类型选择***<a href=\"https://www.aliyun.com/\">CNAME</a>***。CNAME的意思是从一个域名指向另一个域名，主机记录值可以随意填写，如下图表示的内容。一般来说设置二级域名更加合适。</p>\n</li>\n<li><p>解析请求来源设置默认即可。</p>\n<p>记录值填写在又拍云云存储服务的CNAME就可以了。该值的查找方式，又拍云控制台-&gt;云存储服务-&gt;服务管理 云存储（在该页面中点击服务名称）-&gt;域名管理页面的CNAME。</p>\n</li>\n</ul>\n<p><img src=\"https://bitiful.hudi.space/posts/alyun_dns_e.png\" alt=\"image-20241020165402733\"></p>\n</li>\n<li><p>存储管理模块的<em><strong>操作员授权</strong></em>。点击授权按钮，有操作员就直接勾选☑️，没有操作员的点击新建授权操作员。输入操作员名称，密码项只能点击系统生成。生成完成后复制该密码，保存起来后续在配置picgo中使用。然后权限勾选☑️可读取，可写入，可删除。根据实际用途勾选权限。点击创建即可，如下图。</p>\n<p><img src=\"https://bitiful.hudi.space/posts/auth_upyun_bucket.png\" alt=\"image-20241020164210706\"></p>\n</li>\n<li><p>完成上述步骤，你的又拍云云存储服务就创建好了。🎉🎉🎉</p>\n</li>\n</ol>\n<h3 id=\"Picgo配置\"><a href=\"#Picgo配置\" class=\"headerlink\" title=\"Picgo配置\"></a>Picgo配置</h3><ol>\n<li>在picgo的界面找到图床设置。在图床设置中选择<em><strong>又拍云</strong></em>配置。</li>\n<li>在又拍云的设置界面填写相关的配置即可。</li>\n<li>设定Bucket,这里的<em><strong>bucket</strong></em>就是前面创建的<em><strong>云存储服务的名称。</strong></em></li>\n<li>设定操作员就是你给云服务授权的操作人名称</li>\n<li>设定<em><strong>操作员密码</strong></em>，这个密码就是在创建操作员的时候生成的密码。</li>\n<li>设定加速域名，该项值是在又拍云控制台-&gt;云存储服务-&gt;服务管理 云存储（在该页面中点击服务名称）-&gt;域名管理页面的加速域名</li>\n<li>设定网址后缀（选填），可以不填不影响使用。</li>\n<li>设定<em><strong>存储路径</strong></em>，就是你在bucket(云存储服务)中的<em><strong>文件夹路径</strong></em>。也可以不填，这样图片会上传到你的bucket的根目录下。</li>\n<li>完成以上设置以后，点击保存，在上传区域选择又拍云。就可以完成图片通过picgo上传又拍云云存储了。</li>\n<li>这时在typora写文章图片同样也会上传又拍云。</li>\n</ol>\n<p>其他云存储服务和图床的配置基本上大致相同。这里就不展开描述了。后续可能会添加其他的免费的图床配置的内容。</p>\n<p>完结</p>\n"},{"title":"云部署Hexo和Certbot申请","thumbnail":"https://bitiful.hudi.space/posts/cloud_digtal.png","cover":"https://bitiful.hudi.space/posts/cloud_digtal.png","description":"本章内容只是对最近学习的总结，对互联网相关开发者社区相关文章的一个整合和错误排查。最开始搭建博客的时候，不知道从何处下手。想去实现自己一些喜欢的前端样式，但是奈何都不尽人意，折腾了好久。所以选择了hexo的butterfly主题去快速搭建一个博客。后期还会对博客的部分样式做一定的更改，改成自己喜欢的样式效果。","abbrlink":"b632734","_content":"\n​\t\t本章内容只是对最近学习的总结，对互联网相关开发者社区相关文章的一个整合和错误排查。最开始搭建博客的时候，不知道从何处下手。想去实现自己一些喜欢的前端样式，但是奈何都不尽人意，折腾了好久。所以选择了hexo的butterfly主题去快速搭建一个博客。后期还会对博客的部分样式做一定的更改，改成自己喜欢的样式效果。\n\n>记录Hexo部署到阿里云服务器全过程 https://developer.aliyun.com/article/775005 \n>\n>使用Certbot申请/续签ssl证书https://developer.aliyun.com/article/1572585\n>\n>本篇文章将引用上述两篇文章的内容来总结。\n>\n>目的：写本篇文章的目的是Github里面的钩子和SSL证书，是自己的知识盲区，需要记录和总结学习。\n\n## 一、云部署Hexo\n\n### 1、环境准备\n\n前置环境(注释是我使用当前的版本)\n\n~~~shell\nnode  #v14.15.0 \ngit #2.23.0.windows.1\n~~~\n\n安装hexo-cli，创建第一个hexo项目\n\n\n~~~shell\nnpm install  -g  hexo-cli\t\nhexo init filedir\ncd filedir\nnpm install #安装完毕后\nhexo server  #或者是hexo s 启动项目\n~~~\n\n>具体的hexo-cli的版本需要根据node的版本来选择。我这里使用的版本是hexo-cli: 4.3.2。若要使用和我相同的版本需要保证node的版本在8.10+以上。不然可能会出现某些模块和功能不能使用的情况。具体的版本限制可以查看hexo的官网[https://hexo.io/zh-cn/docs/index.html#Node-js-%E7%89%88%E6%9C%AC%E9%99%90%E5%88%B6](https://hexo.io/zh-cn/docs/index.html#Node-js-%E7%89%88%E6%9C%AC%E9%99%90%E5%88%B6)\n\n安装butterfly主题\n\n\n~~~shell\n#使用git安装，在hexo项目下执行一下命令\ngit clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly\n#或者是使用npm安装，但是官方指出，此方法只支持Hexo5.0.0以上版本，通过 npm 安装并不会在 themes 里生成主题文件夹，而是在 node_modules 里生成。\nnpm install hexo-theme-butterfly \n~~~\n\n>完成上述操作，需要把hexo-theme-butterfly项目目录移动到hexo的theme的目录下。\n\n​\t\t修改 Hexo根目录下的_config.yml，把主题改为 butterfly到这一步，博客的butterfly主题的安装设置完成。而butterfly的配置和可以访问[官方文档](https://butterfly.js.org/)。\n\n### 2、云服务器部署\n\n服务器必要环境Nginx,使用yum安装或者是使用源码安装，也可以通过docker快速部署一个nginx服务，在这里仅介绍yum和源码安装。\n\n{% tabs nginx %}\n\n<!-- tab yum安装 -->\n\n~~~shell\nyum install -y nginx\n~~~\n\n<!-- endtab -->\n\n<!-- tab 使用源码安装 -->\n\n这里以nginx-1.20.2为例。\n\n1、安装相关的依赖软件\n\n~~~shell\nyum install openssl-devel pcre-devel gcc -y\n~~~\n\n2、创建目录\n\n~~~shell\nmkdir /data\nmkdir /data/server /data/soft\n~~~\n\n3、创建用户\n\n~~~shell\nuseradd www -s /sbin/nologin -M\n~~~\n\n4、上传源码包并解压\n\n~~~shell\n#使用rz工具上传源码包nginx-1.8.1.tar.gz\n#安装rz工具\nyum install -y lrzsz\n#或执行查看该工具是否存在\nrpm -qa lrzsz\n\n[root@hecs-202792 ~]# rpm -qa lrzsz\nlrzsz-0.12.20-36.el7.x86_64\n\ntar -zxvf nginx-1.20.2.tar.gz\n~~~\n\n5、执行编译安装\n\n~~~shell\ncd nginx-1.8.1\n./configure --prefix=/data/server/nginx --user=www --group=www  #--prefix 参数是指定nginx的安装目录，配置文件也在该目录下\nmake && make install\n~~~\n\n6、启动nginx\n\n~~~shell\n/data/server/nginx/sbin/nginx\n~~~\n\n7、将nginx配置成系统服务\n\n~~~shell\nvi /usr/lib/systemd/system/nginx.service\n\n#服务脚本内容\n[Unit]\nDescription=nginx - web server\nAfter=network.target remote-fs.target nss-lookup.target\n[Service]\nType=forking\nPIDFile=/data/server/nginx/logs/nginx.pid\nExecStartPre=/data/server/nginx/sbin/nginx -t -c /data/server/nginx/conf/nginx.conf\nExecStart=/data/server/nginx/sbin/nginx -c /data/server/nginx/conf/nginx.conf\nExecReload=/data/server/nginx/sbin/nginx -s reload\nExecStop=/data/server/nginx/sbin/nginx -s stop\nExecQuit=/data/server/nginx/sbin/nginx -s quit\nPrivateTmp=true\n[Install]\nWantedBy=multi-user.target\n~~~\n\n<!-- endtab -->\n\n{% endtabs %}\n\n>nginx的配置修改后续再说\n\n安装git\n\n~~~shell\nyum install -y git\n~~~\n\n添加git用户，然后执行一下操作。创建用户的命令要在root下去执行。后续的操作均在git用户下执行。\n\n~~~shell\nuseradd git #用户名自己定义\npasswd git #修改git用户的密码\nsu git #切换git用户\nmkdir /home/git/project/blog #该目录上就是hexo编译部署后生成静态文件的目录\nmkdir /home/git/repos #该项目git仓库的的目录\ncd /home/git/repos && reposgit init --bare blog.git #进入目录并初始化仓库\ncd blog.git/hooks \nvim post-receive #创建一个钩子,目的是将hexo编译部署后生成静态文件上传到指定的目录\n\n#post-receive 内容如下：\n#!/bin/sh\ngit --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f\n\n#参数说明\n--work-tree #指定编译部署后生成静态文件上传到指定的目录\n--git-dir #指定项目git仓库的目录\n\n#编辑之后退出vim,为post-receive赋于可执行的权限\nchmod +x post-receive # 添加可执行权限exit # \n~~~\n\n完成上述操作以后需要退出git用户。登录root用户为git用户赋于权限\n\n~~~shell\nchown -R git:git /home/git/repos/blog.git\n~~~\n\n在本地可以尝试执行以下命令，来查看博客项目所在的仓库是否初始化成功。能够拉取下来就说明仓库是初始化成功的。\n\n~~~shell\ngit clone git@server_ip:/home/git/repos/blog.git  \n#server_ip 就是服务器所在的ip\n~~~\n\n本地建立SSH信任关系。在gitbash或者是cmd窗口中去执行。\n\n~~~shell\nssh-copy-id -i ~/.ssh/id_rsa.pub git@server_ip # 建立信任关系\nssh git@server_ip  # 试一下能不能登录\nssh-keygen -t rsa #如果没有生成过秘钥就执行生成秘钥的命令，然后一直回车即可 一般生成的秘钥在C:\\Users\\{用户名}\\.ssh 目录下\n~~~\n\n更改git用户默认的shell。为了服务器安全起见这个git用户最好就拥有git clone等于git命令相关的操作。\n\n~~~shell\nwhich git-shell #找到git-shell的路径，将其追加入到/etc/shell中\n~~~\n\n修改git用户登录所用的默认的shell\n\n~~~shell\nvi /etc/passwd #找到git用户所在的行git:x:1000:1000::/home/git:/bin/bash将 /bin/bash改成git-shell所在的路径。\n~~~\n\n执行完上述操作，就没办通过ssh在本地登录服务器了。\n\n### 3、部署上线\n\n首先本地的hexo项目需要下载一个部署的插件[hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git)\n\n~~~shell\nnpm install hexo-deployer-git --save\n~~~\n\n然后编辑hexo跟目录下的**_config.yml** 文件。配置如下\n\n~~~yml\ndeploy:\n  type: 'git'\n  repo: 'git@server_ip:/home/git/repos/blog.git'\n  branch: [master]\n~~~\n\n然后再项目执行部署命令\n\n~~~shell\nhexo clean #先清除hexo的缓存。\nhexo g -d #生成打包文件并将编译后的文件上传到服务器的--work-tree=/home/git/projects/blog 目录下\n~~~\n\n也可以修改hexo根目录下的package.json的script在添加部署脚本.\n\n~~~shell\ndeploy:\"hexo g -d\";\nnpm run deploy\n~~~\n\n配置nginx的配置文件，如果使用yum安装的nginx，配置文件在/etc/nginx目录下,如果是使用源码安装的配置文件在--prefix=/data/server/nginx/conf目录下。root的配置一定要注意。git部署的操作是在git用户下，所以目录一定要有git的写入权限，不然是会部署失败的。在修改完nginx配置以后记得刷新使其生效\n\n~~~shell\nvi nginx.conf\n\nserver {\n        listen       80;\n        server_name  www.hudi.space; #这里是你服务器域名 \n        root         /usr/share/nginx/html; #这个root的目录就配置git钩子中--work-tree=/home/git/projects/blog所在的目录。\n\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        error_page 404 /404.html;\n        location = /404.html {\n        }\n\n        #error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n        }      \n}\n\nsystemctl restart nginx\n~~~\n\n完成以上配置，你就可以通过http访问hexo博客了。🎉🎉🎉\n\n## 二、Certbot申请SSL证书\n\n### 1、证书申请\n\n​\t\t完成上面的配置只能是http访问。本节将介绍https访问和SSL证书申请。由于我使用了多吉云☁️的cdn来给我的的博客项目加速。所以也要给cdn绑定一个域名。\n\n安装certbot\n\n~~~shell\nyum install certbot python3-certbot-nginx\n~~~\n\n申请证书，如果需要申请多个证书，就在后面继续指定-d 参数和域名即可。由于certbot这个工具他会校验域名的生效性。所以可以先把cdn的子域名的解析绑定到我们自己的服务器的IP上先做证书的生成。然后在修改cdn域名的cname值即可。\n\n~~~shell\ncertbot certonly --nginx -d www.hudi.space -d cdn.hudi.space   \n~~~\n\n如果在执行上述命令提示没有python3-certbot-nginx包时。可以使用如下命令安装插件\n\n~~~shell\nyum -y install certbot-nginx\n~~~\n\n在执行证书生成的过程中，会提示输入邮箱等信息，按照实际填写即可。生成的证书是在/etc/letsencrypt/live/ 的目录下。进入域名所在目录。查看证书\n\n~~~shell\n[root@hcss-ecs-0985 ~]# cd /etc/letsencrypt/live/www.hudi.space\n[root@hcss-ecs-0985 www.hudi.space]# pwd\n/etc/letsencrypt/live/www.hudi.space\n[root@hcss-ecs-0985 www.hudi.space]# ls\ncert.pem  chain.pem  fullchain.pem  privkey.pem  README\n~~~\n\n### 2、Nginx配置https\n\n同样是修改nginx.conf文件。将http的80端口的访问改为转发，修改https的配置即可。具体配置如下。\n\n~~~shell\nserver {\n    listen 80;\n    server_name www.hudi.space;\n\t# 重定向HTTP请求到HTTPS\n\treturn 301 https://www.hudi.space$request_uri;\n}\n\nserver {\n    listen 443 ssl;\n    server_name www.hudi.space\n\t# SSL配置\n    ssl_certificate /etc/letsencrypt/live/www.hudi.space/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/www.hudi.space/privkey.pem;\n    root /usr/share/nginx/html; #这个root的目录就配置git钩子中--work-tree=/home/git/projects/blog所在的目录。\n    index index.html index.htm;\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n~~~\n\n完成上述配置以后，重启nginx使配置生效。即可使用https访问你的博客项目了。🎉🎉🎉🎉\n\n\n\n\n\n","source":"_posts/云部署Hexo和Certbot申请.md","raw":"---\ntitle: 云部署Hexo和Certbot申请\nthumbnail: 'https://bitiful.hudi.space/posts/cloud_digtal.png'\ncover: 'https://bitiful.hudi.space/posts/cloud_digtal.png'\ndescription: '本章内容只是对最近学习的总结，对互联网相关开发者社区相关文章的一个整合和错误排查。最开始搭建博客的时候，不知道从何处下手。想去实现自己一些喜欢的前端样式，但是奈何都不尽人意，折腾了好久。所以选择了hexo的butterfly主题去快速搭建一个博客。后期还会对博客的部分样式做一定的更改，改成自己喜欢的样式效果。'\ncategories:\n  - 云服务\ntags:\n  - hexo\n  - 云服务\nabbrlink: b632734\n---\n\n​\t\t本章内容只是对最近学习的总结，对互联网相关开发者社区相关文章的一个整合和错误排查。最开始搭建博客的时候，不知道从何处下手。想去实现自己一些喜欢的前端样式，但是奈何都不尽人意，折腾了好久。所以选择了hexo的butterfly主题去快速搭建一个博客。后期还会对博客的部分样式做一定的更改，改成自己喜欢的样式效果。\n\n>记录Hexo部署到阿里云服务器全过程 https://developer.aliyun.com/article/775005 \n>\n>使用Certbot申请/续签ssl证书https://developer.aliyun.com/article/1572585\n>\n>本篇文章将引用上述两篇文章的内容来总结。\n>\n>目的：写本篇文章的目的是Github里面的钩子和SSL证书，是自己的知识盲区，需要记录和总结学习。\n\n## 一、云部署Hexo\n\n### 1、环境准备\n\n前置环境(注释是我使用当前的版本)\n\n~~~shell\nnode  #v14.15.0 \ngit #2.23.0.windows.1\n~~~\n\n安装hexo-cli，创建第一个hexo项目\n\n\n~~~shell\nnpm install  -g  hexo-cli\t\nhexo init filedir\ncd filedir\nnpm install #安装完毕后\nhexo server  #或者是hexo s 启动项目\n~~~\n\n>具体的hexo-cli的版本需要根据node的版本来选择。我这里使用的版本是hexo-cli: 4.3.2。若要使用和我相同的版本需要保证node的版本在8.10+以上。不然可能会出现某些模块和功能不能使用的情况。具体的版本限制可以查看hexo的官网[https://hexo.io/zh-cn/docs/index.html#Node-js-%E7%89%88%E6%9C%AC%E9%99%90%E5%88%B6](https://hexo.io/zh-cn/docs/index.html#Node-js-%E7%89%88%E6%9C%AC%E9%99%90%E5%88%B6)\n\n安装butterfly主题\n\n\n~~~shell\n#使用git安装，在hexo项目下执行一下命令\ngit clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly\n#或者是使用npm安装，但是官方指出，此方法只支持Hexo5.0.0以上版本，通过 npm 安装并不会在 themes 里生成主题文件夹，而是在 node_modules 里生成。\nnpm install hexo-theme-butterfly \n~~~\n\n>完成上述操作，需要把hexo-theme-butterfly项目目录移动到hexo的theme的目录下。\n\n​\t\t修改 Hexo根目录下的_config.yml，把主题改为 butterfly到这一步，博客的butterfly主题的安装设置完成。而butterfly的配置和可以访问[官方文档](https://butterfly.js.org/)。\n\n### 2、云服务器部署\n\n服务器必要环境Nginx,使用yum安装或者是使用源码安装，也可以通过docker快速部署一个nginx服务，在这里仅介绍yum和源码安装。\n\n{% tabs nginx %}\n\n<!-- tab yum安装 -->\n\n~~~shell\nyum install -y nginx\n~~~\n\n<!-- endtab -->\n\n<!-- tab 使用源码安装 -->\n\n这里以nginx-1.20.2为例。\n\n1、安装相关的依赖软件\n\n~~~shell\nyum install openssl-devel pcre-devel gcc -y\n~~~\n\n2、创建目录\n\n~~~shell\nmkdir /data\nmkdir /data/server /data/soft\n~~~\n\n3、创建用户\n\n~~~shell\nuseradd www -s /sbin/nologin -M\n~~~\n\n4、上传源码包并解压\n\n~~~shell\n#使用rz工具上传源码包nginx-1.8.1.tar.gz\n#安装rz工具\nyum install -y lrzsz\n#或执行查看该工具是否存在\nrpm -qa lrzsz\n\n[root@hecs-202792 ~]# rpm -qa lrzsz\nlrzsz-0.12.20-36.el7.x86_64\n\ntar -zxvf nginx-1.20.2.tar.gz\n~~~\n\n5、执行编译安装\n\n~~~shell\ncd nginx-1.8.1\n./configure --prefix=/data/server/nginx --user=www --group=www  #--prefix 参数是指定nginx的安装目录，配置文件也在该目录下\nmake && make install\n~~~\n\n6、启动nginx\n\n~~~shell\n/data/server/nginx/sbin/nginx\n~~~\n\n7、将nginx配置成系统服务\n\n~~~shell\nvi /usr/lib/systemd/system/nginx.service\n\n#服务脚本内容\n[Unit]\nDescription=nginx - web server\nAfter=network.target remote-fs.target nss-lookup.target\n[Service]\nType=forking\nPIDFile=/data/server/nginx/logs/nginx.pid\nExecStartPre=/data/server/nginx/sbin/nginx -t -c /data/server/nginx/conf/nginx.conf\nExecStart=/data/server/nginx/sbin/nginx -c /data/server/nginx/conf/nginx.conf\nExecReload=/data/server/nginx/sbin/nginx -s reload\nExecStop=/data/server/nginx/sbin/nginx -s stop\nExecQuit=/data/server/nginx/sbin/nginx -s quit\nPrivateTmp=true\n[Install]\nWantedBy=multi-user.target\n~~~\n\n<!-- endtab -->\n\n{% endtabs %}\n\n>nginx的配置修改后续再说\n\n安装git\n\n~~~shell\nyum install -y git\n~~~\n\n添加git用户，然后执行一下操作。创建用户的命令要在root下去执行。后续的操作均在git用户下执行。\n\n~~~shell\nuseradd git #用户名自己定义\npasswd git #修改git用户的密码\nsu git #切换git用户\nmkdir /home/git/project/blog #该目录上就是hexo编译部署后生成静态文件的目录\nmkdir /home/git/repos #该项目git仓库的的目录\ncd /home/git/repos && reposgit init --bare blog.git #进入目录并初始化仓库\ncd blog.git/hooks \nvim post-receive #创建一个钩子,目的是将hexo编译部署后生成静态文件上传到指定的目录\n\n#post-receive 内容如下：\n#!/bin/sh\ngit --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f\n\n#参数说明\n--work-tree #指定编译部署后生成静态文件上传到指定的目录\n--git-dir #指定项目git仓库的目录\n\n#编辑之后退出vim,为post-receive赋于可执行的权限\nchmod +x post-receive # 添加可执行权限exit # \n~~~\n\n完成上述操作以后需要退出git用户。登录root用户为git用户赋于权限\n\n~~~shell\nchown -R git:git /home/git/repos/blog.git\n~~~\n\n在本地可以尝试执行以下命令，来查看博客项目所在的仓库是否初始化成功。能够拉取下来就说明仓库是初始化成功的。\n\n~~~shell\ngit clone git@server_ip:/home/git/repos/blog.git  \n#server_ip 就是服务器所在的ip\n~~~\n\n本地建立SSH信任关系。在gitbash或者是cmd窗口中去执行。\n\n~~~shell\nssh-copy-id -i ~/.ssh/id_rsa.pub git@server_ip # 建立信任关系\nssh git@server_ip  # 试一下能不能登录\nssh-keygen -t rsa #如果没有生成过秘钥就执行生成秘钥的命令，然后一直回车即可 一般生成的秘钥在C:\\Users\\{用户名}\\.ssh 目录下\n~~~\n\n更改git用户默认的shell。为了服务器安全起见这个git用户最好就拥有git clone等于git命令相关的操作。\n\n~~~shell\nwhich git-shell #找到git-shell的路径，将其追加入到/etc/shell中\n~~~\n\n修改git用户登录所用的默认的shell\n\n~~~shell\nvi /etc/passwd #找到git用户所在的行git:x:1000:1000::/home/git:/bin/bash将 /bin/bash改成git-shell所在的路径。\n~~~\n\n执行完上述操作，就没办通过ssh在本地登录服务器了。\n\n### 3、部署上线\n\n首先本地的hexo项目需要下载一个部署的插件[hexo-deployer-git](https://github.com/hexojs/hexo-deployer-git)\n\n~~~shell\nnpm install hexo-deployer-git --save\n~~~\n\n然后编辑hexo跟目录下的**_config.yml** 文件。配置如下\n\n~~~yml\ndeploy:\n  type: 'git'\n  repo: 'git@server_ip:/home/git/repos/blog.git'\n  branch: [master]\n~~~\n\n然后再项目执行部署命令\n\n~~~shell\nhexo clean #先清除hexo的缓存。\nhexo g -d #生成打包文件并将编译后的文件上传到服务器的--work-tree=/home/git/projects/blog 目录下\n~~~\n\n也可以修改hexo根目录下的package.json的script在添加部署脚本.\n\n~~~shell\ndeploy:\"hexo g -d\";\nnpm run deploy\n~~~\n\n配置nginx的配置文件，如果使用yum安装的nginx，配置文件在/etc/nginx目录下,如果是使用源码安装的配置文件在--prefix=/data/server/nginx/conf目录下。root的配置一定要注意。git部署的操作是在git用户下，所以目录一定要有git的写入权限，不然是会部署失败的。在修改完nginx配置以后记得刷新使其生效\n\n~~~shell\nvi nginx.conf\n\nserver {\n        listen       80;\n        server_name  www.hudi.space; #这里是你服务器域名 \n        root         /usr/share/nginx/html; #这个root的目录就配置git钩子中--work-tree=/home/git/projects/blog所在的目录。\n\n        # Load configuration files for the default server block.\n        include /etc/nginx/default.d/*.conf;\n\n        error_page 404 /404.html;\n        location = /404.html {\n        }\n\n        #error_page 500 502 503 504 /50x.html;\n        location = /50x.html {\n        }      \n}\n\nsystemctl restart nginx\n~~~\n\n完成以上配置，你就可以通过http访问hexo博客了。🎉🎉🎉\n\n## 二、Certbot申请SSL证书\n\n### 1、证书申请\n\n​\t\t完成上面的配置只能是http访问。本节将介绍https访问和SSL证书申请。由于我使用了多吉云☁️的cdn来给我的的博客项目加速。所以也要给cdn绑定一个域名。\n\n安装certbot\n\n~~~shell\nyum install certbot python3-certbot-nginx\n~~~\n\n申请证书，如果需要申请多个证书，就在后面继续指定-d 参数和域名即可。由于certbot这个工具他会校验域名的生效性。所以可以先把cdn的子域名的解析绑定到我们自己的服务器的IP上先做证书的生成。然后在修改cdn域名的cname值即可。\n\n~~~shell\ncertbot certonly --nginx -d www.hudi.space -d cdn.hudi.space   \n~~~\n\n如果在执行上述命令提示没有python3-certbot-nginx包时。可以使用如下命令安装插件\n\n~~~shell\nyum -y install certbot-nginx\n~~~\n\n在执行证书生成的过程中，会提示输入邮箱等信息，按照实际填写即可。生成的证书是在/etc/letsencrypt/live/ 的目录下。进入域名所在目录。查看证书\n\n~~~shell\n[root@hcss-ecs-0985 ~]# cd /etc/letsencrypt/live/www.hudi.space\n[root@hcss-ecs-0985 www.hudi.space]# pwd\n/etc/letsencrypt/live/www.hudi.space\n[root@hcss-ecs-0985 www.hudi.space]# ls\ncert.pem  chain.pem  fullchain.pem  privkey.pem  README\n~~~\n\n### 2、Nginx配置https\n\n同样是修改nginx.conf文件。将http的80端口的访问改为转发，修改https的配置即可。具体配置如下。\n\n~~~shell\nserver {\n    listen 80;\n    server_name www.hudi.space;\n\t# 重定向HTTP请求到HTTPS\n\treturn 301 https://www.hudi.space$request_uri;\n}\n\nserver {\n    listen 443 ssl;\n    server_name www.hudi.space\n\t# SSL配置\n    ssl_certificate /etc/letsencrypt/live/www.hudi.space/fullchain.pem;\n    ssl_certificate_key /etc/letsencrypt/live/www.hudi.space/privkey.pem;\n    root /usr/share/nginx/html; #这个root的目录就配置git钩子中--work-tree=/home/git/projects/blog所在的目录。\n    index index.html index.htm;\n    location / {\n        try_files $uri $uri/ =404;\n    }\n}\n~~~\n\n完成上述配置以后，重启nginx使配置生效。即可使用https访问你的博客项目了。🎉🎉🎉🎉\n\n\n\n\n\n","slug":"云部署Hexo和Certbot申请","published":1,"date":"2024-11-07T11:20:40.005Z","updated":"2024-11-18T10:42:49.709Z","comments":1,"layout":"post","photos":[],"_id":"cm3u077sd0009ogst9hbwhhlz","content":"<p>​\t\t本章内容只是对最近学习的总结，对互联网相关开发者社区相关文章的一个整合和错误排查。最开始搭建博客的时候，不知道从何处下手。想去实现自己一些喜欢的前端样式，但是奈何都不尽人意，折腾了好久。所以选择了hexo的butterfly主题去快速搭建一个博客。后期还会对博客的部分样式做一定的更改，改成自己喜欢的样式效果。</p>\n<blockquote>\n<p>记录Hexo部署到阿里云服务器全过程 <a href=\"https://developer.aliyun.com/article/775005\">https://developer.aliyun.com/article/775005</a> </p>\n<p>使用Certbot申请&#x2F;续签ssl证书<a href=\"https://developer.aliyun.com/article/1572585\">https://developer.aliyun.com/article/1572585</a></p>\n<p>本篇文章将引用上述两篇文章的内容来总结。</p>\n<p>目的：写本篇文章的目的是Github里面的钩子和SSL证书，是自己的知识盲区，需要记录和总结学习。</p>\n</blockquote>\n<h2 id=\"一、云部署Hexo\"><a href=\"#一、云部署Hexo\" class=\"headerlink\" title=\"一、云部署Hexo\"></a>一、云部署Hexo</h2><h3 id=\"1、环境准备\"><a href=\"#1、环境准备\" class=\"headerlink\" title=\"1、环境准备\"></a>1、环境准备</h3><p>前置环境(注释是我使用当前的版本)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node  #v14.15.0 </span><br><span class=\"line\">git #2.23.0.windows.1</span><br></pre></td></tr></table></figure>\n\n<p>安装hexo-cli，创建第一个hexo项目</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install  -g  hexo-cli\t</span><br><span class=\"line\">hexo init filedir</span><br><span class=\"line\">cd filedir</span><br><span class=\"line\">npm install #安装完毕后</span><br><span class=\"line\">hexo server  #或者是hexo s 启动项目</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>具体的hexo-cli的版本需要根据node的版本来选择。我这里使用的版本是hexo-cli: 4.3.2。若要使用和我相同的版本需要保证node的版本在8.10+以上。不然可能会出现某些模块和功能不能使用的情况。具体的版本限制可以查看hexo的官网<a href=\"https://hexo.io/zh-cn/docs/index.html#Node-js-%E7%89%88%E6%9C%AC%E9%99%90%E5%88%B6\">https://hexo.io/zh-cn/docs/index.html#Node-js-%E7%89%88%E6%9C%AC%E9%99%90%E5%88%B6</a></p>\n</blockquote>\n<p>安装butterfly主题</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">使用git安装，在hexo项目下执行一下命令</span></span><br><span class=\"line\">git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">或者是使用npm安装，但是官方指出，此方法只支持Hexo5.0.0以上版本，通过 npm 安装并不会在 themes 里生成主题文件夹，而是在 node_modules 里生成。</span></span><br><span class=\"line\">npm install hexo-theme-butterfly </span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>完成上述操作，需要把hexo-theme-butterfly项目目录移动到hexo的theme的目录下。</p>\n</blockquote>\n<p>​\t\t修改 Hexo根目录下的_config.yml，把主题改为 butterfly到这一步，博客的butterfly主题的安装设置完成。而butterfly的配置和可以访问<a href=\"https://butterfly.js.org/\">官方文档</a>。</p>\n<h3 id=\"2、云服务器部署\"><a href=\"#2、云服务器部署\" class=\"headerlink\" title=\"2、云服务器部署\"></a>2、云服务器部署</h3><p>服务器必要环境Nginx,使用yum安装或者是使用源码安装，也可以通过docker快速部署一个nginx服务，在这里仅介绍yum和源码安装。</p>\n<div class=\"tabs\"><div class=\"nav-tabs\"><button type=\"button\" class=\"tab active\">yum安装</button><button type=\"button\" class=\"tab\">使用源码安装</button></div><div class=\"tab-contents\"><div class=\"tab-item-content active\"><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y nginx</span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\"><p>这里以nginx-1.20.2为例。</p>\n<p>1、安装相关的依赖软件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install openssl-devel pcre-devel gcc -y</span><br></pre></td></tr></table></figure>\n\n<p>2、创建目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /data</span><br><span class=\"line\">mkdir /data/server /data/soft</span><br></pre></td></tr></table></figure>\n\n<p>3、创建用户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd www -s /sbin/nologin -M</span><br></pre></td></tr></table></figure>\n\n<p>4、上传源码包并解压</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">使用rz工具上传源码包nginx-1.8.1.tar.gz</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">安装rz工具</span></span><br><span class=\"line\">yum install -y lrzsz</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">或执行查看该工具是否存在</span></span><br><span class=\"line\">rpm -qa lrzsz</span><br><span class=\"line\"></span><br><span class=\"line\">[root@hecs-202792 ~]# rpm -qa lrzsz</span><br><span class=\"line\">lrzsz-0.12.20-36.el7.x86_64</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf nginx-1.20.2.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>5、执行编译安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd nginx-1.8.1</span><br><span class=\"line\">./configure --prefix=/data/server/nginx --user=www --group=www  #--prefix 参数是指定nginx的安装目录，配置文件也在该目录下</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n\n<p>6、启动nginx</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/data/server/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>\n\n<p>7、将nginx配置成系统服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/lib/systemd/system/nginx.service</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">服务脚本内容</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=nginx - web server</span><br><span class=\"line\">After=network.target remote-fs.target nss-lookup.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">PIDFile=/data/server/nginx/logs/nginx.pid</span><br><span class=\"line\">ExecStartPre=/data/server/nginx/sbin/nginx -t -c /data/server/nginx/conf/nginx.conf</span><br><span class=\"line\">ExecStart=/data/server/nginx/sbin/nginx -c /data/server/nginx/conf/nginx.conf</span><br><span class=\"line\">ExecReload=/data/server/nginx/sbin/nginx -s reload</span><br><span class=\"line\">ExecStop=/data/server/nginx/sbin/nginx -s stop</span><br><span class=\"line\">ExecQuit=/data/server/nginx/sbin/nginx -s quit</span><br><span class=\"line\">PrivateTmp=true</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n\n<blockquote>\n<p>nginx的配置修改后续再说</p>\n</blockquote>\n<p>安装git</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y git</span><br></pre></td></tr></table></figure>\n\n<p>添加git用户，然后执行一下操作。创建用户的命令要在root下去执行。后续的操作均在git用户下执行。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd git #用户名自己定义</span><br><span class=\"line\">passwd git #修改git用户的密码</span><br><span class=\"line\">su git #切换git用户</span><br><span class=\"line\">mkdir /home/git/project/blog #该目录上就是hexo编译部署后生成静态文件的目录</span><br><span class=\"line\">mkdir /home/git/repos #该项目git仓库的的目录</span><br><span class=\"line\">cd /home/git/repos &amp;&amp; reposgit init --bare blog.git #进入目录并初始化仓库</span><br><span class=\"line\">cd blog.git/hooks </span><br><span class=\"line\">vim post-receive #创建一个钩子,目的是将hexo编译部署后生成静态文件上传到指定的目录</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">post-receive 内容如下：</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/sh</span></span><br><span class=\"line\">git --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">参数说明</span></span><br><span class=\"line\">--work-tree #指定编译部署后生成静态文件上传到指定的目录</span><br><span class=\"line\">--git-dir #指定项目git仓库的目录</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">编辑之后退出vim,为post-receive赋于可执行的权限</span></span><br><span class=\"line\">chmod +x post-receive # 添加可执行权限exit # </span><br></pre></td></tr></table></figure>\n\n<p>完成上述操作以后需要退出git用户。登录root用户为git用户赋于权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chown -R git:git /home/git/repos/blog.git</span><br></pre></td></tr></table></figure>\n\n<p>在本地可以尝试执行以下命令，来查看博客项目所在的仓库是否初始化成功。能够拉取下来就说明仓库是初始化成功的。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@server_ip:/home/git/repos/blog.git  </span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">server_ip 就是服务器所在的ip</span></span><br></pre></td></tr></table></figure>\n\n<p>本地建立SSH信任关系。在gitbash或者是cmd窗口中去执行。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-copy-id -i ~/.ssh/id_rsa.pub git@server_ip # 建立信任关系</span><br><span class=\"line\">ssh git@server_ip  # 试一下能不能登录</span><br><span class=\"line\">ssh-keygen -t rsa #如果没有生成过秘钥就执行生成秘钥的命令，然后一直回车即可 一般生成的秘钥在C:\\Users\\&#123;用户名&#125;\\.ssh 目录下</span><br></pre></td></tr></table></figure>\n\n<p>更改git用户默认的shell。为了服务器安全起见这个git用户最好就拥有git clone等于git命令相关的操作。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">which git-shell #找到git-shell的路径，将其追加入到/etc/shell中</span><br></pre></td></tr></table></figure>\n\n<p>修改git用户登录所用的默认的shell</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/passwd #找到git用户所在的行git:x:1000:1000::/home/git:/bin/bash将 /bin/bash改成git-shell所在的路径。</span><br></pre></td></tr></table></figure>\n\n<p>执行完上述操作，就没办通过ssh在本地登录服务器了。</p>\n<h3 id=\"3、部署上线\"><a href=\"#3、部署上线\" class=\"headerlink\" title=\"3、部署上线\"></a>3、部署上线</h3><p>首先本地的hexo项目需要下载一个部署的插件<a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>然后编辑hexo跟目录下的**_config.yml** 文件。配置如下</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">&#x27;git@server_ip:/home/git/repos/blog.git&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> [<span class=\"string\">master</span>]</span><br></pre></td></tr></table></figure>\n\n<p>然后再项目执行部署命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean #先清除hexo的缓存。</span><br><span class=\"line\">hexo g -d #生成打包文件并将编译后的文件上传到服务器的--work-tree=/home/git/projects/blog 目录下</span><br></pre></td></tr></table></figure>\n\n<p>也可以修改hexo根目录下的package.json的script在添加部署脚本.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:&quot;hexo g -d&quot;;</span><br><span class=\"line\">npm run deploy</span><br></pre></td></tr></table></figure>\n\n<p>配置nginx的配置文件，如果使用yum安装的nginx，配置文件在&#x2F;etc&#x2F;nginx目录下,如果是使用源码安装的配置文件在–prefix&#x3D;&#x2F;data&#x2F;server&#x2F;nginx&#x2F;conf目录下。root的配置一定要注意。git部署的操作是在git用户下，所以目录一定要有git的写入权限，不然是会部署失败的。在修改完nginx配置以后记得刷新使其生效</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi nginx.conf</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        server_name  www.hudi.space; #这里是你服务器域名 </span><br><span class=\"line\">        root         /usr/share/nginx/html; #这个root的目录就配置git钩子中--work-tree=/home/git/projects/blog所在的目录。</span><br><span class=\"line\"></span><br><span class=\"line\">        # Load configuration files for the default server block.</span><br><span class=\"line\">        include /etc/nginx/default.d/*.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page 404 /404.html;</span><br><span class=\"line\">        location = /404.html &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page 500 502 503 504 /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">        &#125;      </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl restart nginx</span><br></pre></td></tr></table></figure>\n\n<p>完成以上配置，你就可以通过http访问hexo博客了。🎉🎉🎉</p>\n<h2 id=\"二、Certbot申请SSL证书\"><a href=\"#二、Certbot申请SSL证书\" class=\"headerlink\" title=\"二、Certbot申请SSL证书\"></a>二、Certbot申请SSL证书</h2><h3 id=\"1、证书申请\"><a href=\"#1、证书申请\" class=\"headerlink\" title=\"1、证书申请\"></a>1、证书申请</h3><p>​\t\t完成上面的配置只能是http访问。本节将介绍https访问和SSL证书申请。由于我使用了多吉云☁️的cdn来给我的的博客项目加速。所以也要给cdn绑定一个域名。</p>\n<p>安装certbot</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install certbot python3-certbot-nginx</span><br></pre></td></tr></table></figure>\n\n<p>申请证书，如果需要申请多个证书，就在后面继续指定-d 参数和域名即可。由于certbot这个工具他会校验域名的生效性。所以可以先把cdn的子域名的解析绑定到我们自己的服务器的IP上先做证书的生成。然后在修改cdn域名的cname值即可。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">certbot certonly --nginx -d www.hudi.space -d cdn.hudi.space   </span><br></pre></td></tr></table></figure>\n\n<p>如果在执行上述命令提示没有python3-certbot-nginx包时。可以使用如下命令安装插件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install certbot-nginx</span><br></pre></td></tr></table></figure>\n\n<p>在执行证书生成的过程中，会提示输入邮箱等信息，按照实际填写即可。生成的证书是在&#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F; 的目录下。进入域名所在目录。查看证书</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@hcss-ecs-0985 ~]# cd /etc/letsencrypt/live/www.hudi.space</span><br><span class=\"line\">[root@hcss-ecs-0985 www.hudi.space]# pwd</span><br><span class=\"line\">/etc/letsencrypt/live/www.hudi.space</span><br><span class=\"line\">[root@hcss-ecs-0985 www.hudi.space]# ls</span><br><span class=\"line\">cert.pem  chain.pem  fullchain.pem  privkey.pem  README</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、Nginx配置https\"><a href=\"#2、Nginx配置https\" class=\"headerlink\" title=\"2、Nginx配置https\"></a>2、Nginx配置https</h3><p>同样是修改nginx.conf文件。将http的80端口的访问改为转发，修改https的配置即可。具体配置如下。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name www.hudi.space;</span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">重定向HTTP请求到HTTPS</span></span><br><span class=\"line\">\treturn 301 https://www.hudi.space$request_uri;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 443 ssl;</span><br><span class=\"line\">    server_name www.hudi.space</span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">SSL配置</span></span><br><span class=\"line\">    ssl_certificate /etc/letsencrypt/live/www.hudi.space/fullchain.pem;</span><br><span class=\"line\">    ssl_certificate_key /etc/letsencrypt/live/www.hudi.space/privkey.pem;</span><br><span class=\"line\">    root /usr/share/nginx/html; #这个root的目录就配置git钩子中--work-tree=/home/git/projects/blog所在的目录。</span><br><span class=\"line\">    index index.html index.htm;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        try_files $uri $uri/ =404;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完成上述配置以后，重启nginx使配置生效。即可使用https访问你的博客项目了。🎉🎉🎉🎉</p>\n","cover_type":"img","excerpt":"","more":"<p>​\t\t本章内容只是对最近学习的总结，对互联网相关开发者社区相关文章的一个整合和错误排查。最开始搭建博客的时候，不知道从何处下手。想去实现自己一些喜欢的前端样式，但是奈何都不尽人意，折腾了好久。所以选择了hexo的butterfly主题去快速搭建一个博客。后期还会对博客的部分样式做一定的更改，改成自己喜欢的样式效果。</p>\n<blockquote>\n<p>记录Hexo部署到阿里云服务器全过程 <a href=\"https://developer.aliyun.com/article/775005\">https://developer.aliyun.com/article/775005</a> </p>\n<p>使用Certbot申请&#x2F;续签ssl证书<a href=\"https://developer.aliyun.com/article/1572585\">https://developer.aliyun.com/article/1572585</a></p>\n<p>本篇文章将引用上述两篇文章的内容来总结。</p>\n<p>目的：写本篇文章的目的是Github里面的钩子和SSL证书，是自己的知识盲区，需要记录和总结学习。</p>\n</blockquote>\n<h2 id=\"一、云部署Hexo\"><a href=\"#一、云部署Hexo\" class=\"headerlink\" title=\"一、云部署Hexo\"></a>一、云部署Hexo</h2><h3 id=\"1、环境准备\"><a href=\"#1、环境准备\" class=\"headerlink\" title=\"1、环境准备\"></a>1、环境准备</h3><p>前置环境(注释是我使用当前的版本)</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node  #v14.15.0 </span><br><span class=\"line\">git #2.23.0.windows.1</span><br></pre></td></tr></table></figure>\n\n<p>安装hexo-cli，创建第一个hexo项目</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install  -g  hexo-cli\t</span><br><span class=\"line\">hexo init filedir</span><br><span class=\"line\">cd filedir</span><br><span class=\"line\">npm install #安装完毕后</span><br><span class=\"line\">hexo server  #或者是hexo s 启动项目</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>具体的hexo-cli的版本需要根据node的版本来选择。我这里使用的版本是hexo-cli: 4.3.2。若要使用和我相同的版本需要保证node的版本在8.10+以上。不然可能会出现某些模块和功能不能使用的情况。具体的版本限制可以查看hexo的官网<a href=\"https://hexo.io/zh-cn/docs/index.html#Node-js-%E7%89%88%E6%9C%AC%E9%99%90%E5%88%B6\">https://hexo.io/zh-cn/docs/index.html#Node-js-%E7%89%88%E6%9C%AC%E9%99%90%E5%88%B6</a></p>\n</blockquote>\n<p>安装butterfly主题</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">使用git安装，在hexo项目下执行一下命令</span></span><br><span class=\"line\">git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">或者是使用npm安装，但是官方指出，此方法只支持Hexo5.0.0以上版本，通过 npm 安装并不会在 themes 里生成主题文件夹，而是在 node_modules 里生成。</span></span><br><span class=\"line\">npm install hexo-theme-butterfly </span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>完成上述操作，需要把hexo-theme-butterfly项目目录移动到hexo的theme的目录下。</p>\n</blockquote>\n<p>​\t\t修改 Hexo根目录下的_config.yml，把主题改为 butterfly到这一步，博客的butterfly主题的安装设置完成。而butterfly的配置和可以访问<a href=\"https://butterfly.js.org/\">官方文档</a>。</p>\n<h3 id=\"2、云服务器部署\"><a href=\"#2、云服务器部署\" class=\"headerlink\" title=\"2、云服务器部署\"></a>2、云服务器部署</h3><p>服务器必要环境Nginx,使用yum安装或者是使用源码安装，也可以通过docker快速部署一个nginx服务，在这里仅介绍yum和源码安装。</p>\n<div class=\"tabs\"><div class=\"nav-tabs\"><button type=\"button\" class=\"tab active\">yum安装</button><button type=\"button\" class=\"tab\">使用源码安装</button></div><div class=\"tab-contents\"><div class=\"tab-item-content active\"><figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y nginx</span><br></pre></td></tr></table></figure></div><div class=\"tab-item-content\"><p>这里以nginx-1.20.2为例。</p>\n<p>1、安装相关的依赖软件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install openssl-devel pcre-devel gcc -y</span><br></pre></td></tr></table></figure>\n\n<p>2、创建目录</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mkdir /data</span><br><span class=\"line\">mkdir /data/server /data/soft</span><br></pre></td></tr></table></figure>\n\n<p>3、创建用户</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd www -s /sbin/nologin -M</span><br></pre></td></tr></table></figure>\n\n<p>4、上传源码包并解压</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">使用rz工具上传源码包nginx-1.8.1.tar.gz</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">安装rz工具</span></span><br><span class=\"line\">yum install -y lrzsz</span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">或执行查看该工具是否存在</span></span><br><span class=\"line\">rpm -qa lrzsz</span><br><span class=\"line\"></span><br><span class=\"line\">[root@hecs-202792 ~]# rpm -qa lrzsz</span><br><span class=\"line\">lrzsz-0.12.20-36.el7.x86_64</span><br><span class=\"line\"></span><br><span class=\"line\">tar -zxvf nginx-1.20.2.tar.gz</span><br></pre></td></tr></table></figure>\n\n<p>5、执行编译安装</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">cd nginx-1.8.1</span><br><span class=\"line\">./configure --prefix=/data/server/nginx --user=www --group=www  #--prefix 参数是指定nginx的安装目录，配置文件也在该目录下</span><br><span class=\"line\">make &amp;&amp; make install</span><br></pre></td></tr></table></figure>\n\n<p>6、启动nginx</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/data/server/nginx/sbin/nginx</span><br></pre></td></tr></table></figure>\n\n<p>7、将nginx配置成系统服务</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /usr/lib/systemd/system/nginx.service</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">服务脚本内容</span></span><br><span class=\"line\">[Unit]</span><br><span class=\"line\">Description=nginx - web server</span><br><span class=\"line\">After=network.target remote-fs.target nss-lookup.target</span><br><span class=\"line\">[Service]</span><br><span class=\"line\">Type=forking</span><br><span class=\"line\">PIDFile=/data/server/nginx/logs/nginx.pid</span><br><span class=\"line\">ExecStartPre=/data/server/nginx/sbin/nginx -t -c /data/server/nginx/conf/nginx.conf</span><br><span class=\"line\">ExecStart=/data/server/nginx/sbin/nginx -c /data/server/nginx/conf/nginx.conf</span><br><span class=\"line\">ExecReload=/data/server/nginx/sbin/nginx -s reload</span><br><span class=\"line\">ExecStop=/data/server/nginx/sbin/nginx -s stop</span><br><span class=\"line\">ExecQuit=/data/server/nginx/sbin/nginx -s quit</span><br><span class=\"line\">PrivateTmp=true</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></div></div><div class=\"tab-to-top\"><button type=\"button\" aria-label=\"scroll to top\"><i class=\"fas fa-arrow-up\"></i></button></div></div>\n\n<blockquote>\n<p>nginx的配置修改后续再说</p>\n</blockquote>\n<p>安装git</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install -y git</span><br></pre></td></tr></table></figure>\n\n<p>添加git用户，然后执行一下操作。创建用户的命令要在root下去执行。后续的操作均在git用户下执行。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">useradd git #用户名自己定义</span><br><span class=\"line\">passwd git #修改git用户的密码</span><br><span class=\"line\">su git #切换git用户</span><br><span class=\"line\">mkdir /home/git/project/blog #该目录上就是hexo编译部署后生成静态文件的目录</span><br><span class=\"line\">mkdir /home/git/repos #该项目git仓库的的目录</span><br><span class=\"line\">cd /home/git/repos &amp;&amp; reposgit init --bare blog.git #进入目录并初始化仓库</span><br><span class=\"line\">cd blog.git/hooks </span><br><span class=\"line\">vim post-receive #创建一个钩子,目的是将hexo编译部署后生成静态文件上传到指定的目录</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">post-receive 内容如下：</span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">!/bin/sh</span></span><br><span class=\"line\">git --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">参数说明</span></span><br><span class=\"line\">--work-tree #指定编译部署后生成静态文件上传到指定的目录</span><br><span class=\"line\">--git-dir #指定项目git仓库的目录</span><br><span class=\"line\"><span class=\"meta prompt_\"></span></span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">编辑之后退出vim,为post-receive赋于可执行的权限</span></span><br><span class=\"line\">chmod +x post-receive # 添加可执行权限exit # </span><br></pre></td></tr></table></figure>\n\n<p>完成上述操作以后需要退出git用户。登录root用户为git用户赋于权限</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">chown -R git:git /home/git/repos/blog.git</span><br></pre></td></tr></table></figure>\n\n<p>在本地可以尝试执行以下命令，来查看博客项目所在的仓库是否初始化成功。能够拉取下来就说明仓库是初始化成功的。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone git@server_ip:/home/git/repos/blog.git  </span><br><span class=\"line\"><span class=\"meta prompt_\">#</span><span class=\"language-bash\">server_ip 就是服务器所在的ip</span></span><br></pre></td></tr></table></figure>\n\n<p>本地建立SSH信任关系。在gitbash或者是cmd窗口中去执行。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ssh-copy-id -i ~/.ssh/id_rsa.pub git@server_ip # 建立信任关系</span><br><span class=\"line\">ssh git@server_ip  # 试一下能不能登录</span><br><span class=\"line\">ssh-keygen -t rsa #如果没有生成过秘钥就执行生成秘钥的命令，然后一直回车即可 一般生成的秘钥在C:\\Users\\&#123;用户名&#125;\\.ssh 目录下</span><br></pre></td></tr></table></figure>\n\n<p>更改git用户默认的shell。为了服务器安全起见这个git用户最好就拥有git clone等于git命令相关的操作。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">which git-shell #找到git-shell的路径，将其追加入到/etc/shell中</span><br></pre></td></tr></table></figure>\n\n<p>修改git用户登录所用的默认的shell</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi /etc/passwd #找到git用户所在的行git:x:1000:1000::/home/git:/bin/bash将 /bin/bash改成git-shell所在的路径。</span><br></pre></td></tr></table></figure>\n\n<p>执行完上述操作，就没办通过ssh在本地登录服务器了。</p>\n<h3 id=\"3、部署上线\"><a href=\"#3、部署上线\" class=\"headerlink\" title=\"3、部署上线\"></a>3、部署上线</h3><p>首先本地的hexo项目需要下载一个部署的插件<a href=\"https://github.com/hexojs/hexo-deployer-git\">hexo-deployer-git</a></p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>\n\n<p>然后编辑hexo跟目录下的**_config.yml** 文件。配置如下</p>\n<figure class=\"highlight yml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">deploy:</span></span><br><span class=\"line\">  <span class=\"attr\">type:</span> <span class=\"string\">&#x27;git&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">repo:</span> <span class=\"string\">&#x27;git@server_ip:/home/git/repos/blog.git&#x27;</span></span><br><span class=\"line\">  <span class=\"attr\">branch:</span> [<span class=\"string\">master</span>]</span><br></pre></td></tr></table></figure>\n\n<p>然后再项目执行部署命令</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean #先清除hexo的缓存。</span><br><span class=\"line\">hexo g -d #生成打包文件并将编译后的文件上传到服务器的--work-tree=/home/git/projects/blog 目录下</span><br></pre></td></tr></table></figure>\n\n<p>也可以修改hexo根目录下的package.json的script在添加部署脚本.</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">deploy:&quot;hexo g -d&quot;;</span><br><span class=\"line\">npm run deploy</span><br></pre></td></tr></table></figure>\n\n<p>配置nginx的配置文件，如果使用yum安装的nginx，配置文件在&#x2F;etc&#x2F;nginx目录下,如果是使用源码安装的配置文件在–prefix&#x3D;&#x2F;data&#x2F;server&#x2F;nginx&#x2F;conf目录下。root的配置一定要注意。git部署的操作是在git用户下，所以目录一定要有git的写入权限，不然是会部署失败的。在修改完nginx配置以后记得刷新使其生效</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi nginx.conf</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">        listen       80;</span><br><span class=\"line\">        server_name  www.hudi.space; #这里是你服务器域名 </span><br><span class=\"line\">        root         /usr/share/nginx/html; #这个root的目录就配置git钩子中--work-tree=/home/git/projects/blog所在的目录。</span><br><span class=\"line\"></span><br><span class=\"line\">        # Load configuration files for the default server block.</span><br><span class=\"line\">        include /etc/nginx/default.d/*.conf;</span><br><span class=\"line\"></span><br><span class=\"line\">        error_page 404 /404.html;</span><br><span class=\"line\">        location = /404.html &#123;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        #error_page 500 502 503 504 /50x.html;</span><br><span class=\"line\">        location = /50x.html &#123;</span><br><span class=\"line\">        &#125;      </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">systemctl restart nginx</span><br></pre></td></tr></table></figure>\n\n<p>完成以上配置，你就可以通过http访问hexo博客了。🎉🎉🎉</p>\n<h2 id=\"二、Certbot申请SSL证书\"><a href=\"#二、Certbot申请SSL证书\" class=\"headerlink\" title=\"二、Certbot申请SSL证书\"></a>二、Certbot申请SSL证书</h2><h3 id=\"1、证书申请\"><a href=\"#1、证书申请\" class=\"headerlink\" title=\"1、证书申请\"></a>1、证书申请</h3><p>​\t\t完成上面的配置只能是http访问。本节将介绍https访问和SSL证书申请。由于我使用了多吉云☁️的cdn来给我的的博客项目加速。所以也要给cdn绑定一个域名。</p>\n<p>安装certbot</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum install certbot python3-certbot-nginx</span><br></pre></td></tr></table></figure>\n\n<p>申请证书，如果需要申请多个证书，就在后面继续指定-d 参数和域名即可。由于certbot这个工具他会校验域名的生效性。所以可以先把cdn的子域名的解析绑定到我们自己的服务器的IP上先做证书的生成。然后在修改cdn域名的cname值即可。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">certbot certonly --nginx -d www.hudi.space -d cdn.hudi.space   </span><br></pre></td></tr></table></figure>\n\n<p>如果在执行上述命令提示没有python3-certbot-nginx包时。可以使用如下命令安装插件</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install certbot-nginx</span><br></pre></td></tr></table></figure>\n\n<p>在执行证书生成的过程中，会提示输入邮箱等信息，按照实际填写即可。生成的证书是在&#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F; 的目录下。进入域名所在目录。查看证书</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[root@hcss-ecs-0985 ~]# cd /etc/letsencrypt/live/www.hudi.space</span><br><span class=\"line\">[root@hcss-ecs-0985 www.hudi.space]# pwd</span><br><span class=\"line\">/etc/letsencrypt/live/www.hudi.space</span><br><span class=\"line\">[root@hcss-ecs-0985 www.hudi.space]# ls</span><br><span class=\"line\">cert.pem  chain.pem  fullchain.pem  privkey.pem  README</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、Nginx配置https\"><a href=\"#2、Nginx配置https\" class=\"headerlink\" title=\"2、Nginx配置https\"></a>2、Nginx配置https</h3><p>同样是修改nginx.conf文件。将http的80端口的访问改为转发，修改https的配置即可。具体配置如下。</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    server_name www.hudi.space;</span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">重定向HTTP请求到HTTPS</span></span><br><span class=\"line\">\treturn 301 https://www.hudi.space$request_uri;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 443 ssl;</span><br><span class=\"line\">    server_name www.hudi.space</span><br><span class=\"line\"><span class=\"meta prompt_\">\t# </span><span class=\"language-bash\">SSL配置</span></span><br><span class=\"line\">    ssl_certificate /etc/letsencrypt/live/www.hudi.space/fullchain.pem;</span><br><span class=\"line\">    ssl_certificate_key /etc/letsencrypt/live/www.hudi.space/privkey.pem;</span><br><span class=\"line\">    root /usr/share/nginx/html; #这个root的目录就配置git钩子中--work-tree=/home/git/projects/blog所在的目录。</span><br><span class=\"line\">    index index.html index.htm;</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        try_files $uri $uri/ =404;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>完成上述配置以后，重启nginx使配置生效。即可使用https访问你的博客项目了。🎉🎉🎉🎉</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cm3u077rz0003ogst3xkf82bk","category_id":"cm3u077sf000bogstbyanfoa9","_id":"cm3u077sl000jogst79qrge64"},{"post_id":"cm3u077sd0009ogst9hbwhhlz","category_id":"cm3u077sm000kogstdcbn0mjo","_id":"cm3u077sq000sogst0t958hhh"},{"post_id":"cm3u077rs0001ogst3e9i9zby","category_id":"cm3u077s10004ogst13g3hpdk","_id":"cm3u077sr000xogst7bcmg6xv"},{"post_id":"cm3u077rs0001ogst3e9i9zby","category_id":"cm3u077sp000oogstaojjg00r","_id":"cm3u077ss000zogst9tv64y6m"},{"post_id":"cm3u077s80007ogst752j5gwp","category_id":"cm3u077sh000fogst9x4hadlf","_id":"cm3u077ss0010ogst080ihj1r"},{"post_id":"cm3u077s80007ogst752j5gwp","category_id":"cm3u077sq000togsta10t9zey","_id":"cm3u077ss0012ogst7ycw0rnz"}],"PostTag":[{"post_id":"cm3u077rs0001ogst3e9i9zby","tag_id":"cm3u077s60005ogst704mh3rm","_id":"cm3u077sq000qogst0zr57ky0"},{"post_id":"cm3u077rs0001ogst3e9i9zby","tag_id":"cm3u077sf000cogstbc7t7ksj","_id":"cm3u077sq000rogst2alif4qu"},{"post_id":"cm3u077rs0001ogst3e9i9zby","tag_id":"cm3u077si000gogst5l2genbk","_id":"cm3u077sr000vogst4dwk6wxf"},{"post_id":"cm3u077rs0001ogst3e9i9zby","tag_id":"cm3u077sm000logstb9uth3hh","_id":"cm3u077sr000wogsta4wsb5h6"},{"post_id":"cm3u077rz0003ogst3xkf82bk","tag_id":"cm3u077sp000pogst1o5pc2zj","_id":"cm3u077sx001cogst0s9jgesm"},{"post_id":"cm3u077rz0003ogst3xkf82bk","tag_id":"cm3u077sq000uogstckg9c1cx","_id":"cm3u077sx001dogstg3uw787a"},{"post_id":"cm3u077rz0003ogst3xkf82bk","tag_id":"cm3u077sr000yogstbvi7brsv","_id":"cm3u077sy001fogstfxfnbvoc"},{"post_id":"cm3u077rz0003ogst3xkf82bk","tag_id":"cm3u077ss0011ogsthsf731ot","_id":"cm3u077sy001gogsta7h7hnva"},{"post_id":"cm3u077rz0003ogst3xkf82bk","tag_id":"cm3u077ss0013ogst3bxl5ok3","_id":"cm3u077sy001iogstcn2fcpdf"},{"post_id":"cm3u077rz0003ogst3xkf82bk","tag_id":"cm3u077st0014ogst9ldhhg0o","_id":"cm3u077sy001jogst5tud3rbv"},{"post_id":"cm3u077rz0003ogst3xkf82bk","tag_id":"cm3u077st0015ogst42lhaab9","_id":"cm3u077sz001logstazc69k4b"},{"post_id":"cm3u077rz0003ogst3xkf82bk","tag_id":"cm3u077su0016ogstamabc1b4","_id":"cm3u077sz001mogst172y0txs"},{"post_id":"cm3u077rz0003ogst3xkf82bk","tag_id":"cm3u077st0014ogst9ldhhg0o","_id":"cm3u077sz001oogste3rybapj"},{"post_id":"cm3u077rz0003ogst3xkf82bk","tag_id":"cm3u077sv0018ogst25ptbcno","_id":"cm3u077t0001pogsthd9lb59j"},{"post_id":"cm3u077rz0003ogst3xkf82bk","tag_id":"cm3u077sw0019ogstcchm9tme","_id":"cm3u077t0001qogst23676odk"},{"post_id":"cm3u077rz0003ogst3xkf82bk","tag_id":"cm3u077sw001aogst8bh6ace1","_id":"cm3u077t1001sogst2cwlcozf"},{"post_id":"cm3u077s80007ogst752j5gwp","tag_id":"cm3u077s60005ogst704mh3rm","_id":"cm3u077t1001togste2bj9dd2"},{"post_id":"cm3u077s80007ogst752j5gwp","tag_id":"cm3u077sx001eogst6j9pfddy","_id":"cm3u077t1001uogst68bnern2"},{"post_id":"cm3u077s80007ogst752j5gwp","tag_id":"cm3u077sy001hogst8ftlaqu0","_id":"cm3u077t1001vogst5nx4h1lb"},{"post_id":"cm3u077s80007ogst752j5gwp","tag_id":"cm3u077sy001kogst417nat5y","_id":"cm3u077t2001wogsthkllg18n"},{"post_id":"cm3u077sd0009ogst9hbwhhlz","tag_id":"cm3u077sz001nogst9d6rajbp","_id":"cm3u077t2001xogsthnqrbz51"},{"post_id":"cm3u077sd0009ogst9hbwhhlz","tag_id":"cm3u077t0001rogst6b7g3jv6","_id":"cm3u077t2001yogst90u50bem"}],"Tag":[{"name":"工具","_id":"cm3u077s60005ogst704mh3rm"},{"name":"Flume","_id":"cm3u077sf000cogstbc7t7ksj"},{"name":"数据采集","_id":"cm3u077si000gogst5l2genbk"},{"name":"分布式","_id":"cm3u077sm000logstb9uth3hh"},{"name":"Oracle","_id":"cm3u077sp000pogst1o5pc2zj"},{"name":"关系型数据库","_id":"cm3u077sq000uogstckg9c1cx"},{"name":"表","_id":"cm3u077sr000yogstbvi7brsv"},{"name":"视图","_id":"cm3u077ss0011ogsthsf731ot"},{"name":"表空间","_id":"cm3u077ss0013ogst3bxl5ok3"},{"name":"序列","_id":"cm3u077st0014ogst9ldhhg0o"},{"name":"函数","_id":"cm3u077st0015ogst42lhaab9"},{"name":"索引","_id":"cm3u077su0016ogstamabc1b4"},{"name":"触发器","_id":"cm3u077sv0018ogst25ptbcno"},{"name":"存储函数","_id":"cm3u077sw0019ogstcchm9tme"},{"name":"存储过程","_id":"cm3u077sw001aogst8bh6ace1"},{"name":"图床配置","_id":"cm3u077sx001eogst6j9pfddy"},{"name":"Picgo","_id":"cm3u077sy001hogst8ftlaqu0"},{"name":"云存储服务","_id":"cm3u077sy001kogst417nat5y"},{"name":"hexo","_id":"cm3u077sz001nogst9d6rajbp"},{"name":"云服务","_id":"cm3u077t0001rogst6b7g3jv6"}]}}