<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Svg描边Loading动画</title>
      <link href="/posts/ca287c24/"/>
      <url>/posts/ca287c24/</url>
      
        <content type="html"><![CDATA[<h1 id="Svg描边动画"><a href="#Svg描边动画" class="headerlink" title="Svg描边动画"></a>Svg描边动画</h1><p>​之前在浏览他人的博客时，看到loading动画是蒙娜丽莎的svg描边。觉得挺对自己胃口的，但是又不知道这样的效果怎么去实现，去b站刷了一些前端的学习视频，其中看到一个特别好看的动画特效。active状态下导航栏的每一个菜单项图标的动画描边，但是奈何不知道怎么把svg的图标放到butterfly的__config.yml当中，所以决定写一个svg的描边loading动画。</p><p>​svg图标的定义本文不再描述。</p><h2 id="一、Svg图标库"><a href="#一、Svg图标库" class="headerlink" title="一、Svg图标库"></a>一、Svg图标库</h2><h3 id="1、Svg图标"><a href="#1、Svg图标" class="headerlink" title="1、Svg图标"></a>1、Svg图标</h3><p>1、目前国内使用比较火的就是阿里巴巴矢量图标库iconfont 官网地址：<a href="https://www.iconfont.cn/">https://www.iconfont.cn</a>  图标比较多，并且是免费使用的。本文以阿里云图标为例。使用方法都是相同的。</p><p>2、当然还有一些其他的图标库，会列举一二，但是具体收付费情况需要自行查看官网。</p><p>iconpark：官网地址：<a href="https://iconpark.oceanengine.com./">https://iconpark.oceanengine.com。</a></p><p>iconfinder：官网地址： <a href="https://www.iconfinder.com/">https://www.iconfinder.com</a></p><p>flaticon：官网地址：<a href="https://www.flaticon.com/">https://www.flaticon.com</a></p><h3 id="2、获取Svg图标"><a href="#2、获取Svg图标" class="headerlink" title="2、获取Svg图标"></a>2、获取Svg图标</h3><p>首先登录阿里巴巴矢量图标库iconfont 官网地址：<a href="https://www.iconfont.cn/">https://www.iconfont.cn</a> 官方网站。由于获取的是svg图标，其实就是图标的路径信息。所以只需要复制svg的路径信息就可以直接使用了。</p><p>在搜索栏输入想要的图标信息。支持中文直接搜索，也可使用英文。</p><p><img src="https://bitiful.hudi.space/posts/2024/11/3b3dc2ab52c4dd23150aa1644f11af53.png" alt="image-20241126184904620"></p><p>然后再搜索栏中点击心意的图标的下载按钮，就可以获取该图标的的信息了。可以在被选中图标的页面，对图标的颜色，大小等信息进行配置。也可以直接下载图标的png图片。这里我们点击【复制svg代码信息】按钮。本文仅以一个简单svg向右的图标为例。其他任何的复杂的svg图标描边动画都可以用该方法去实现。</p><p><img src="https://bitiful.hudi.space/posts/2024/11/6c79073b3361657a6751a8d31c093e58.png" alt="image-20241126190350090"></p><p>将svg代码直接粘贴到的html页面的适当位置就可以正常显示了。但是他只是静静地显示在页面上。没有任何的动态效果。由于要使用css动画描边，所以建议图标的颜色最好是白色，描边的颜色是黑色或者是图标黑色，描边白色。这样更加能够去凸显描边的效果。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;loading&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">svg</span> <span class="attr">t</span>=<span class="string">&quot;1732618860711&quot;</span> <span class="attr">class</span>=<span class="string">&quot;icon&quot;</span> <span class="attr">viewBox</span>=<span class="string">&quot;0 0 1024 1024&quot;</span> <span class="attr">version</span>=<span class="string">&quot;1.1&quot;</span> <span class="attr">xmlns</span>=<span class="string">&quot;http://www.w3.org/2000/svg&quot;</span> <span class="attr">p-id</span>=<span class="string">&quot;9189&quot;</span> <span class="attr">width</span>=<span class="string">&quot;200&quot;</span> <span class="attr">height</span>=<span class="string">&quot;200&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">path</span> <span class="attr">class</span>=<span class="string">&quot;path&quot;</span> <span class="attr">d</span>=<span class="string">&quot;M782.222222 512L307.2 1012.622222c-14.222222 11.377778-39.822222 14.222222-51.2 2.844445-8.533333-8.533333-14.222222-28.444444 2.844444-45.511111l440.888889-455.111112L258.844444 56.888889S241.777778 28.444444 264.533333 14.222222c19.911111-14.222222 34.133333-8.533333 42.666667 0L782.222222 512z&quot;</span> <span class="attr">fill</span>=<span class="string">&quot;#ffffff&quot;</span> <span class="attr">p-id</span>=<span class="string">&quot;9190&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">path</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">svg</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="二、Svg描边动画"><a href="#二、Svg描边动画" class="headerlink" title="二、Svg描边动画"></a>二、Svg描边动画</h2><h3 id="1、添加css代码"><a href="#1、添加css代码" class="headerlink" title="1、添加css代码"></a>1、添加css代码</h3><p>首先为svg的path元素添加一个类样式，<em>注意选取的svg图标的复杂程度，svg元素下会有多个path元素，要为每一个path元素都添加类样式。</em></p><p>css代码如下。该部分代码只是讲解svg描边的原理，并非最终代码。最终实现代码在后文中。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.path</span>&#123;</span><br><span class="line">     <span class="attribute">stroke</span>: lightslategrey; </span><br><span class="line">     <span class="attribute">stroke-width</span>:<span class="number">10</span>;</span><br><span class="line">     <span class="attribute">stroke-dasharray</span>: <span class="number">20</span>;</span><br><span class="line">     <span class="attribute">stroke-dashoffset</span>: <span class="number">10</span>;</span><br><span class="line">     <span class="attribute">stroke-linecap</span>: round;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="2、属性说明"><a href="#2、属性说明" class="headerlink" title="2、属性说明"></a>2、属性说明</h3><table><thead><tr><th>属性名</th><th>作用</th></tr></thead><tbody><tr><td>stroke</td><td>描边的颜色为lightslategrey</td></tr><tr><td>stroke-width</td><td>描边线条的宽度为10</td></tr><tr><td>stroke-dasharray</td><td>描边线条的类型为虚线，表示虚线和间隔都是20个单位长度。</td></tr><tr><td>stroke-dashoffset</td><td>虚线与路径起点之间的偏移量为10</td></tr><tr><td>stroke-linecap</td><td>线段端点的样式</td></tr></tbody></table><h3 id="3、描边原理"><a href="#3、描边原理" class="headerlink" title="3、描边原理"></a>3、描边原理</h3><p>1、当stroke-dashoffset正增长时，线条就会向线的起始位置去移动。</p><p>2、当stroke-dashoffset负增长时，线条就会向线的结束位置去移动。</p><p>3、当stroke-dasharray的值与路径的长度相等时，这时虚线中的一段，就会覆盖出整个路径。也就是一整个图标。当stroke-dashoffset的值是路径的长度值这时整个图标我们看到的就是空隙的部分。也就是图标呈现出不可见状态。这时定义动画让stroke-dashoffset从整个路径值向0改变。这时图标的路径的将向结束位置偏移。实线的部分也就慢慢的展现出来，就可以实现一个描边的效果了。但是由与复杂的svg图标路径长度我们是没办法直接获取到的。但是可以通过JavaScript去获取。同时要让JavaScript获取到的值，去绑定到对应元素的css的属性上，所以就需要引入一个css变量，–length表示整个svg图标的路径长度。</p><h3 id="4、代码实现"><a href="#4、代码实现" class="headerlink" title="4、代码实现"></a>4、代码实现</h3><p>获取路径长度的并设置–length属性的JavaScript代码</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> plist =<span class="variable language_">document</span>.<span class="title function_">querySelectorAll</span>(<span class="string">&quot;.path&quot;</span>)</span><br><span class="line">    plist.<span class="title function_">forEach</span>(<span class="function"><span class="params">p</span>=&gt;</span>&#123;</span><br><span class="line">       <span class="keyword">const</span> length= p.<span class="title function_">getTotalLength</span>()</span><br><span class="line">        p.<span class="property">style</span>.<span class="title function_">setProperty</span>(<span class="string">&quot;--length&quot;</span>,length)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>css代码,同时加上stroke-dashoffset的位移动画代码如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"> <span class="selector-class">.path</span>&#123;</span><br><span class="line">     <span class="attribute">stroke</span>: lightslategrey;</span><br><span class="line">     <span class="attribute">stroke-width</span>:<span class="number">10</span>;</span><br><span class="line">     <span class="attribute">stroke-dasharray</span>: <span class="built_in">var</span>(--length);</span><br><span class="line">     <span class="attribute">stroke-dashoffset</span>: <span class="built_in">var</span>(--length);</span><br><span class="line">     <span class="attribute">stroke-linecap</span>: round;</span><br><span class="line">     <span class="attribute">animation</span>: strokesanimation <span class="number">2s</span> infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> strokesanimation &#123;</span><br><span class="line">    <span class="selector-tag">to</span>&#123;</span><br><span class="line">         <span class="attribute">stroke-dashoffset</span>: <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>到这里，整个svg描边就完成了。🎉🎉🎉🎉</p><h2 id="三、动画替换"><a href="#三、动画替换" class="headerlink" title="三、动画替换"></a>三、动画替换</h2><p>​butterfly主题的fullpage_loading.pug的替换。由于本人刚接触butterfly，很多地方不熟悉。所以这里仅仅是一种参考方案。若您有更好方案的也可以分享出来。替换步骤如下。<em>注意：在替换前请注意备份原来的fullpage_loading.pug代码，防止替换失败，代码信息无法恢复。</em></p><p>1、pug模版。文件路径：themes\butterfly\layout\includes\loading\fullpage_loading.pug</p><figure class="highlight diff"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#loading-box</span><br><span class="line">  .loading-left-bg</span><br><span class="line">  .loading-right-bg</span><br><span class="line">  .spinner-box</span><br><span class="line"><span class="deletion">-    .configure-border-1</span></span><br><span class="line"><span class="deletion">-      .configure-core</span></span><br><span class="line"><span class="deletion">-    .configure-border-2</span></span><br><span class="line"><span class="deletion">-      .configure-core</span></span><br><span class="line"><span class="deletion">-    .loading-word= _p(&#x27;loading&#x27;)</span></span><br><span class="line"><span class="addition">+    .svg</span></span><br><span class="line"></span><br><span class="line"># script代码中initloading方法中添加以下代码.svg.innerHTML替换你需要的svg图标的代码信息即可</span><br><span class="line"></span><br><span class="line">initLoading: () =&gt; &#123;</span><br><span class="line"><span class="addition">+      const svg= document.querySelector(&quot;.svg&quot;)</span></span><br><span class="line"><span class="addition">+      svg.innerHTML=``</span></span><br><span class="line"><span class="addition">+      let plist = document.querySelectorAll(&quot;.path&quot;)</span></span><br><span class="line"><span class="addition">+      plist.forEach(p =&gt; &#123;</span></span><br><span class="line"><span class="addition">+         const length = p.getTotalLength()</span></span><br><span class="line"><span class="addition">+         p.style.setProperty(&quot;--length&quot;, length)</span></span><br><span class="line"><span class="addition">+       &#125;)</span></span><br><span class="line">        $body.style.overflow = &#x27;hidden&#x27;</span><br><span class="line">        $loadingBox.classList.remove(&#x27;loaded&#x27;)</span><br><span class="line">      &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、style样式信息替换，文件路径：themes\butterfly\source\css_layout\loading.styl</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line">#在<span class="selector-class">.spinner-box</span>下直接添加以下代码。注意缩进不然会报错</span><br><span class="line"><span class="selector-class">.path</span>&#123;</span><br><span class="line">        <span class="attribute">stroke</span>: lightslategrey;</span><br><span class="line">        <span class="attr">--length</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">stroke-width</span>:<span class="number">10</span>;</span><br><span class="line">        <span class="attribute">stroke-dasharray</span>: <span class="built_in">var</span>(--length);</span><br><span class="line">        <span class="attribute">stroke-dashoffset</span>: <span class="built_in">var</span>(--length);</span><br><span class="line">        <span class="attribute">stroke-linecap</span>: round;</span><br><span class="line">        <span class="attribute">animation</span>: strokesanimation <span class="number">2s</span> infinite;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">@keyframes</span> strokesanimation &#123;</span><br><span class="line">  <span class="selector-tag">to</span>&#123;</span><br><span class="line">    <span class="attribute">stroke-dashoffset</span>: <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#注释以下代码</span><br><span class="line"><span class="selector-class">.configure-border-1</span></span><br><span class="line">   <span class="attribute">position</span>: absolute</span><br><span class="line">   padding: <span class="number">3px</span></span><br><span class="line">   width: <span class="number">115px</span></span><br><span class="line">   height: <span class="number">115px</span></span><br><span class="line">   background: <span class="number">#ffab91</span></span><br><span class="line">   animation: configure-clockwise <span class="number">3s</span> ease-in-out <span class="number">0s</span> infinite alternate</span><br><span class="line"></span><br><span class="line">.configure-border-<span class="number">2</span></span><br><span class="line">   left: -<span class="number">115px</span></span><br><span class="line">   padding: <span class="number">3px</span></span><br><span class="line">   width: <span class="number">115px</span></span><br><span class="line">   height: <span class="number">115px</span></span><br><span class="line">   background: <span class="built_in">rgb</span>(<span class="number">63</span>, <span class="number">249</span>, <span class="number">220</span>)</span><br><span class="line">   transform: <span class="built_in">rotate</span>(<span class="number">45deg</span>)</span><br><span class="line">   animation: configure-xclockwise <span class="number">3s</span> ease-in-out <span class="number">0s</span> infinite alternate</span><br><span class="line"></span><br><span class="line">.loading-word</span><br><span class="line">   position: absolute</span><br><span class="line">   color: <span class="built_in">var</span>(--preloader-color)</span><br><span class="line">   font-size: <span class="number">16px</span></span><br><span class="line"></span><br><span class="line">@keyframes configure-clockwise</span><br><span class="line">   <span class="number">0%</span></span><br><span class="line">   transform: <span class="built_in">rotate</span>(<span class="number">0</span>)</span><br><span class="line">   <span class="number">25%</span></span><br><span class="line">        transform: <span class="built_in">rotate</span>(<span class="number">90deg</span>)</span><br><span class="line">   <span class="number">50%</span> </span><br><span class="line">        transform: <span class="built_in">rotate</span>(<span class="number">180deg</span>)</span><br><span class="line">   <span class="number">75%</span></span><br><span class="line">        transform: <span class="built_in">rotate</span>(<span class="number">270deg</span>)</span><br><span class="line">   <span class="number">100%</span></span><br><span class="line">        transform: <span class="built_in">rotate</span>(<span class="number">360deg</span>)</span><br><span class="line">@keyframes configure-xclockwise</span><br><span class="line">   <span class="number">0%</span></span><br><span class="line">        transform: <span class="built_in">rotate</span>(<span class="number">45deg</span>)  </span><br><span class="line">   <span class="number">25%</span></span><br><span class="line">        transform: <span class="built_in">rotate</span>(-<span class="number">45deg</span>)</span><br><span class="line">   <span class="number">50%</span></span><br><span class="line">        transform: <span class="built_in">rotate</span>(-<span class="number">135deg</span>)</span><br><span class="line">   <span class="number">75%</span></span><br><span class="line">        transform: <span class="built_in">rotate</span>(-<span class="number">225deg</span>)</span><br><span class="line">   <span class="number">100%</span></span><br><span class="line">        transform: <span class="built_in">rotate</span>(-<span class="number">315deg</span>)</span><br></pre></td></tr></table></figure><p>完成上面的替换。你的博客也可以拥有一个svg加载动画了。🎉🎉🎉🎉 </p><p>​</p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> svg </tag>
            
            <tag> 动画 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>云部署Hexo和Certbot申请</title>
      <link href="/posts/b632734/"/>
      <url>/posts/b632734/</url>
      
        <content type="html"><![CDATA[<p>​本章内容只是对最近学习的总结，对互联网相关开发者社区相关文章的一个整合和错误排查。最开始搭建博客的时候，不知道从何处下手。想去实现自己一些喜欢的前端样式，但是奈何都不尽人意，折腾了好久。所以选择了hexo的butterfly主题去快速搭建一个博客。后期还会对博客的部分样式做一定的更改，改成自己喜欢的样式效果。</p><blockquote><p>记录Hexo部署到阿里云服务器全过程 <a href="https://developer.aliyun.com/article/775005">https://developer.aliyun.com/article/775005</a> </p><p>使用Certbot申请&#x2F;续签ssl证书<a href="https://developer.aliyun.com/article/1572585">https://developer.aliyun.com/article/1572585</a></p><p>本篇文章将引用上述两篇文章的内容来总结。</p><p>目的：写本篇文章的目的是Github里面的钩子和SSL证书，是自己的知识盲区，需要记录和总结学习。</p></blockquote><h2 id="一、云部署Hexo"><a href="#一、云部署Hexo" class="headerlink" title="一、云部署Hexo"></a>一、云部署Hexo</h2><h3 id="1、环境准备"><a href="#1、环境准备" class="headerlink" title="1、环境准备"></a>1、环境准备</h3><p>前置环境(注释是我使用当前的版本)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">node  #v14.15.0 </span><br><span class="line">git #2.23.0.windows.1</span><br></pre></td></tr></table></figure><p>安装hexo-cli，创建第一个hexo项目</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">npm install  -g  hexo-cli</span><br><span class="line">hexo init filedir</span><br><span class="line">cd filedir</span><br><span class="line">npm install #安装完毕后</span><br><span class="line">hexo server  #或者是hexo s 启动项目</span><br></pre></td></tr></table></figure><blockquote><p>具体的hexo-cli的版本需要根据node的版本来选择。我这里使用的版本是hexo-cli: 4.3.2。若要使用和我相同的版本需要保证node的版本在8.10+以上。不然可能会出现某些模块和功能不能使用的情况。具体的版本限制可以查看hexo的官网<a href="https://hexo.io/zh-cn/docs/index.html#Node-js-%E7%89%88%E6%9C%AC%E9%99%90%E5%88%B6">https://hexo.io/zh-cn/docs/index.html#Node-js-%E7%89%88%E6%9C%AC%E9%99%90%E5%88%B6</a></p></blockquote><p>安装butterfly主题</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用git安装，在hexo项目下执行一下命令</span></span><br><span class="line">git clone -b dev https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">或者是使用npm安装，但是官方指出，此方法只支持Hexo5.0.0以上版本，通过 npm 安装并不会在 themes 里生成主题文件夹，而是在 node_modules 里生成。</span></span><br><span class="line">npm install hexo-theme-butterfly </span><br></pre></td></tr></table></figure><blockquote><p>完成上述操作，需要把hexo-theme-butterfly项目目录移动到hexo的theme的目录下。</p></blockquote><p>​修改 Hexo根目录下的_config.yml，把主题改为 butterfly到这一步，博客的butterfly主题的安装设置完成。而butterfly的配置和可以访问<a href="https://butterfly.js.org/">官方文档</a>。</p><h3 id="2、云服务器部署"><a href="#2、云服务器部署" class="headerlink" title="2、云服务器部署"></a>2、云服务器部署</h3><p>服务器必要环境Nginx,使用yum安装或者是使用源码安装，也可以通过docker快速部署一个nginx服务，在这里仅介绍yum和源码安装。</p><div class="tabs"><div class="nav-tabs"><button type="button" class="tab active">yum安装</button><button type="button" class="tab">使用源码安装</button></div><div class="tab-contents"><div class="tab-item-content active"><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nginx</span><br></pre></td></tr></table></figure></div><div class="tab-item-content"><p>这里以nginx-1.20.2为例。</p><p>1、安装相关的依赖软件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install openssl-devel pcre-devel gcc -y</span><br></pre></td></tr></table></figure><p>2、创建目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /data</span><br><span class="line">mkdir /data/server /data/soft</span><br></pre></td></tr></table></figure><p>3、创建用户</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">useradd www -s /sbin/nologin -M</span><br></pre></td></tr></table></figure><p>4、上传源码包并解压</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">#</span><span class="language-bash">使用rz工具上传源码包nginx-1.8.1.tar.gz</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">安装rz工具</span></span><br><span class="line">yum install -y lrzsz</span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">或执行查看该工具是否存在</span></span><br><span class="line">rpm -qa lrzsz</span><br><span class="line"></span><br><span class="line">[root@hecs-202792 ~]# rpm -qa lrzsz</span><br><span class="line">lrzsz-0.12.20-36.el7.x86_64</span><br><span class="line"></span><br><span class="line">tar -zxvf nginx-1.20.2.tar.gz</span><br></pre></td></tr></table></figure><p>5、执行编译安装</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd nginx-1.8.1</span><br><span class="line">./configure --prefix=/data/server/nginx --user=www --group=www  #--prefix 参数是指定nginx的安装目录，配置文件也在该目录下</span><br><span class="line">make &amp;&amp; make install</span><br></pre></td></tr></table></figure><p>6、启动nginx</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/data/server/nginx/sbin/nginx</span><br></pre></td></tr></table></figure><p>7、将nginx配置成系统服务</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">vi /usr/lib/systemd/system/nginx.service</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">服务脚本内容</span></span><br><span class="line">[Unit]</span><br><span class="line">Description=nginx - web server</span><br><span class="line">After=network.target remote-fs.target nss-lookup.target</span><br><span class="line">[Service]</span><br><span class="line">Type=forking</span><br><span class="line">PIDFile=/data/server/nginx/logs/nginx.pid</span><br><span class="line">ExecStartPre=/data/server/nginx/sbin/nginx -t -c /data/server/nginx/conf/nginx.conf</span><br><span class="line">ExecStart=/data/server/nginx/sbin/nginx -c /data/server/nginx/conf/nginx.conf</span><br><span class="line">ExecReload=/data/server/nginx/sbin/nginx -s reload</span><br><span class="line">ExecStop=/data/server/nginx/sbin/nginx -s stop</span><br><span class="line">ExecQuit=/data/server/nginx/sbin/nginx -s quit</span><br><span class="line">PrivateTmp=true</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure></div></div><div class="tab-to-top"><button type="button" aria-label="scroll to top"><i class="fas fa-arrow-up"></i></button></div></div><blockquote><p>nginx的配置修改后续再说</p></blockquote><p>安装git</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y git</span><br></pre></td></tr></table></figure><p>添加git用户，然后执行一下操作。创建用户的命令要在root下去执行。后续的操作均在git用户下执行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">useradd git #用户名自己定义</span><br><span class="line">passwd git #修改git用户的密码</span><br><span class="line">su git #切换git用户</span><br><span class="line">mkdir /home/git/project/blog #该目录上就是hexo编译部署后生成静态文件的目录</span><br><span class="line">mkdir /home/git/repos #该项目git仓库的的目录</span><br><span class="line">cd /home/git/repos &amp;&amp; reposgit init --bare blog.git #进入目录并初始化仓库</span><br><span class="line">cd blog.git/hooks </span><br><span class="line">vim post-receive #创建一个钩子,目的是将hexo编译部署后生成静态文件上传到指定的目录</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">post-receive 内容如下：</span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">!/bin/sh</span></span><br><span class="line">git --work-tree=/home/git/projects/blog --git-dir=/home/git/repos/blog.git checkout -f</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">参数说明</span></span><br><span class="line">--work-tree #指定编译部署后生成静态文件上传到指定的目录</span><br><span class="line">--git-dir #指定项目git仓库的目录</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">编辑之后退出vim,为post-receive赋于可执行的权限</span></span><br><span class="line">chmod +x post-receive # 添加可执行权限exit # </span><br></pre></td></tr></table></figure><p>完成上述操作以后需要退出git用户。登录root用户为git用户赋于权限</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chown -R git:git /home/git/repos/blog.git</span><br></pre></td></tr></table></figure><p>在本地可以尝试执行以下命令，来查看博客项目所在的仓库是否初始化成功。能够拉取下来就说明仓库是初始化成功的。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git clone git@server_ip:/home/git/repos/blog.git  </span><br><span class="line"><span class="meta prompt_">#</span><span class="language-bash">server_ip 就是服务器所在的ip</span></span><br></pre></td></tr></table></figure><p>本地建立SSH信任关系。在gitbash或者是cmd窗口中去执行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/id_rsa.pub git@server_ip # 建立信任关系</span><br><span class="line">ssh git@server_ip  # 试一下能不能登录</span><br><span class="line">ssh-keygen -t rsa #如果没有生成过秘钥就执行生成秘钥的命令，然后一直回车即可 一般生成的秘钥在C:\Users\&#123;用户名&#125;\.ssh 目录下</span><br></pre></td></tr></table></figure><p>更改git用户默认的shell。为了服务器安全起见这个git用户最好就拥有git clone等于git命令相关的操作。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">which git-shell #找到git-shell的路径，将其追加入到/etc/shell中</span><br></pre></td></tr></table></figure><p>修改git用户登录所用的默认的shell</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vi /etc/passwd #找到git用户所在的行git:x:1000:1000::/home/git:/bin/bash将 /bin/bash改成git-shell所在的路径。</span><br></pre></td></tr></table></figure><p>执行完上述操作，就没办通过ssh在本地登录服务器了。</p><h3 id="3、部署上线"><a href="#3、部署上线" class="headerlink" title="3、部署上线"></a>3、部署上线</h3><p>首先本地的hexo项目需要下载一个部署的插件<a href="https://github.com/hexojs/hexo-deployer-git">hexo-deployer-git</a></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后编辑hexo跟目录下的**_config.yml** 文件。配置如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#x27;git&#x27;</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">&#x27;git@server_ip:/home/git/repos/blog.git&#x27;</span></span><br><span class="line">  <span class="attr">branch:</span> [<span class="string">master</span>]</span><br></pre></td></tr></table></figure><p>然后再项目执行部署命令</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo clean #先清除hexo的缓存。</span><br><span class="line">hexo g -d #生成打包文件并将编译后的文件上传到服务器的--work-tree=/home/git/projects/blog 目录下</span><br></pre></td></tr></table></figure><p>也可以修改hexo根目录下的package.json的script在添加部署脚本.</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">deploy:&quot;hexo g -d&quot;;</span><br><span class="line">npm run deploy</span><br></pre></td></tr></table></figure><p>配置nginx的配置文件，如果使用yum安装的nginx，配置文件在&#x2F;etc&#x2F;nginx目录下,如果是使用源码安装的配置文件在–prefix&#x3D;&#x2F;data&#x2F;server&#x2F;nginx&#x2F;conf目录下。root的配置一定要注意。git部署的操作是在git用户下，所以目录一定要有git的写入权限，不然是会部署失败的。在修改完nginx配置以后记得刷新使其生效</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vi nginx.conf</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">        listen       80;</span><br><span class="line">        server_name  www.hudi.space; #这里是你服务器域名 </span><br><span class="line">        root         /usr/share/nginx/html; #这个root的目录就配置git钩子中--work-tree=/home/git/projects/blog所在的目录。</span><br><span class="line"></span><br><span class="line">        # Load configuration files for the default server block.</span><br><span class="line">        include /etc/nginx/default.d/*.conf;</span><br><span class="line"></span><br><span class="line">        error_page 404 /404.html;</span><br><span class="line">        location = /404.html &#123;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        #error_page 500 502 503 504 /50x.html;</span><br><span class="line">        location = /50x.html &#123;</span><br><span class="line">        &#125;      </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">systemctl restart nginx</span><br></pre></td></tr></table></figure><p>完成以上配置，你就可以通过http访问hexo博客了。🎉🎉🎉</p><h2 id="二、Certbot申请SSL证书"><a href="#二、Certbot申请SSL证书" class="headerlink" title="二、Certbot申请SSL证书"></a>二、Certbot申请SSL证书</h2><h3 id="1、证书申请"><a href="#1、证书申请" class="headerlink" title="1、证书申请"></a>1、证书申请</h3><p>​完成上面的配置只能是http访问。本节将介绍https访问和SSL证书申请。由于我使用了多吉云☁️的cdn来给我的的博客项目加速。所以也要给cdn绑定一个域名。</p><p>安装certbot</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install certbot python3-certbot-nginx</span><br></pre></td></tr></table></figure><p>申请证书，如果需要申请多个证书，就在后面继续指定-d 参数和域名即可。由于certbot这个工具他会校验域名的生效性。所以可以先把cdn的子域名的解析绑定到我们自己的服务器的IP上先做证书的生成。然后在修改cdn域名的cname值即可。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certbot certonly --nginx -d www.hudi.space -d cdn.hudi.space   </span><br></pre></td></tr></table></figure><p>如果在执行上述命令提示没有python3-certbot-nginx包时。可以使用如下命令安装插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install certbot-nginx</span><br></pre></td></tr></table></figure><p>在执行证书生成的过程中，会提示输入邮箱等信息，按照实际填写即可。生成的证书是在&#x2F;etc&#x2F;letsencrypt&#x2F;live&#x2F; 的目录下。进入域名所在目录。查看证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@hcss-ecs-0985 ~]# cd /etc/letsencrypt/live/www.hudi.space</span><br><span class="line">[root@hcss-ecs-0985 www.hudi.space]# pwd</span><br><span class="line">/etc/letsencrypt/live/www.hudi.space</span><br><span class="line">[root@hcss-ecs-0985 www.hudi.space]# ls</span><br><span class="line">cert.pem  chain.pem  fullchain.pem  privkey.pem  README</span><br></pre></td></tr></table></figure><h3 id="2、Nginx配置https"><a href="#2、Nginx配置https" class="headerlink" title="2、Nginx配置https"></a>2、Nginx配置https</h3><p>同样是修改nginx.conf文件。将http的80端口的访问改为转发，修改https的配置即可。具体配置如下。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name www.hudi.space;</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">重定向HTTP请求到HTTPS</span></span><br><span class="line">return 301 https://www.hudi.space$request_uri;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">server &#123;</span><br><span class="line">    listen 443 ssl;</span><br><span class="line">    server_name www.hudi.space</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">SSL配置</span></span><br><span class="line">    ssl_certificate /etc/letsencrypt/live/www.hudi.space/fullchain.pem;</span><br><span class="line">    ssl_certificate_key /etc/letsencrypt/live/www.hudi.space/privkey.pem;</span><br><span class="line">    root /usr/share/nginx/html; #这个root的目录就配置git钩子中--work-tree=/home/git/projects/blog所在的目录。</span><br><span class="line">    index index.html index.htm;</span><br><span class="line">    location / &#123;</span><br><span class="line">        try_files $uri $uri/ =404;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>完成上述配置以后，重启nginx使配置生效。即可使用https访问你的博客项目了。🎉🎉🎉🎉</p>]]></content>
      
      
      <categories>
          
          <category> 云服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
            <tag> 云服务 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flume基础学习</title>
      <link href="/posts/1e46a8be/"/>
      <url>/posts/1e46a8be/</url>
      
        <content type="html"><![CDATA[<h1 id="Flume基础学习（一）"><a href="#Flume基础学习（一）" class="headerlink" title="Flume基础学习（一）"></a>Flume基础学习（一）</h1><p>​Flume日志采集工具，可以配合第三方的前端埋点SDK去实现行为日志采集，到目前为止在工作中也没有使用到和涉及到。当时在使用这个工具时，学习的内容的深度相对来说也比较浅薄。后续会根据学习内容和规划做相应的调整，完善相关的学习笔记。本文主要介绍了Flume工具的基本配置使用、各个组件在其中发挥的作用、内部架构等。</p><h2 id="一、Flume概述："><a href="#一、Flume概述：" class="headerlink" title="一、Flume概述："></a>一、Flume概述：</h2><h3 id="1、定义："><a href="#1、定义：" class="headerlink" title="1、定义："></a>1、定义：</h3><p>Flume是Cloudera提供的一个高可用的，高可靠的，分布式的海量日志采集、聚合和传输的系统。Flume基于流式架构，灵活简单。</p><h3 id="2、Flume架构"><a href="#2、Flume架构" class="headerlink" title="2、Flume架构"></a>2、Flume架构</h3><img src="https://bitiful.hudi.space/posts/flume_topology.jpg" style="zoom:150%;" /><ul><li><p>agent：</p><ul><li>Agent是一个JVM进程，它以事件的形式将数据从源头送至目的。</li><li>Agent主要有3个部分组成，Source、Channel、Sink。</li></ul></li><li><p>source</p><p>Source是负责接收数据到Flume Agent的组件。Source组件可以处理各种类型、各种格式的日志数据，包括<strong>avro</strong>、thrift、<strong>exec</strong>、jms、<strong>spooling directory</strong>、<strong>netcat</strong>、 <strong>taildir</strong> 、sequence generator、syslog、http、legacy。</p></li><li><p>sink</p><ul><li>Sink不断地轮询Channel中的事件且批量地移除它们，并将这些事件批量写入到存储或索引系统、或者被发送到另一个Flume Agent。</li><li>Sink组件目的地包括<strong>hdfs</strong>、<strong>logger</strong>、<strong>avro</strong>、thrift、ipc、<strong>file</strong>、<strong>HBase</strong>、solr、自定义。</li></ul></li><li><p>channel</p><ul><li>Channel是位于Source和Sink之间的缓冲区。因此，Channel允许Source和Sink运作在不同的速率上。Channel是线程安全的，可以同时处理几个Source的写入操作和几个Sink的读取操作。</li><li>Flume自带两种Channel：Memory Channel和File Channel。</li><li>Memory Channel是内存中的队列。Memory Channel在不需要关心数据丢失的情景下适用。如果需要关心数据丢失，那么Memory Channel就不应该使用，因为程序死亡、机器宕机或者重启都会导致数据丢失。</li><li>File Channel将所有事件写到磁盘。因此在程序关闭或机器宕机的情况下不会丢失数据。</li></ul></li><li><p>event</p><p>传输单元，Flume数据传输的基本单元，以Event的形式将数据从源头送至目的地。Event由<strong>Header</strong>和<strong>Body</strong>两部分组成，Header用来存放该event的一些属性，为K-V结构，Body用来存放该条数据，形式为字节数组。</p><table><thead><tr><th>header(k,v)</th><th>body(byte array)</th></tr></thead></table></li></ul><h2 id="二、Flume入门"><a href="#二、Flume入门" class="headerlink" title="二、Flume入门"></a>二、Flume入门</h2><h3 id="1、安装Flume地址"><a href="#1、安装Flume地址" class="headerlink" title="1、安装Flume地址"></a>1、安装Flume地址</h3><ul><li>官网地址：<a href="http://flume.apache.org/">http://flume.apache.org/</a></li><li>文档地址：<a href="http://flume.apache.org/FlumeUserGuide.html">http://flume.apache.org/FlumeUserGuide.html</a></li></ul><h3 id="2、安装部署"><a href="#2、安装部署" class="headerlink" title="2、安装部署"></a>2、安装部署</h3><p>hadoop版本3.x要删除lib文件夹下的guava-11.0.2.jar包以兼容Hadoop 3.x</p><h3 id="3、官方入门案例"><a href="#3、官方入门案例" class="headerlink" title="3、官方入门案例"></a>3、官方入门案例</h3><ol><li><p>需求：使用Flume监听一个端口，收集该端口数据，并打印到控制台。</p></li><li><p>安装netcat工具</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo yun install -y nc</span><br></pre></td></tr></table></figure></li><li><p>创建Flume Agent配置文件flume-netcat-logger.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">添加内容如下：</span><br><span class="line"># Name the components on this agent    #a1表示agent的名字</span><br><span class="line">a1.sources = r1  ##r1表示a1 agent一个source的名字</span><br><span class="line">a1.sinks = k1    ##k1表示a1 agent一个sink的名字</span><br><span class="line">a1.channels = c1 ##c1表示a1 agent一个channel的名字</span><br><span class="line"></span><br><span class="line"># Describe/configure the source</span><br><span class="line">a1.sources.r1.type = netcat   ##表示r1 source的类型也就是输入源的类型</span><br><span class="line">a1.sources.r1.bind = localhost  ##要监听的主机的IP </span><br><span class="line">a1.sources.r1.port = 44444  ###要监听的端口号是多少</span><br><span class="line"></span><br><span class="line"># Describe the sink</span><br><span class="line">a1.sinks.k1.type = logger   ##a1的数据输出的目的地是控制台</span><br><span class="line"></span><br><span class="line"># Use a channel which buffers events in memory</span><br><span class="line">a1.channels.c1.type = memory   ##表示a1 channel的类型是memory内存型</span><br><span class="line">a1.channels.c1.capacity = 1000 ##表示a1 channel的事件容量是1000条</span><br><span class="line">a1.channels.c1.transactionCapacity = 100  ##表示a1的channel收集到100条event后再去提交事务</span><br><span class="line"></span><br><span class="line"># Bind the source and sink to the channel</span><br><span class="line">a1.sources.r1.channels = c1   ##表示吧r1和c1连接起来</span><br><span class="line">a1.sinks.k1.channel = c1      ##表示把k1和c1连接起来</span><br></pre></td></tr></table></figure></li><li><p>启动flume</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/flume-ng agent --conf conf/ --name a1 --conf-file job/flume-netcat-logger.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bin/flume-ng agent -c conf/ -n a1 -f job/flume-netcat-logger.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure><p>参数说明：</p><p>​    –conf&#x2F;-c：表示配置文件存储在conf&#x2F;目录</p><p>​    –name&#x2F;-n：表示给agent起名为a1</p><p>​    –conf-file&#x2F;-f：flume本次启动读取的配置文件是在job文件夹下的flume-telnet.conf文件。</p><p>​    -Dflume.root.logger&#x3D;INFO,console ：-D表示flume运行时动态修改flume.root.logger参数属性值，并将控制台日志打印级别设置为INFO级别。日志级别包括:log、info、warn、error。</p></li></ol><p><strong>#实时监控单个追加文件案例</strong>。</p><ol><li><p>需求说明：实时监控Hive日志，并上传到HDFS中</p></li><li><p>配置文件编写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">##自己编写的配置</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.channels = c1</span><br><span class="line">a1.sinks=k1</span><br><span class="line"></span><br><span class="line">a1.sources.r1.type = TAILDIR</span><br><span class="line">a1.sources.r1.positionFile =/home/hdfs/flume/taildir_position.json</span><br><span class="line">a1.sources.r1.filegroups = f1</span><br><span class="line">a1.sources.r1.filegroups.f1 = /home/hdfs/flume/data/.*\.txt</span><br><span class="line"></span><br><span class="line">a1.sinks.k1.type=hdfs</span><br><span class="line">a1.sinks.k1.hdfs.path = hdfs://master:8020/flume/events/%Y-%m-%d/%H%M/%S</span><br><span class="line">a1.sinks.k1.hdfs.filePrefix = events-</span><br><span class="line">a1.sinks.k1.hdfs.round = true</span><br><span class="line">a1.sinks.k1.hdfs.roundValue = 10</span><br><span class="line">a1.sinks.k1.hdfs.roundUnit = minute</span><br><span class="line">a1.sinks.k1.hdfs.useLocalTimeStamp=true</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line"></span><br><span class="line">#####################################################################################################</span><br><span class="line">#####################################################################################################</span><br><span class="line">#案例</span><br><span class="line"># Name the components on this agent</span><br><span class="line">a2.sources = r2</span><br><span class="line">a2.sinks = k2</span><br><span class="line">a2.channels = c2</span><br><span class="line"></span><br><span class="line"># Describe/configure the source</span><br><span class="line">a2.sources.r2.type = exec</span><br><span class="line">a2.sources.r2.command = tail -F /opt/module/hive/logs/hive.log</span><br><span class="line"></span><br><span class="line"># Describe the sink</span><br><span class="line">a2.sinks.k2.type = hdfs</span><br><span class="line">a2.sinks.k2.hdfs.path = hdfs://master:8020/flume/%Y%m%d/%H</span><br><span class="line">#上传文件的前缀</span><br><span class="line">a2.sinks.k2.hdfs.filePrefix = logs-</span><br><span class="line">#是否按照时间滚动文件夹</span><br><span class="line">a2.sinks.k2.hdfs.round = true</span><br><span class="line">#多少时间单位创建一个新的文件夹</span><br><span class="line">a2.sinks.k2.hdfs.roundValue = 1</span><br><span class="line">#重新定义时间单位</span><br><span class="line">a2.sinks.k2.hdfs.roundUnit = hour</span><br><span class="line">#是否使用本地时间戳</span><br><span class="line">a2.sinks.k2.hdfs.useLocalTimeStamp = true</span><br><span class="line">#积攒多少个Event才flush到HDFS一次</span><br><span class="line">a2.sinks.k2.hdfs.batchSize = 100</span><br><span class="line">#设置文件类型，可支持压缩</span><br><span class="line">a2.sinks.k2.hdfs.fileType = DataStream</span><br><span class="line">#多久生成一个新的文件</span><br><span class="line">a2.sinks.k2.hdfs.rollInterval = 60</span><br><span class="line">#设置每个文件的滚动大小</span><br><span class="line">a2.sinks.k2.hdfs.rollSize = 134217700</span><br><span class="line">#文件的滚动与Event数量无关</span><br><span class="line">a2.sinks.k2.hdfs.rollCount = 0</span><br><span class="line"></span><br><span class="line"># Use a channel which buffers events in memory</span><br><span class="line">a2.channels.c2.type = memory</span><br><span class="line">a2.channels.c2.capacity = 1000</span><br><span class="line">a2.channels.c2.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line"># Bind the source and sink to the channel</span><br><span class="line">a2.sources.r2.channels = c2</span><br><span class="line">a2.sinks.k2.channel = c2</span><br><span class="line"></span><br><span class="line">##########################################################################################################################################################################################################</span><br><span class="line">#案例：</span><br><span class="line">2. 入门案例 2.1  实时监控单个追加文件,将内容打印到控制台</span><br><span class="line">配置文件名字: exec-flume-logger.conf</span><br><span class="line">##name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.channels = c1</span><br><span class="line">a1.sinks = k1</span><br><span class="line"></span><br><span class="line">##source</span><br><span class="line">a1.sources.r1.type = exec</span><br><span class="line">a1.sources.r1.command = tail -F /home/hdfs/test/data.txt</span><br><span class="line"></span><br><span class="line">##channel</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">###sink</span><br><span class="line">a1.sinks.k1.type = logger</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1 </span><br></pre></td></tr></table></figure></li></ol><p><strong>＃实时监控目录下多个新文件</strong></p><ol><li><p>案例需求：使用Flume监听整个目录的文件，并上传至HDFS</p></li><li><p>配置文件编写</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">###我配置写的Spooling Directory Source</span><br><span class="line">spooling-flume-hdfs.conf 配置文件如下</span><br><span class="line">#name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1 </span><br><span class="line">#sources</span><br><span class="line">a1.sources.r1.type = spooldir</span><br><span class="line">a1.sources.r1.spoolDir = /home/hdfs/test/spoolDir </span><br><span class="line">a1.sources.r1.fileHeader = true</span><br><span class="line">#sinks</span><br><span class="line">a1.sinks.k1.type = hdfs</span><br><span class="line">a1.sinks.k1.hdfs.path =  hdfs://master:8020/flume/events/%Y-%m-%d</span><br><span class="line">a1.sinks.k1.hdfs.filePrefix = logs-</span><br><span class="line">a1.sinks.k1.hdfs.round = true</span><br><span class="line">a1.sinks.k1.hdfs.roundValue = 10</span><br><span class="line">a1.sinks.k1.hdfs.roundUnit = second</span><br><span class="line">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class="line">##channels</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line">##bind</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">4. 入门案例 3  实时监控目录下的新文件,将内容上传到HDFS中</span><br><span class="line">配置文件名字: spooling-flume-hdfs.conf</span><br><span class="line"></span><br><span class="line">#Named</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.channels = c1</span><br><span class="line">a1.sinks = k1 </span><br><span class="line"></span><br><span class="line">#Source</span><br><span class="line">a1.sources.r1.type = spooldir</span><br><span class="line">a1.sources.r1.spoolDir = /opt/module/flume-1.9.0/jobs/spooling</span><br><span class="line">a1.sources.r1.fileSuffix = .COMPLETED</span><br><span class="line">a1.sources.r1.ignorePattern = .*\.tmp</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#Channel</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">#Sink</span><br><span class="line">a1.sinks.k1.type = hdfs</span><br><span class="line">a1.sinks.k1.hdfs.path = hdfs://hadoop102:8020/flume/%Y%m%d/%H</span><br><span class="line">#上传文件的前缀</span><br><span class="line">a1.sinks.k1.hdfs.filePrefix = logs-</span><br><span class="line">#是否按照时间滚动文件夹</span><br><span class="line">a1.sinks.k1.hdfs.round = true</span><br><span class="line">#多少时间单位创建一个新的文件夹</span><br><span class="line">a1.sinks.k1.hdfs.roundValue = 1</span><br><span class="line">#重新定义时间单位</span><br><span class="line">a1.sinks.k1.hdfs.roundUnit = hour</span><br><span class="line">#是否使用本地时间戳</span><br><span class="line">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class="line">#积攒多少个Event才flush到HDFS一次</span><br><span class="line">a1.sinks.k1.hdfs.batchSize = 100</span><br><span class="line">#设置文件类型，可支持压缩</span><br><span class="line">a1.sinks.k1.hdfs.fileType = DataStream</span><br><span class="line">#多久生成一个新的文件</span><br><span class="line">a1.sinks.k1.hdfs.rollInterval = 60</span><br><span class="line">#设置每个文件的滚动大小</span><br><span class="line">a1.sinks.k1.hdfs.rollSize = 134217700</span><br><span class="line">#文件的滚动与Event数量无关</span><br><span class="line">a1.sinks.k1.hdfs.rollCount = 0</span><br><span class="line"></span><br><span class="line">#Bind</span><br><span class="line">a1.sources.r1.channels = c1 </span><br><span class="line">a1.sinks.k1.channel = c1 </span><br></pre></td></tr></table></figure></li></ol><p><strong>＃实时监控多个目录下的多个追加文件</strong></p><p>Exec source适用于监控一个实时追加的文件，不能实现断点续传；Spooldir Source适合用于同步新文件，但不适合对实时追加日志的文件进行监听并同步；而Taildir Source适合用于监听多个实时追加的文件，并且能够实现断点续传。</p><blockquote><p>案例需求:使用Flume监听整个目录的实时追加文件，并上传至HDFS</p></blockquote><ul><li><p>配置文件编写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a1.sources.r1.type = TAILDIR</span><br><span class="line">a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json</span><br><span class="line">a1.sources.r1.filegroups = f1 f2</span><br><span class="line">a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/.*\.txt</span><br><span class="line">a1.sources.r1.filegroups.f2 = /home/hdfs/test/data/.*\.log</span><br><span class="line"></span><br><span class="line">#sinks</span><br><span class="line">a1.sinks.k1.type = hdfs</span><br><span class="line">a1.sinks.k1.hdfs.path =  hdfs://master:8020/flume/tail/%Y-%m-%d</span><br><span class="line">a1.sinks.k1.hdfs.filePrefix = tail-</span><br><span class="line">a1.sinks.k1.hdfs.round = true</span><br><span class="line">a1.sinks.k1.hdfs.roundValue = 10</span><br><span class="line">a1.sinks.k1.hdfs.roundUnit = second</span><br><span class="line">a1.sinks.k1.hdfs.useLocalTimeStamp = true</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">#bind</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br></pre></td></tr></table></figure></li></ul><h2 id="三、Flume进阶"><a href="#三、Flume进阶" class="headerlink" title="三、Flume进阶"></a>三、Flume进阶</h2><h3 id="1、Flume事务"><a href="#1、Flume事务" class="headerlink" title="1、Flume事务"></a>1、Flume事务</h3><p><img src="https://bitiful.hudi.space/posts/flume.jpg"></p><h3 id="2、Agent内部原理"><a href="#2、Agent内部原理" class="headerlink" title="2、Agent内部原理"></a>2、Agent内部原理</h3><p><img src="https://bitiful.hudi.space/posts/Agent.jpg"></p><ul><li>source采集到日志服务器或者是端口等的数据时，报数据包装成event</li><li>在批量的放入临时缓存putlist，并通过channel processor处理事件</li><li>channel processor将事件传递给拦截器链，对事件进行过滤</li><li>再把事件还回channel processor并将每个事件给channel selector</li><li>返回写入事件的channel 列表</li><li>根据channel选择器的结果，将事件写入对应得channel中</li><li>doTake将事件批量的取到sink processor中再通过事务写入到相应的目标中</li></ul><ol><li><p>ChannelSelector</p><p>ChannelSelector的作用就是选出Event将要被发往哪个Channel。其共有两种类型，分别是Replicating（复制）和Multiplexing（多路复用）。</p><p>ReplicatingSelector会将同一个Event发往所有的Channel，Multiplexing会根据相应的原则，将不同的Event发往不同的Channel。</p></li><li><p>SinkProcessor</p><p>SinkProcessor共有三种类型，分别是DefaultSinkProcessor、LoadBalancingSinkProcessor和FailoverSinkProcessor</p><p>DefaultSinkProcessor对应的是单个的Sink，LoadBalancingSinkProcessor和FailoverSinkProcessor对应的是Sink Group，LoadBalancingSinkProcessor可以实现负载均衡的功能，FailoverSinkProcessor可以错误恢复的功能。</p></li></ol><h3 id="3、Flume的拓扑结构"><a href="#3、Flume的拓扑结构" class="headerlink" title="3、Flume的拓扑结构"></a>3、Flume的拓扑结构</h3><ol><li><p>简单串联：这种模式是将多个flume顺序连接起来了，从最初的source开始到最终sink传送的目的存储系统。此模式不建议桥接过多的flume数量， flume数量过多不仅会影响传输速率，而且一旦传输过程中某个节点flume宕机，会影响整个传输系统。</p><p>即，一个agent的sink连接另个agent的source</p></li><li><p>复制和多虑复用：Flume支持将事件流向一个或者多个目的地。这种模式可以将相同数据复制到多个channel中，或者将不同数据分发到不同的channel中，sink可以选择传送到不同的目的地。</p></li><li><p>负载均衡和故障转移：Flume支持使用将多个sink逻辑上分到一个sink组，sink组配合不同的SinkProcessor可以实现负载均衡和错误恢复的功能。</p></li><li><p>聚合：</p><p>这种模式是我们最常见的，也非常实用，日常web应用通常分布在上百个服务器，大者甚至上千个、上万个服务器。产生的日志，处理起来也非常麻烦。用flume的这种组合方式能很好的解决这一问题，每台服务器部署一个flume采集日志，传送到一个集中收集日志的flume，再由此flume上传到hdfs、hive、hbase等，进行日志分析。</p></li></ol><h3 id="4、Flume开发案例"><a href="#4、Flume开发案例" class="headerlink" title="4、Flume开发案例"></a>4、Flume开发案例</h3><blockquote><p>案例需求：使用Flume-1监控文件变动，Flume-1将变动内容传递给Flume-2，Flume-2负责存储到HDFS。同时Flume-1将变动内容传递给Flume-3，Flume-3负责输出到Local FileSystem。</p></blockquote><ul><li><p>配置文件编写：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line">Flume-1</span><br><span class="line">#name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1 k2</span><br><span class="line">a1.channels = c1 c2</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a1.sources.r1.type = TAILDIR</span><br><span class="line">a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json</span><br><span class="line">a1.sources.r1.filegroups = f1</span><br><span class="line">a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/log.log</span><br><span class="line"></span><br><span class="line">a1.sources.r1.selector.type = replicating</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a1.sinks.k1.type = avro</span><br><span class="line">a1.sinks.k1.hostname = 192.168.157.10</span><br><span class="line">a1.sinks.k1.port = 6666</span><br><span class="line"></span><br><span class="line">a1.sinks.k2.type = avro</span><br><span class="line">a1.sinks.k2.hostname = 192.168.157.10</span><br><span class="line">a1.sinks.k2.port = 7777</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">a1.channels.c2.type = memory</span><br><span class="line">a1.channels.c2.capacity = 10000</span><br><span class="line">a1.channels.c2.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line"></span><br><span class="line">a1.sources.r1.channels = c2</span><br><span class="line">a1.sinks.k2.channel = c2</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume-01.conf -Dflume.root.logger=INFO,console</span><br><span class="line">#############################################################################################</span><br><span class="line">Flume-2</span><br><span class="line">#name</span><br><span class="line">a2.sources = r2</span><br><span class="line">a2.sinks = k2</span><br><span class="line">a2.channels = c2</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a2.sources.r2.type = avro</span><br><span class="line">a2.sources.r2.bind = localhost</span><br><span class="line">a2.sources.r2.port = 6666</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a2.sinks.k2.type = hdfs</span><br><span class="line">a2.sinks.k2.hdfs.path =  hdfs://master:8020/flume/threeflume/%Y-%m-%d</span><br><span class="line">a2.sinks.k2.hdfs.filePrefix = log-</span><br><span class="line">a2.sinks.k2.hdfs.round = true</span><br><span class="line">a2.sinks.k2.hdfs.roundValue = 10</span><br><span class="line">a2.sinks.k2.hdfs.roundUnit = second</span><br><span class="line">a2.sinks.k2.hdfs.useLocalTimeStamp = true</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a2.channels.c2.type = memory</span><br><span class="line">a2.channels.c2.capacity = 10000</span><br><span class="line">a2.channels.c2.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a2.sources.r2.channels = c2</span><br><span class="line">a2.sinks.k2.channel = c2</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume-02.conf -Dflume.root.logger=INFO,console</span><br><span class="line">################################################################################################</span><br><span class="line">Flume-3</span><br><span class="line">#name</span><br><span class="line">a3.sources = r3</span><br><span class="line">a3.sinks = k3</span><br><span class="line">a3.channels = c3</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a3.sources.r3.type = avro</span><br><span class="line">a3.sources.r3.bind = localhost</span><br><span class="line">a3.sources.r3.port = 7777</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a3.sinks.k3.type = file_roll   ##采集到的数据放到本地Stores events on the local filesystem. </span><br><span class="line">a3.sinks.k3.sink.directory = /opt/module/flume-1.9.0/jobs/fileroll</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a3.channels.c3.type = memory</span><br><span class="line">a3.channels.c3.capacity = 10000</span><br><span class="line">a3.channels.c3.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a3.sources.r3.channels = c3</span><br><span class="line">a3.sinks.k3.channel = c3</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume-03.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure></li><li><p>输出的本地目录必须是已经存在的目录，如果该目录不存在，并不会创建新的目录。</p></li></ul><p><strong>#负载均衡和故障转移</strong></p><ul><li><h5 id="故障转移：案例分析"><a href="#故障转移：案例分析" class="headerlink" title="故障转移：案例分析"></a>故障转移：案例分析</h5></li></ul><p>使用Flume1监控一个端口，其sink组中的sink分别对接Flume2和Flume3，采用FailoverSinkProcessor，实现故障转移的功能。</p><p><strong>使用jps -ml查看Flume进程。</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">flume01-failover.conf</span><br><span class="line"></span><br><span class="line">#name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinkgroups = g1</span><br><span class="line">a1.sinks = k1 k2</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a1.sources.r1.type = netcat</span><br><span class="line">a1.sources.r1.bind = localhost</span><br><span class="line">a1.sources.r1.port = 44444</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a1.sinkgroups.g1.processor.type = failover</span><br><span class="line">a1.sinkgroups.g1.processor.priority.k1 = 5</span><br><span class="line">a1.sinkgroups.g1.processor.priority.k2 = 10</span><br><span class="line">a1.sinkgroups.g1.processor.maxpenalty = 10000</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a1.sinks.k1.type = avro</span><br><span class="line">a1.sinks.k1.hostname = localhost</span><br><span class="line">a1.sinks.k1.port = 6666</span><br><span class="line"></span><br><span class="line">a1.sinks.k2.type = avro</span><br><span class="line">a1.sinks.k2.hostname = localhost</span><br><span class="line">a1.sinks.k2.port = 7777</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a1.sinkgroups.g1.sinks = k1 k2</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line">a1.sinks.k2.channel = c1</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-failover.conf -Dflume.root.logger=INFO,console</span><br><span class="line">################################################################################################</span><br><span class="line">flume02-failover.conf</span><br><span class="line">#name</span><br><span class="line">a2.sources = r2</span><br><span class="line">a2.sinks = k2</span><br><span class="line">a2.channels = c2</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a2.sources.r2.type = avro</span><br><span class="line">a2.sources.r2.bind = localhost</span><br><span class="line">a2.sources.r2.port = 6666</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a2.sinks.k2.type = logger</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a2.channels.c2.type = memory</span><br><span class="line">a2.channels.c2.capacity = 10000</span><br><span class="line">a2.channels.c2.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a2.sources.r2.channels = c2</span><br><span class="line">a2.sinks.k2.channel = c2</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume02-failover.conf -Dflume.root.logger=INFO,console</span><br><span class="line"></span><br><span class="line">################################################################################################</span><br><span class="line"></span><br><span class="line">flume03-failover.conf</span><br><span class="line">#name</span><br><span class="line">a3.sources = r3</span><br><span class="line">a3.sinks = k3</span><br><span class="line">a3.channels = c3</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a3.sources.r3.type = avro</span><br><span class="line">a3.sources.r3.bind = localhost</span><br><span class="line">a3.sources.r3.port = 7777</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a3.sinks.k3.type = logger</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a3.channels.c3.type = memory</span><br><span class="line">a3.channels.c3.capacity = 10000</span><br><span class="line">a3.channels.c3.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a3.sources.r3.channels = c3</span><br><span class="line">a3.sinks.k3.channel = c3</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume03-failover.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure><ul><li>负载均衡</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">flume01-balance.conf</span><br><span class="line"></span><br><span class="line">#name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1 k2</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a1.sources.r1.type = netcat</span><br><span class="line">a1.sources.r1.bind = localhost</span><br><span class="line">a1.sources.r1.port = 44444</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a1.sinkgroups.g1.processor.type = load_balance</span><br><span class="line">a1.sinkgroups.g1.processor.backoff = true</span><br><span class="line">a1.sinkgroups.g1.processor.selector = random</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a1.sinks.k1.type = avro</span><br><span class="line">a1.sinks.k1.hostname = localhost</span><br><span class="line">a1.sinks.k1.port = 6666</span><br><span class="line"></span><br><span class="line">a1.sinks.k2.type = avro</span><br><span class="line">a1.sinks.k2.hostname = localhost</span><br><span class="line">a1.sinks.k2.port = 7777</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line">a1.sinks.k2.channel = c1</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-balance.conf -Dflume.root.logger=INFO,console</span><br><span class="line"></span><br><span class="line">################################################################################################</span><br><span class="line"></span><br><span class="line">flume02-balance.conf</span><br><span class="line">#name</span><br><span class="line">a2.sources = r2</span><br><span class="line">a2.sinks = k2</span><br><span class="line">a2.channels = c2</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a2.sources.r2.type = avro</span><br><span class="line">a2.sources.r2.bind = localhost</span><br><span class="line">a2.sources.r2.port = 6666</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a2.sinks.k2.type = logger</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a2.channels.c2.type = memory</span><br><span class="line">a2.channels.c2.capacity = 10000</span><br><span class="line">a2.channels.c2.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a2.sources.r2.channels = c2</span><br><span class="line">a2.sinks.k2.channel = c2</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume02-balance.conf -Dflume.root.logger=INFO,console</span><br><span class="line"></span><br><span class="line">################################################################################################</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flume03-balance.conf</span><br><span class="line">#name</span><br><span class="line">a3.sources = r3</span><br><span class="line">a3.sinks = k3</span><br><span class="line">a3.channels = c3</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a3.sources.r3.type = avro</span><br><span class="line">a3.sources.r3.bind = localhost</span><br><span class="line">a3.sources.r3.port = 7777</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a3.sinks.k3.type = logger</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a3.channels.c3.type = memory</span><br><span class="line">a3.channels.c3.capacity = 10000</span><br><span class="line">a3.channels.c3.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a3.sources.r3.channels = c3</span><br><span class="line">a3.sinks.k3.channel = c3</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a3 -f ~/confs/flume03-balance.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure><ul><li>聚合</li></ul><blockquote><p>案例需求：hadoop102上的Flume-1监控文件&#x2F;opt&#x2F;module&#x2F;group.log，hadoop103上的Flume-2监控某一个端口的数据流，Flume-1与Flume-2将数据发送给hadoop104上的Flume-3，Flume-3将最终数据打印到控制台。</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br></pre></td><td class="code"><pre><span class="line">flume01-aggre.conf</span><br><span class="line"></span><br><span class="line">#name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a1.sources.r1.type = TAILDIR</span><br><span class="line">a1.sources.r1.positionFile = /home/hdfs/flume/taildir_position.json</span><br><span class="line">a1.sources.r1.filegroups = f1</span><br><span class="line">a1.sources.r1.filegroups.f1 = /home/hdfs/test/data/log.log</span><br><span class="line"></span><br><span class="line">a1.sources.r1.selector.type = replicating</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a1.sinks.k1.type = avro</span><br><span class="line">a1.sinks.k1.hostname = slave-02</span><br><span class="line">a1.sinks.k1.port = 6666</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-aggre.conf -Dflume.root.logger=INFO,console</span><br><span class="line"></span><br><span class="line">###############################################################################################</span><br><span class="line"></span><br><span class="line">flume02-aggre.conf</span><br><span class="line"></span><br><span class="line">#name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a1.sources.r1.type = netcat</span><br><span class="line">a1.sources.r1.bind = localhost</span><br><span class="line">a1.sources.r1.port = 44444</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a1.sinks.k1.type = avro</span><br><span class="line">a1.sinks.k1.hostname = slave-02</span><br><span class="line">a1.sinks.k1.port = 6666</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume02-aggre.conf -Dflume.root.logger=INFO,console</span><br><span class="line"></span><br><span class="line">################################################################################################</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flume03-aggre.conf</span><br><span class="line">#name</span><br><span class="line">a2.sources = r2</span><br><span class="line">a2.sinks = k2</span><br><span class="line">a2.channels = c2</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a2.sources.r2.type = avro</span><br><span class="line">a2.sources.r2.bind = slave-02  ##此处不能写localhost</span><br><span class="line">a2.sources.r2.port = 6666</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a2.sinks.k2.type = logger</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a2.channels.c2.type = memory</span><br><span class="line">a2.channels.c2.capacity = 10000</span><br><span class="line">a2.channels.c2.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a2.sources.r2.channels = c2</span><br><span class="line">a2.sinks.k2.channel = c2</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a2 -f ~/confs/flume03-aggre.conf -Dflume.root.logger=INFO,console</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>自定义interceptor</li></ul><blockquote><p>需求：使用Flume采集服务器本地日志，需要按照日志类型的不同，将不同种类的日志发往不同的分析系统。</p></blockquote><ol><li><p>添加maven依赖</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependencies</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.flume<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>flume-ng-core<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">           <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.9.0<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">       <span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependencies</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>编写interceptor</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">MyInterceptor</span>  <span class="keyword">implements</span> <span class="title class_">Interceptor</span> &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">initialize</span><span class="params">()</span> &#123; &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> Event <span class="title function_">intercept</span><span class="params">(Event event)</span> &#123;</span><br><span class="line">        <span class="type">byte</span>[] body = event.getBody();</span><br><span class="line">        <span class="type">String</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(body, StandardCharsets.UTF_8);</span><br><span class="line">        <span class="keyword">if</span> (s.contains(<span class="string">&quot;#&quot;</span>) || s.contains(<span class="string">&quot;*&quot;</span>)) &#123;</span><br><span class="line">            event.getHeaders().put(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;char&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> (s.contains(<span class="string">&quot;1&quot;</span>))&#123;</span><br><span class="line">            event.getHeaders().put(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;num&quot;</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            event.getHeaders().put(<span class="string">&quot;type&quot;</span>,<span class="string">&quot;word&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> event;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> List&lt;Event&gt; <span class="title function_">intercept</span><span class="params">(List&lt;Event&gt; list)</span> &#123;</span><br><span class="line">        <span class="keyword">for</span> (Event event : list) &#123;</span><br><span class="line">            intercept(event);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> list;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">close</span><span class="params">()</span> &#123; &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title class_">build</span> <span class="keyword">implements</span> <span class="title class_">Interceptor</span>.Builder&#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> Interceptor <span class="title function_">build</span><span class="params">()</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">MyInterceptor</span>();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">configure</span><span class="params">(Context context)</span> &#123; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>编写flume配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line">flume01-interceptor.conf</span><br><span class="line"></span><br><span class="line">#name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1 k2 k3</span><br><span class="line">a1.channels = c1 c2 c3</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a1.sources.r1.type = netcat</span><br><span class="line">a1.sources.r1.bind = localhost</span><br><span class="line">a1.sources.r1.port = 44444</span><br><span class="line">a1.sources.r1.interceptors = i1</span><br><span class="line">a1.sources.r1.interceptors.i1.type = com.suhe.interceptor.MyInterceptor$Builder</span><br><span class="line">a1.sources.r1.selector.type = multiplexing</span><br><span class="line">a1.sources.r1.selector.header = type</span><br><span class="line">a1.sources.r1.selector.mapping.char = c1</span><br><span class="line">a1.sources.r1.selector.mapping.num = c2</span><br><span class="line">a1.sources.r1.selector.mapping.word = c3</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a1.sinks.k1.type = avro</span><br><span class="line">a1.sinks.k1.hostname = localhost</span><br><span class="line">a1.sinks.k1.port = 6666</span><br><span class="line"></span><br><span class="line">a1.sinks.k2.type = avro</span><br><span class="line">a1.sinks.k2.hostname = localhost</span><br><span class="line">a1.sinks.k2.port = 7777</span><br><span class="line"></span><br><span class="line">a1.sinks.k3.type = avro</span><br><span class="line">a1.sinks.k3.hostname = localhost</span><br><span class="line">a1.sinks.k3.port = 8888</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">a1.channels.c2.type = memory</span><br><span class="line">a1.channels.c2.capacity = 10000</span><br><span class="line">a1.channels.c2.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">a1.channels.c3.type = memory</span><br><span class="line">a1.channels.c3.capacity = 10000</span><br><span class="line">a1.channels.c3.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a1.sources.r1.channels = c1 c2 c3</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line">a1.sinks.k2.channel = c2</span><br><span class="line">a1.sinks.k3.channel = c3</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume01-interceptor.conf -Dflume.root.logger=INFO,console</span><br><span class="line">#############################################################################################</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">flume02-interceptor.conf</span><br><span class="line">#name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a1.sources.r1.type = avro</span><br><span class="line">a1.sources.r1.bind = localhost</span><br><span class="line">a1.sources.r1.port = 6666</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a1.sinks.k1.type = logger</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume02-interceptor.conf -Dflume.root.logger=INFO,console</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#############################################################################################</span><br><span class="line"></span><br><span class="line">flume03-interceptor.conf</span><br><span class="line">#name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a1.sources.r1.type = avro</span><br><span class="line">a1.sources.r1.bind = localhost</span><br><span class="line">a1.sources.r1.port = 7777</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a1.sinks.k1.type = logger</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume03-interceptor.conf -Dflume.root.logger=INFO,console</span><br><span class="line"></span><br><span class="line">#############################################################################################</span><br><span class="line"></span><br><span class="line">flume04-interceptor.conf</span><br><span class="line"></span><br><span class="line">#name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.sinks = k1</span><br><span class="line">a1.channels = c1</span><br><span class="line"></span><br><span class="line">#sources</span><br><span class="line">a1.sources.r1.type = avro</span><br><span class="line">a1.sources.r1.bind = localhost</span><br><span class="line">a1.sources.r1.port = 8888</span><br><span class="line"></span><br><span class="line">##sinks</span><br><span class="line">a1.sinks.k1.type = logger</span><br><span class="line"></span><br><span class="line">##channels</span><br><span class="line">a1.channels.c1.type = memory</span><br><span class="line">a1.channels.c1.capacity = 10000</span><br><span class="line">a1.channels.c1.transactionCapacity = 100</span><br><span class="line"></span><br><span class="line">##bind</span><br><span class="line">a1.sources.r1.channels = c1</span><br><span class="line">a1.sinks.k1.channel = c1</span><br><span class="line"></span><br><span class="line">flume-ng agent -c $FLUME_HOME/conf -n a1 -f ~/confs/flume04-interceptor.conf -Dflume.root.logger=INFO,console</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#name</span><br><span class="line">a1.sources = r1</span><br><span class="line">a1.channels = c1</span><br><span class="line">#sources</span><br><span class="line">a1.sources.r1.type = TAILDIR</span><br><span class="line">a1.sources.r1.positionFile = /home/suxichuan/flume/taildir_position.json</span><br><span class="line">a1.sources.r1.filegroups = f1</span><br><span class="line">a1.sources.r1.filegroups.f1 = /home/suxichuan/behavior/log</span><br><span class="line">#channels</span><br><span class="line">a1.channels.channel1.type = org.apache.flume.channel.kafka.KafkaChannel</span><br><span class="line">a1.channels.channel1.kafka.bootstrap.servers = hadoop102:9092,hadoop103:9092,hadoop104:9092</span><br><span class="line">a1.channels.channel1.kafka.topic = ods_behavor_log</span><br><span class="line">a1.channels.channel1.kafka.consumer.group.id = ods_behavor_group_1</span><br></pre></td></tr></table></figure></li></ol><p>以上就是，Flume基础学习内容，后续会根据学习的规划调整笔记更新的内容。</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> Flume </tag>
            
            <tag> 数据采集 </tag>
            
            <tag> 分布式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Oracle学习基础笔记</title>
      <link href="/posts/7b34242e/"/>
      <url>/posts/7b34242e/</url>
      
        <content type="html"><![CDATA[<h2 id="PL-SQL-developer安装"><a href="#PL-SQL-developer安装" class="headerlink" title="PL&#x2F;SQL developer安装"></a>PL&#x2F;SQL developer安装</h2><p>1、安装PL&#x2F;SQL developer程序，安装目录不要出现中文。</p><p>2、配置客户端路径：点击PL&#x2F;SQL developer界面的Configure-&gt;Preferences-&gt;oracle配置的connect属性配置。，和</p><p>指定Oracle Home 路径：D:\BaiduNetdiskDownload\client\instantclient_12_1</p><p>指定OCI library路径：D:\BaiduNetdiskDownload\client\instantclient_12_1\oci.dll</p><p><img src="https://bitiful.hudi.space/posts/oraclebase/plsql_develop_1.png" alt="image-20230714112548602"></p><p>3、在 ORACLE 的以下安装目录中找到 tnsnames.ora 文件，拷贝到本地电脑的 D盘根目录。打开 tnsnames.ora 文件编辑配置oracle所在的服务器IP地址，设置环境变量 TNS_ADMIN 为 D 盘根目录( tnsnames.ora 所在目录 )</p><p><img src="https://bitiful.hudi.space/posts/oraclebase/plsql_develop_2.png" alt="image-20230714113841909"></p><p>4、中文编码设置查看服务器端编码 </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">SQL</span>:<span class="keyword">select</span> userenv(<span class="string">&#x27;language&#x27;</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><p>我实际查到的结果为:AMERICAN_AMERICA.ZHS16GBK<br>5、配置环境变量，计算机-&gt;属性-&gt;高级系统设置-&gt;环境变量-&gt;新建，设置变量名:NLS_LANG,变量值:第 1 步查到的值，<br>AMERICAN_AMERICA.ZHS16GBK</p><h2 id="1、数据类型"><a href="#1、数据类型" class="headerlink" title="1、数据类型"></a>1、数据类型</h2><h4 id="number-数值类型"><a href="#number-数值类型" class="headerlink" title="number 数值类型"></a>number 数值类型</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">number（<span class="number">5</span>） 最大值<span class="number">99999</span> </span><br><span class="line">number(<span class="number">5</span>,<span class="number">2</span>) 最大值<span class="number">999.99</span></span><br></pre></td></tr></table></figure><h4 id="字符串类型"><a href="#字符串类型" class="headerlink" title="字符串类型"></a>字符串类型</h4><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">char 固定长度的字符类型，最多存储2000个字节</span><br><span class="line">varchar2 可变长度的字符类型，最多存储4000个字节</span><br><span class="line">long  大文本类型。最大可以存储2个G</span><br></pre></td></tr></table></figure><h4 id="日期类型"><a href="#日期类型" class="headerlink" title="日期类型"></a>日期类型</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sysdate 日期时间型，精确到秒</span><br><span class="line"><span class="type">timestamp</span> 精确到秒的小数点后<span class="number">9</span>位</span><br></pre></td></tr></table></figure><h4 id="二进制类型"><a href="#二进制类型" class="headerlink" title="二进制类型"></a>二进制类型</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">clob</span> 存储字符,最大可以存<span class="number">4</span>个G</span><br><span class="line"><span class="type">blob</span> 存储图像、声音、视频等二进制数据,最多可以存<span class="number">4</span>个G</span><br></pre></td></tr></table></figure><h2 id="2、DDL操作"><a href="#2、DDL操作" class="headerlink" title="2、DDL操作"></a>2、DDL操作</h2><h4 id="用SQLPLUS连接Oracle的连接字符串"><a href="#用SQLPLUS连接Oracle的连接字符串" class="headerlink" title="用SQLPLUS连接Oracle的连接字符串"></a>用SQLPLUS连接Oracle的连接字符串</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sqlplus <span class="keyword">system</span><span class="operator">/</span>local123<span class="variable">@192</span><span class="number">.168</span><span class="number">.157</span><span class="number">.129</span>:<span class="number">1521</span><span class="operator">/</span>orcl</span><br><span class="line">sqlplus    账户名<span class="operator">/</span>密码@所在主机:端口号</span><br><span class="line">sqlplus <span class="keyword">system</span><span class="operator">/</span>local123 <span class="keyword">as</span> sysdba</span><br></pre></td></tr></table></figure><h4 id="创建表空间"><a href="#创建表空间" class="headerlink" title="创建表空间"></a>创建表空间</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span>space xxxx</span><br><span class="line">datafile <span class="string">&#x27;c:\xxxx.dbf&#x27;</span></span><br><span class="line">size <span class="number">100</span>m autoextend <span class="keyword">on</span> next <span class="number">10</span>m</span><br><span class="line">xxx表示表空间名</span><br><span class="line">datafile 表示数据储存的物理文件名</span><br><span class="line">size 用于设置表的初始大小</span><br><span class="line">autoextend <span class="keyword">on</span> 用于设置自动增长，如果存储量超过初始大小，则开始自动扩容</span><br><span class="line">next 用于设置扩容的空间大小</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span>space test;</span><br><span class="line">datafile <span class="string">&#x27;c:\test.dbf&#x27;</span></span><br><span class="line">size <span class="number">100</span>m autoextend <span class="keyword">on</span> next <span class="number">10</span>m</span><br></pre></td></tr></table></figure><h4 id="创建用户"><a href="#创建用户" class="headerlink" title="创建用户"></a>创建用户</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">user</span> 用户名</span><br><span class="line">identified <span class="keyword">by</span> 密码</span><br><span class="line"><span class="keyword">default</span> tablespace 表空间名</span><br></pre></td></tr></table></figure><h4 id="用户赋予权限"><a href="#用户赋予权限" class="headerlink" title="用户赋予权限"></a>用户赋予权限</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grant dba to 用户名  给xxx用户授予DBA权限</span><br></pre></td></tr></table></figure><h4 id="表的创建"><a href="#表的创建" class="headerlink" title="表的创建"></a>表的创建</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> 表名（</span><br><span class="line">字段名  字段类型[长度] [约束],</span><br><span class="line">....</span><br><span class="line">）</span><br><span class="line">例如</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> users(</span><br><span class="line">userid number <span class="keyword">primary</span> key,</span><br><span class="line">name varchar2(<span class="number">50</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_owners(</span><br><span class="line">id number <span class="keyword">primary</span> key,</span><br><span class="line">name varchar2(<span class="number">30</span>),</span><br><span class="line">addressid number,</span><br><span class="line">housenumber varchar2(<span class="number">30</span>),</span><br><span class="line">watermeter varchar2(<span class="number">30</span>),</span><br><span class="line">adddate <span class="type">date</span>,</span><br><span class="line">ownertypeid number</span><br><span class="line">)</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_ownertype(id number  <span class="keyword">primary</span> key,name varchar2(<span class="number">30</span>));</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_pricetable(id number <span class="keyword">primary</span> key,price number(<span class="number">10</span>,<span class="number">2</span>),ownertypeid number,minnum number(<span class="number">10</span>,<span class="number">2</span>),maxnum number(<span class="number">10</span>,<span class="number">2</span>));</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_area(id number <span class="keyword">primary</span> key,name varchar2(<span class="number">30</span>));</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_operator(id number prmary key,name varchar2(<span class="number">30</span>));</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_address(id number,name varchar2(<span class="number">30</span>),areaid number,operatorid number);</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_account(id number,ownerid number,ownertypeid number,areaid number,<span class="keyword">year</span> <span class="type">char</span>(<span class="number">4</span>),<span class="keyword">month</span> <span class="type">char</span>(<span class="number">2</span>),num0 number,num1 number,usenum number,meteruserid number,meterdate <span class="type">date</span>,money number(<span class="number">10</span>,<span class="number">2</span>),isfee <span class="type">char</span>(<span class="number">1</span>),feedate <span class="type">date</span>,feeuserid number);</span><br></pre></td></tr></table></figure><h4 id="表的修改"><a href="#表的修改" class="headerlink" title="表的修改"></a>表的修改</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">desc</span> tablename 查看表的详情</span><br><span class="line">#<span class="number">1</span>、增加字段语法</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename <span class="keyword">add</span> ( 字段名  字段类型 [<span class="keyword">default</span> 默认值 ],字段名  字段类型 [<span class="keyword">default</span> 默认值 ] );</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_owners <span class="keyword">add</span> ( level number <span class="keyword">default</span> <span class="number">1</span>,email varchar2(<span class="number">255</span>) );</span><br><span class="line">#<span class="number">2</span>、修改字段语法</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename modify(字段名 字段类型[<span class="keyword">default</span> 默认值],字段名 字段类型[<span class="keyword">default</span> 默认值]);</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_owners modify(email varchar2(<span class="number">50</span>));</span><br><span class="line">#<span class="number">3</span>、修改字段名</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename rename <span class="keyword">column</span> 原字段名 <span class="keyword">to</span> 新的字段名</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_owners rename <span class="keyword">column</span> email <span class="keyword">to</span> mail;</span><br><span class="line">#<span class="number">4</span>、删除字段名</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename <span class="keyword">drop</span> <span class="keyword">column</span> 字段名；</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> t_owners <span class="keyword">drop</span> tel</span><br><span class="line">#<span class="number">5</span>、删除多个字段名</span><br><span class="line"><span class="keyword">alter</span> <span class="keyword">table</span> tablename <span class="keyword">drop</span> (字段<span class="number">1</span>,字段<span class="number">2</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="清空表"><a href="#清空表" class="headerlink" title="清空表"></a>清空表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">truncate</span> <span class="keyword">table</span> tablename; 删除表再重构表</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> tablename <span class="keyword">where</span> <span class="number">1</span><span class="operator">=</span><span class="number">1</span>; 表结构还在 主键自增的序列依然存在</span><br></pre></td></tr></table></figure><h4 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">table</span> tablename;</span><br></pre></td></tr></table></figure><h2 id="3、DML操作"><a href="#3、DML操作" class="headerlink" title="3、DML操作"></a>3、DML操作</h2><h4 id="insert操作"><a href="#insert操作" class="headerlink" title="insert操作"></a>insert操作</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_owners(</span><br><span class="line">id number <span class="keyword">primary</span> key,</span><br><span class="line">name varchar2(<span class="number">30</span>),</span><br><span class="line">addressid number,</span><br><span class="line">housenumber varchar2(<span class="number">30</span>),</span><br><span class="line">watermeter varchar2(<span class="number">30</span>),</span><br><span class="line">adddate <span class="type">date</span>,</span><br><span class="line">ownertypeid number</span><br><span class="line">)</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> T_OWNERS <span class="keyword">VALUES</span> (<span class="number">1</span>,<span class="string">&#x27;张三丰&#x27;</span>,<span class="number">1001</span>,<span class="string">&#x27;2-2&#x27;</span>,<span class="string">&#x27;5678&#x27;</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> T_OWNERS <span class="keyword">VALUES</span> (<span class="number">2</span>,<span class="string">&#x27;苏赫&#x27;</span>,<span class="number">1002</span>,<span class="string">&#x27;15-2&#x27;</span>,<span class="string">&#x27;8975&#x27;</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> T_OWNERS <span class="keyword">VALUES</span> (<span class="number">3</span>,<span class="string">&#x27;涂山红红&#x27;</span>,<span class="number">1002</span>,<span class="string">&#x27;6-2&#x27;</span>,<span class="string">&#x27;3456&#x27;</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line">#<span class="keyword">create</span> <span class="keyword">table</span> t_ownertype(id number  <span class="keyword">primary</span> key,name varchar2(<span class="number">30</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_ownertype(id,name)<span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;master&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_ownertype(id,name)<span class="keyword">values</span>(<span class="number">1002</span>,<span class="string">&#x27;levelmaster&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_ownertype(id,name)<span class="keyword">values</span>(<span class="number">1003</span>,<span class="string">&#x27;supermaster&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_ownertype(id,name)<span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;居民&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_ownertype(id,name)<span class="keyword">values</span>(<span class="number">1002</span>,<span class="string">&#x27;物业&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_ownertype(id,name)<span class="keyword">values</span>(<span class="number">1003</span>,<span class="string">&#x27;来兵&#x27;</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line">#<span class="keyword">create</span> <span class="keyword">table</span> t_pricetable(id number <span class="keyword">primary</span> key,price number(<span class="number">10</span>,<span class="number">2</span>),ownertypeid number,minnum #number(<span class="number">10</span>,<span class="number">2</span>),maxnum number(<span class="number">10</span>,<span class="number">2</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_pricetable <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">2.45</span>,<span class="number">1001</span>,<span class="number">0</span>,<span class="number">5</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_pricetable <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">3.45</span>,<span class="number">1001</span>,<span class="number">5</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_pricetable <span class="keyword">values</span>(<span class="number">5</span>,<span class="number">4.45</span>,<span class="number">1001</span>,<span class="number">10</span>,<span class="keyword">null</span>);</span><br><span class="line"><span class="keyword">commit</span></span><br><span class="line">#<span class="keyword">create</span> <span class="keyword">table</span> t_area(id number <span class="keyword">primary</span> key,name varchar2(<span class="number">30</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_area <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;East China&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_area <span class="keyword">values</span>(<span class="number">1002</span>,<span class="string">&#x27;North China&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_area <span class="keyword">values</span>(<span class="number">1003</span>,<span class="string">&#x27;NorthEast&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_area <span class="keyword">values</span>(<span class="number">1004</span>,<span class="string">&#x27;SouthWest&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_area <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;双流区&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_area <span class="keyword">values</span>(<span class="number">1002</span>,<span class="string">&#x27;温江区&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_area <span class="keyword">values</span>(<span class="number">1003</span>,<span class="string">&#x27;青羊区&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_area <span class="keyword">values</span>(<span class="number">1004</span>,<span class="string">&#x27;青白江区&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_area <span class="keyword">values</span>(<span class="number">1005</span>,<span class="string">&#x27;武侯区&#x27;</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line">#<span class="keyword">create</span> <span class="keyword">table</span> t_operator(id number <span class="keyword">primary</span> key,name varchar2(<span class="number">30</span>));</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_operator <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;mary&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_operator <span class="keyword">values</span>(<span class="number">1002</span>,<span class="string">&#x27;sueh&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_operator <span class="keyword">values</span>(<span class="number">1003</span>,<span class="string">&#x27;lili&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_operator <span class="keyword">values</span>(<span class="number">1004</span>,<span class="string">&#x27;harry&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_operator <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;小明&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_operator <span class="keyword">values</span>(<span class="number">1002</span>,<span class="string">&#x27;小何&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_operator <span class="keyword">values</span>(<span class="number">1003</span>,<span class="string">&#x27;小苏&#x27;</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_operator <span class="keyword">values</span>(<span class="number">1004</span>,<span class="string">&#x27;小红&#x27;</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line">#<span class="keyword">create</span> <span class="keyword">table</span> t_address(id number <span class="keyword">primary</span> key,name varchar2(<span class="number">30</span>),areaid number,operatorid number);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_address <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;quhouqu&#x27;</span>,<span class="number">1004</span>,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_address <span class="keyword">values</span>(<span class="number">1002</span>,<span class="string">&#x27;qingyangqu&#x27;</span>,<span class="number">1004</span>,<span class="number">1002</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_address <span class="keyword">values</span>(<span class="number">1003</span>,<span class="string">&#x27;shuangliuqu&#x27;</span>,<span class="number">1004</span>,<span class="number">1003</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_address <span class="keyword">values</span>(<span class="number">1004</span>,<span class="string">&#x27;wenjiangqu&#x27;</span>,<span class="number">1004</span>,<span class="number">1004</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_address <span class="keyword">values</span>(<span class="number">1001</span>,<span class="string">&#x27;草金路&#x27;</span>,<span class="number">1004</span>,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_address <span class="keyword">values</span>(<span class="number">1002</span>,<span class="string">&#x27;尚楠湾&#x27;</span>,<span class="number">1004</span>,<span class="number">1002</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_address <span class="keyword">values</span>(<span class="number">1003</span>,<span class="string">&#x27;江安河大桥&#x27;</span>,<span class="number">1004</span>,<span class="number">1003</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_address <span class="keyword">values</span>(<span class="number">1004</span>,<span class="string">&#x27;崇教路&#x27;</span>,<span class="number">1004</span>,<span class="number">1004</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"></span><br><span class="line">#<span class="keyword">create</span> <span class="keyword">table</span> t_account(id number,ownerid number,ownertypeid number,areaid number,<span class="keyword">year</span> <span class="type">char</span>(<span class="number">4</span>),<span class="keyword">month</span> #<span class="type">char</span>(<span class="number">2</span>),num0 number,num1 number,usenum number,meteruserid number,meterdate <span class="type">date</span>,money number(<span class="number">10</span>,<span class="number">2</span>),isfee #<span class="type">char</span>(<span class="number">1</span>),feedate <span class="type">date</span>,feeuserid number);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_account <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1001</span>,<span class="number">1001</span>,<span class="number">1001</span>,<span class="number">2023</span>,<span class="number">06</span>,<span class="number">43543</span>,<span class="number">46456</span>,<span class="number">3000</span>,<span class="number">1001</span>,sysdate,<span class="number">3232</span>,<span class="number">0</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_account <span class="keyword">values</span>(<span class="number">2</span>,<span class="number">1002</span>,<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">2023</span>,<span class="number">06</span>,<span class="number">46456</span>,<span class="number">50020</span>,<span class="number">3564</span>,<span class="number">1002</span>,sysdate,<span class="number">3755</span>,<span class="number">0</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_account <span class="keyword">values</span>(<span class="number">3</span>,<span class="number">1003</span>,<span class="number">1002</span>,<span class="number">1003</span>,<span class="number">2023</span>,<span class="number">06</span>,<span class="number">82122</span>,<span class="number">92131</span>,<span class="number">10009</span>,<span class="number">1003</span>,sysdate,<span class="number">12000</span>,<span class="number">0</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_account <span class="keyword">values</span>(<span class="number">4</span>,<span class="number">1001</span>,<span class="number">1001</span>,<span class="number">1001</span>,<span class="number">2023</span>,<span class="number">07</span>,<span class="number">46456</span>,<span class="number">50000</span>,<span class="number">3544</span>,<span class="number">1004</span>,sysdate,<span class="number">3232</span>,<span class="number">0</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_account <span class="keyword">values</span>(<span class="number">5</span>,<span class="number">1004</span>,<span class="number">1001</span>,<span class="number">1004</span>,<span class="number">2023</span>,<span class="number">06</span>,<span class="number">60000</span>,<span class="number">80000</span>,<span class="number">20000</span>,<span class="number">1001</span>,sysdate,<span class="number">3232</span>,<span class="number">0</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_account <span class="keyword">values</span>(<span class="number">6</span>,<span class="number">1003</span>,<span class="number">1001</span>,<span class="number">1003</span>,<span class="number">2023</span>,<span class="number">07</span>,<span class="number">92131</span>,<span class="number">100000</span>,<span class="number">7869</span>,<span class="number">1001</span>,sysdate,<span class="number">3232</span>,<span class="number">0</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_account <span class="keyword">values</span>(<span class="number">7</span>,<span class="number">1001</span>,<span class="number">1001</span>,<span class="number">1001</span>,<span class="number">2023</span>,<span class="number">08</span>,<span class="number">50000</span>,<span class="number">70000</span>,<span class="number">20000</span>,<span class="number">1003</span>,sysdate,<span class="number">3232</span>,<span class="number">0</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_account <span class="keyword">values</span>(<span class="number">8</span>,<span class="number">1002</span>,<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">2023</span>,<span class="number">07</span>,<span class="number">50020</span>,<span class="number">70020</span>,<span class="number">20000</span>,<span class="number">1003</span>,sysdate,<span class="number">20000</span>,<span class="number">0</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line">#关联查询</span><br><span class="line"><span class="keyword">select</span></span><br><span class="line">  tad.id <span class="keyword">as</span> addressid,</span><br><span class="line">  tad.name <span class="keyword">as</span> addressname,</span><br><span class="line">  ta.name <span class="keyword">as</span> areaname,</span><br><span class="line">  top.name <span class="keyword">as</span> operatorname</span><br><span class="line"><span class="keyword">from</span> t_address tad,t_area ta,t_operator top</span><br><span class="line"><span class="keyword">where</span> tad.areaid<span class="operator">=</span>ta.id <span class="keyword">and</span> tad.operatorid<span class="operator">=</span>top.id;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> </span><br><span class="line">t1.addressid,</span><br><span class="line">   t1.addressname,</span><br><span class="line">    t2.name <span class="keyword">as</span> operatoname,</span><br><span class="line">   t1.areaname</span><br><span class="line"><span class="keyword">from</span> (</span><br><span class="line">   <span class="keyword">select</span> </span><br><span class="line">   tad.id <span class="keyword">as</span> addressid,</span><br><span class="line">   tad.name <span class="keyword">as</span> addressname,</span><br><span class="line">    tad.operatorid <span class="keyword">as</span> operatorid,</span><br><span class="line">   ta.name <span class="keyword">as</span> areaname</span><br><span class="line">   <span class="keyword">from</span> t_address tad <span class="keyword">left</span>  <span class="keyword">join</span> t_area ta <span class="keyword">on</span> tad.areaid<span class="operator">=</span>ta.id</span><br><span class="line">) t1 <span class="keyword">left</span> <span class="keyword">join</span> t_operator t2 <span class="keyword">on</span> t1.operatorid<span class="operator">=</span> t2.id;</span><br></pre></td></tr></table></figure><h4 id="update数据修改"><a href="#update数据修改" class="headerlink" title="update数据修改"></a>update数据修改</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">update</span> 表名 <span class="keyword">set</span> 字段<span class="operator">=</span>新值，字段<span class="operator">=</span>新值 <span class="keyword">where</span> 条件;</span><br><span class="line"><span class="keyword">update</span> t_ownertype <span class="keyword">set</span> id<span class="operator">=</span><span class="number">1004</span>,name<span class="operator">=</span><span class="string">&#x27;level1master&#x27;</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1001</span>;</span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure><h4 id="delete删除数据"><a href="#delete删除数据" class="headerlink" title="delete删除数据"></a>delete删除数据</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">delete</span> <span class="keyword">from</span> tablename <span class="keyword">where</span> 条件</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> t_ownertype <span class="keyword">where</span> id <span class="operator">=</span><span class="number">1004</span>;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> t_ownertype <span class="keyword">where</span> id <span class="operator">&gt;</span><span class="number">1001</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> t_ownertype <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="number">1001</span>,<span class="number">1002</span>,<span class="number">1003</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br></pre></td></tr></table></figure><blockquote><p>注意增删改查操作完成后记得commit提交事务</p></blockquote><h4 id="导入导出"><a href="#导入导出" class="headerlink" title="导入导出"></a>导入导出</h4><p>数据的导出</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">expdp(impdp) 用户名<span class="operator">/</span>密码@连接地址:端口<span class="operator">/</span>服务名 [schemas<span class="operator">|</span>owner]<span class="operator">=</span>用户名 [dumpfile<span class="operator">|</span>file]<span class="operator">=</span>file1.dmp logfile<span class="operator">=</span>file1.log directory<span class="operator">=</span>testdata1 remap_schema<span class="operator">=</span>test:test;</span><br><span class="line">exp:导出命令，导出时必写。</span><br><span class="line">imp:导入命令，导入时必写,每次操作，二者只能选择一个执行。</span><br><span class="line">username:导出数据的用户名，必写;</span><br><span class="line">password:导出数据的密码，必写;</span><br><span class="line">@:地址符号，必写;</span><br><span class="line">SERVICENAME:Oracle的服务名，必写;</span><br><span class="line"><span class="number">1521</span>:端口号，<span class="number">1521</span>是默认的可以不写,非默认要写;</span><br><span class="line">schemas：导出操作的用户名;</span><br><span class="line">dumpfile：导出的文件;</span><br><span class="line">logfile:导出的日志文件,可以不写；</span><br><span class="line">directory: 如果手工创建了转储文件和日志文件，通过本命令指定导出位置</span><br><span class="line">remap_schema<span class="operator">=</span>源数据库用户名:目标数据库用户名,二者不同时必写，相同可以省略;</span><br><span class="line"></span><br><span class="line">#例如</span><br><span class="line">exp <span class="keyword">system</span><span class="operator">/</span>local123 <span class="keyword">full</span><span class="operator">=</span>y 整个数据库全部导出</span><br><span class="line">exp <span class="keyword">system</span><span class="operator">/</span>local123 <span class="keyword">full</span><span class="operator">=</span>y [dumpfile<span class="operator">|</span>file]<span class="operator">=</span>a.dmp</span><br><span class="line">exp lili<span class="operator">/</span>lili123 file<span class="operator">=</span>lili.dmp owner<span class="operator">=</span>lili;</span><br><span class="line">按用户导入</span><br><span class="line">imp lili<span class="operator">/</span>lili123 file<span class="operator">=</span>lili.dmp fromuserlili;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">通过<span class="variable">@F</span>:\website\oraok\ot\<span class="number">11</span>g\ot_drop.sql 导入F盘下的\website\oraok\ot\<span class="number">11</span>g\目录下的ot_drop.sql文件</span><br></pre></td></tr></table></figure><h2 id="4、DML练习"><a href="#4、DML练习" class="headerlink" title="4、DML练习"></a>4、DML练习</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> tac.areaid,<span class="built_in">sum</span>(tac.money),ta.name <span class="keyword">from</span> t_account tac,t_area ta <span class="keyword">where</span> tac.areaid<span class="operator">=</span>ta.id <span class="keyword">group</span> <span class="keyword">by</span> tac.areaid,ta.name;</span><br></pre></td></tr></table></figure><h4 id="简单查询"><a href="#简单查询" class="headerlink" title="简单查询"></a>简单查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_owners;</span><br><span class="line">#精确查询</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_owners <span class="keyword">where</span> watermeter<span class="operator">=</span><span class="number">5678</span>;</span><br><span class="line">#模糊查询</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_owners <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%张%&#x27;</span>;</span><br><span class="line">#<span class="keyword">and</span>的运算符 <span class="keyword">or</span>运算符</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_owners <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;张%&#x27;</span> <span class="keyword">or</span> name <span class="keyword">like</span> <span class="string">&#x27;%山%&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_owners <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;_山__&#x27;</span> <span class="keyword">or</span> watermeter<span class="operator">&gt;</span><span class="number">5678</span>;</span><br><span class="line">#<span class="keyword">and</span>运算符 <span class="keyword">or</span>运算符混合使用</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_owners <span class="keyword">where</span> (name <span class="keyword">like</span> <span class="string">&#x27;%苏%&#x27;</span> <span class="keyword">or</span> name <span class="keyword">like</span> <span class="string">&#x27;%山%&#x27;</span> ) <span class="keyword">and</span> addressid <span class="operator">=</span><span class="number">1002</span>;</span><br><span class="line">#范围查询</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_account <span class="keyword">where</span> num0<span class="operator">&gt;=</span><span class="number">50000</span> <span class="keyword">and</span> num0<span class="operator">&lt;=</span><span class="number">70000</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_account <span class="keyword">where</span> num0 <span class="keyword">between</span> <span class="number">50000</span> <span class="keyword">and</span> <span class="number">70000</span>;</span><br><span class="line">#空值查询</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span>  <span class="keyword">from</span> t_account isfee <span class="keyword">is</span> <span class="keyword">null</span>;</span><br><span class="line">#查询非空值</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_account isfee <span class="keyword">is</span> <span class="keyword">not</span> <span class="keyword">null</span>;</span><br><span class="line">#去重查询</span><br><span class="line"><span class="keyword">select</span> <span class="keyword">distinct</span> addressid <span class="keyword">from</span> t_owners ; </span><br><span class="line">#排序 默认升序<span class="keyword">asc</span> <span class="keyword">desc</span>降序</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_account <span class="keyword">order</span> <span class="keyword">by</span> usenum <span class="keyword">desc</span>;</span><br><span class="line">#基于伪列的查询rowid rowid是保存数据在磁盘上的物理地址</span><br><span class="line"><span class="keyword">select</span> rowid,t.<span class="operator">*</span> <span class="keyword">from</span> t_owners t;</span><br><span class="line">#可以通过rowid来指定查询的某条数据</span><br><span class="line"><span class="keyword">select</span> rowid,t.<span class="operator">*</span> <span class="keyword">from</span> t_owners t <span class="keyword">where</span> rowid<span class="operator">=</span><span class="string">&#x27;AAASNcAABAAAVJpAAD&#x27;</span>;</span><br><span class="line">#基于伪列的查询rownum rownum是基于查询出的结果集的序号</span><br><span class="line"><span class="keyword">select</span> rownum,t.<span class="operator">*</span> <span class="keyword">from</span> t_owners t;</span><br><span class="line">#聚合统计sum</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sum</span>(usenum) <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">year</span><span class="operator">=</span><span class="string">&#x27;2023&#x27;</span>;</span><br><span class="line">#平均值</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(usenum) <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">year</span><span class="operator">=</span><span class="string">&#x27;2023&#x27;</span>;</span><br><span class="line">#最小值</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">min</span>(usenum) <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">year</span><span class="operator">=</span><span class="string">&#x27;2023&#x27;</span>;</span><br><span class="line">#最大值</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">max</span>(usenum) <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">year</span><span class="operator">=</span><span class="string">&#x27;2023&#x27;</span>;</span><br><span class="line">#统计个数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(id) <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">year</span><span class="operator">=</span><span class="string">&#x27;2023&#x27;</span>;</span><br><span class="line">#分组查询</span><br><span class="line"><span class="keyword">select</span> areaid,<span class="built_in">sum</span>(usenum) <span class="keyword">from</span> t_account <span class="keyword">group</span> <span class="keyword">by</span> areaid;</span><br><span class="line">#分组后在指定条件的查询</span><br><span class="line"><span class="keyword">select</span> areaid,<span class="built_in">sum</span>(usenum) <span class="keyword">from</span> t_account <span class="keyword">group</span> <span class="keyword">by</span> areaid <span class="keyword">having</span> <span class="built_in">sum</span>(usenum)<span class="operator">&gt;</span><span class="number">20000</span>;</span><br></pre></td></tr></table></figure><h4 id="连接查询"><a href="#连接查询" class="headerlink" title="连接查询"></a>连接查询</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#多表内连接</span><br><span class="line"><span class="keyword">select</span> twn.<span class="operator">*</span>,ta.name addressname <span class="keyword">from</span> t_owners twn,t_address ta <span class="keyword">where</span> twn.addressid<span class="operator">=</span>ta.id;</span><br><span class="line"></span><br><span class="line">#查询显示业主编号，业主名称、地址和业主类型</span><br><span class="line"><span class="keyword">select</span> twn.id,twn.name,ta.name addressname,tt.name ownertype <span class="keyword">from</span> t_owners twn,t_ownertype tt,t_address ta <span class="keyword">where</span> twn.ownertypeid<span class="operator">=</span>tt.id <span class="keyword">and</span> twn.addressid<span class="operator">=</span>ta.id; </span><br><span class="line"></span><br><span class="line">#查询显示业主编号、业主名称、地址、所属区域、业主分类</span><br><span class="line"><span class="keyword">select</span> twn.id,twn.name,ta.name addressname,t1.name areaname,tt.name ownername <span class="keyword">from</span> t_owners twn, t_area t1,t_address ta,t_ownertype tt <span class="keyword">where</span> twn.addressid<span class="operator">=</span>ta.id <span class="keyword">and</span> twn.ownertypeid<span class="operator">=</span>tt.id <span class="keyword">and</span> ta.areaid<span class="operator">=</span>t1.id;</span><br><span class="line"></span><br><span class="line">#查询显示业主编号、业主名称、地址、所属区域、收费员、业主分类</span><br><span class="line"><span class="keyword">select</span> twn.id,twn.name,ta.name addressname,t1.name areaname,top.name operatorname,tt.name ownertypename <span class="keyword">from</span> t_owners twn,t_address ta,t_area t1,t_operator top,t_ownertype tt</span><br><span class="line"><span class="keyword">where</span> twn.addressid<span class="operator">=</span>ta.id <span class="keyword">and</span> twn.ownertypeid<span class="operator">=</span>tt.id <span class="keyword">and</span> ta.areaid<span class="operator">=</span>t1.id <span class="keyword">and</span> ta.operatorid<span class="operator">=</span>top.id;</span><br><span class="line"></span><br><span class="line">#查询业主的账务记录，显示业主编号、名称、年、月、金额。如果此业主没有账务记录也要列出姓名。</span><br><span class="line"><span class="keyword">select</span> twn.id,twn.name,tacc.year,tacc.month,tacc.money <span class="keyword">from</span> t_owners twn <span class="keyword">left</span> <span class="keyword">join</span> t_account tacc <span class="keyword">on</span> twn.id<span class="operator">=</span>tacc.ownerid; </span><br><span class="line"></span><br><span class="line">#左外连接</span><br><span class="line"><span class="keyword">select</span> twn.id,twn.name,tacc.year,tacc.month,tacc.money <span class="keyword">from</span> t_owners twn,t_account tacc <span class="keyword">where</span> twn.id<span class="operator">=</span>tacc.ownerid(<span class="operator">+</span>);</span><br><span class="line"></span><br><span class="line">#右外连接</span><br><span class="line"><span class="keyword">select</span> twn.id,twn.name,tacc.year,tacc.month,tacc.money <span class="keyword">from</span> t_owners twn,t_account tacc <span class="keyword">where</span> twn.id(<span class="operator">+</span>)<span class="operator">=</span>tacc.ownerid;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="子查询"><a href="#子查询" class="headerlink" title="子查询"></a>子查询</h4><ol><li><p>where子句中的子查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#单行子查询</span><br><span class="line">#查询 <span class="number">2023</span> 年 <span class="number">6</span> 月用水量大于平均值的台账记录</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">avg</span>(usenum) <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">month</span><span class="operator">=</span><span class="number">6</span>;</span><br><span class="line"><span class="keyword">select</span> usenum <span class="keyword">from</span> t_account <span class="keyword">where</span> usenum<span class="operator">&gt;</span>(<span class="keyword">select</span> <span class="built_in">avg</span>(usenum) <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">month</span><span class="operator">=</span><span class="number">6</span>) <span class="keyword">and</span> <span class="keyword">month</span><span class="operator">=</span><span class="number">6</span>;</span><br><span class="line">#多行子查询</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_address <span class="keyword">where</span> id <span class="keyword">in</span> (<span class="number">1001</span>,<span class="number">1002</span>);</span><br><span class="line">#查询地址含有“草”的业主的信息</span><br><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> t_address <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%草%&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_owners <span class="keyword">where</span> addressid <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> t_address <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%江安河%&#x27;</span>);</span><br><span class="line"></span><br><span class="line">#查询地址不含有“草”的业主的信息</span><br><span class="line"><span class="keyword">select</span> id <span class="keyword">from</span> t_address <span class="keyword">where</span> name <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">&#x27;%草%&#x27;</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_owners <span class="keyword">where</span> addressid <span class="keyword">in</span> (<span class="keyword">select</span> id <span class="keyword">from</span> t_address <span class="keyword">where</span> name <span class="keyword">not</span> <span class="keyword">like</span> <span class="string">&#x27;%草%&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_onwers <span class="keyword">where</span> addressid <span class="keyword">not</span> <span class="keyword">in</span>(<span class="keyword">select</span> id <span class="keyword">from</span> t_address <span class="keyword">where</span> name <span class="keyword">like</span> <span class="string">&#x27;%草%&#x27;</span>);</span><br><span class="line">#</span><br></pre></td></tr></table></figure></li><li><p>from子句中的子查询</p><p>from子查询为多行子查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#查询显示业主编号，业主名称，业主类型名称，条件为业主类型为”居民”，使用子查询实现。</span><br><span class="line"><span class="keyword">select</span> id,name,ownertypename <span class="keyword">from</span> (<span class="keyword">select</span> twn.<span class="operator">*</span>,tt.name ownertypename  <span class="keyword">from</span> t_owners twn,t_ownertype tt  <span class="keyword">where</span> twn.ownertypeid<span class="operator">=</span>tt.id <span class="keyword">and</span> tt.name<span class="operator">=</span><span class="string">&#x27;居民&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>select 子句中的子查询</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">#列出业主信息，包括 ID，名称，所属地址。</span><br><span class="line"><span class="keyword">select</span> id,name,(<span class="keyword">select</span> name <span class="keyword">from</span> t_address <span class="keyword">where</span> id<span class="operator">=</span>addressid) addressname <span class="keyword">from</span> t_owners;</span><br><span class="line">#列出业主信息，包括 ID，名称，所属地址，所属区域</span><br><span class="line"><span class="keyword">select</span> id,name,</span><br><span class="line">(<span class="keyword">select</span> name <span class="keyword">from</span> t_address <span class="keyword">where</span> id<span class="operator">=</span>addressid) addressname,</span><br><span class="line">(<span class="keyword">select</span> (<span class="keyword">select</span> name <span class="keyword">from</span> t_area <span class="keyword">where</span> id<span class="operator">=</span>areaid) <span class="keyword">from</span> t_address <span class="keyword">where</span> id<span class="operator">=</span>addressid) areaname</span><br><span class="line"><span class="keyword">from</span> t_owners;</span><br></pre></td></tr></table></figure></li><li><p>分页查询</p><p>使用rownum伪列来完成分页查询的功能。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#分页查询台账表 T_ACCOUNT，每页 <span class="number">10</span> 条记录</span><br><span class="line"><span class="keyword">select</span> rownum,t.<span class="operator">*</span> <span class="keyword">from</span> t_account t <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">5</span>; </span><br><span class="line">#查询<span class="number">5</span>到<span class="number">10</span>的数据</span><br><span class="line">#子查询里rownum小于较大值,外面rownum大于较小值</span><br><span class="line"><span class="keyword">select</span> rownum,t.<span class="operator">*</span> <span class="keyword">from</span> (<span class="keyword">select</span> rownum r,t.<span class="operator">*</span> <span class="keyword">from</span> t_account t <span class="keyword">where</span> rownum<span class="operator">&lt;=</span><span class="number">20</span>) t <span class="keyword">where</span> r<span class="operator">&lt;=</span><span class="number">5</span>;</span><br></pre></td></tr></table></figure></li></ol><h2 id="5、函数"><a href="#5、函数" class="headerlink" title="5、函数"></a>5、函数</h2><h4 id="字符函数"><a href="#字符函数" class="headerlink" title="字符函数"></a>字符函数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> ascii(<span class="string">&#x27;a&#x27;</span>) <span class="keyword">from</span> dual;ASCII() 返回字符的十进制数;</span><br><span class="line"><span class="keyword">select</span> chr(<span class="number">97</span>) <span class="keyword">from</span> dual; chr() 返回十进制数的对应的字符;</span><br><span class="line"><span class="keyword">select</span> concat(<span class="string">&#x27;aa&#x27;</span>,<span class="string">&#x27;bb&#x27;</span>) <span class="keyword">from</span> dual; 拼接两个字符串 <span class="operator">||</span> </span><br><span class="line"><span class="keyword">select</span> <span class="string">&#x27;aa&#x27;</span> <span class="operator">||</span> <span class="string">&#x27;bb&#x27;</span> <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> initcap(<span class="string">&#x27;string&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> instr(<span class="string">&#x27;adbc&#x27;</span>,<span class="string">&#x27;a&#x27;</span>) <span class="keyword">from</span> dual; 找出某个字符的位置</span><br><span class="line"><span class="keyword">select</span> instrb(<span class="string">&#x27;abc&#x27;</span>,<span class="string">&#x27;a&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> length(<span class="string">&#x27;asdfgh&#x27;</span>) <span class="keyword">from</span> dual; 给出字符串的长度</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">lower</span>(<span class="string">&#x27;HELLO&#x27;</span>) <span class="keyword">from</span> dual;将字符转化成小写</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">upper</span>(<span class="string">&#x27;apple&#x27;</span>) <span class="keyword">from</span> dual;将字符串转化成小写</span><br><span class="line">#去除指定的字符串</span><br><span class="line"><span class="keyword">select</span> ltrim(<span class="string">&#x27;##apple&#x27;</span>,<span class="string">&#x27;#&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> rtrim(<span class="string">&#x27;apple@@&#x27;</span>,<span class="string">&#x27;@&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">trim</span>(<span class="string">&#x27;p&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;apple&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> lpad(<span class="string">&#x27;apple&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;*&#x27;</span>) <span class="keyword">from</span> dual;在字符串c1的左边用字符串c2填充，直到长度为<span class="number">10</span>时为止</span><br><span class="line"><span class="keyword">select</span> rpad(<span class="string">&#x27;apple&#x27;</span>,<span class="number">10</span>,<span class="string">&#x27;#&#x27;</span>) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> replace(<span class="string">&#x27;apple&#x27;</span>,<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;bb&#x27;</span>) <span class="keyword">from</span> dual;替换指定的字符串。</span><br><span class="line"><span class="keyword">select</span> substr(<span class="string">&#x27;apple&#x27;</span>,<span class="string">&#x27;1&#x27;</span>,<span class="number">2</span>) <span class="keyword">from</span> dual;从第一个位置开始截取，截取两位</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="日期函数"><a href="#日期函数" class="headerlink" title="日期函数"></a>日期函数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">sysdate 返回系统当前时间</span><br><span class="line"><span class="keyword">select</span> sysdate <span class="keyword">from</span> dual;</span><br><span class="line">add_months 给系统返回的时间加一天</span><br><span class="line"><span class="keyword">select</span> add_months(sysdate,<span class="number">1</span>) <span class="keyword">from</span> dual;</span><br><span class="line">last_day 返回月份的最后一天</span><br><span class="line"><span class="keyword">select</span> last_day(add_months(sysdate,<span class="number">2</span>)) <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> months_between(sysdate,to_date(<span class="string">&#x27;2023-04-30&#x27;</span>,<span class="string">&#x27;yyyy-MM-dd&#x27;</span>)) <span class="keyword">from</span> dual;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">localtimestamp</span> <span class="keyword">from</span> dual;返回会话中的日期和时间 </span><br><span class="line"><span class="keyword">select</span> <span class="built_in">current_timestamp</span> <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> greatest(sysdate,add_months(sysdate,<span class="number">2</span>)) <span class="keyword">from</span> dual; 返回两个时间中最晚的。时间戳最大的。</span><br></pre></td></tr></table></figure><h4 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span>  <span class="built_in">abs</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;绝对值</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">ceil</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;大于或等于 <span class="keyword">value</span> 的最小整数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">cos</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual; 余弦</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">cosh</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;反余弦</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">exp</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;e的<span class="keyword">value</span>次幂</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">floor</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;小于或等于 <span class="keyword">value</span> 的最大整数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">ln</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;<span class="keyword">value</span> 的自然对数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">log</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;<span class="keyword">value</span> 的以 <span class="number">10</span> 为底的对数</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">mod</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;求模</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">power</span>(v,p) <span class="keyword">from</span> dual;v的p次幂</span><br><span class="line"><span class="keyword">select</span> round(v,p) <span class="keyword">from</span> dual;按 <span class="keyword">precision</span> 精度<span class="number">4</span>舍<span class="number">5</span>入</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sin</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;<span class="keyword">value</span>的正弦</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sinh</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;<span class="keyword">value</span>的反正弦</span><br><span class="line"><span class="keyword">select</span> sign(<span class="keyword">value</span>) <span class="keyword">from</span> dual;<span class="keyword">value</span> 为正返回 <span class="number">1</span>;为负返回<span class="number">-1</span>;为 <span class="number">0</span> 返回 <span class="number">0.</span></span><br><span class="line"><span class="keyword">select</span> <span class="built_in">tan</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;<span class="keyword">value</span>的正切</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">tanh</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;<span class="keyword">value</span>的反正切</span><br><span class="line"><span class="keyword">select</span> vsize(<span class="keyword">value</span>) <span class="keyword">from</span> dual;返回<span class="keyword">value</span>在ORACLE的存储空间大小</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">sqrt</span>(<span class="keyword">value</span>) <span class="keyword">from</span> dual;<span class="keyword">value</span>的平方根</span><br></pre></td></tr></table></figure><h2 id="6、表空间巡检"><a href="#6、表空间巡检" class="headerlink" title="6、表空间巡检"></a>6、表空间巡检</h2><h4 id="查询视图dba-data-files"><a href="#查询视图dba-data-files" class="headerlink" title="查询视图dba_data_files"></a>查询视图dba_data_files</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">file_name:表空间数据文件的位置</span><br><span class="line">file_id:数据文件的ID</span><br><span class="line">tablespace_name：表空间名称</span><br><span class="line">bytes:表空间大小 字节显示</span><br><span class="line">blocks:表示数据块数量</span><br><span class="line">status:表示当前文件是否可用</span><br><span class="line">relative_fno:相对文件号</span><br><span class="line">autoextensible:是否自动扩展</span><br><span class="line">maxbytes:如果扩展，最大扩展的大小</span><br><span class="line">maxblocks：如果扩展，最大的数据块数</span><br><span class="line">increment_by：最大增加的数据块数</span><br><span class="line">user_bytes:文件中实际有用的字节数</span><br><span class="line">user_blocks:文件中实际有用的数据块数</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> file_name,tablespace_name,bytes<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> <span class="keyword">from</span> dba_data_files;</span><br><span class="line"><span class="keyword">select</span> file_name,tablespace_name,<span class="built_in">sum</span>(bytes)<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> <span class="keyword">from</span> dba_data_files <span class="keyword">group</span> <span class="keyword">by</span> file_name,tablespace_name;</span><br><span class="line"></span><br><span class="line">#查看表空间总容量和剩余容量和使用量。</span><br><span class="line"><span class="keyword">select</span> df.tablespace_name,<span class="built_in">SUM</span>(df.bytes)<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> total,<span class="built_in">SUM</span>(fs.bytes)<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> <span class="keyword">free</span>,<span class="built_in">SUM</span>(df.bytes<span class="operator">-</span>fs.bytes)<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> used <span class="keyword">from</span> dba_data_files df,dba_free_space fs</span><br><span class="line"><span class="keyword">where</span> df.tablespace_name <span class="operator">=</span> fs.tablespace_name</span><br><span class="line"><span class="keyword">group</span> <span class="keyword">by</span> df.tablespace_name <span class="keyword">having</span> df.tablespace_name<span class="operator">=</span><span class="string">&#x27;WATERBOSS&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="查询视图dba-free-space"><a href="#查询视图dba-free-space" class="headerlink" title="查询视图dba_free_space"></a>查询视图dba_free_space</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">tablespace_name:表空间名称</span><br><span class="line">file_id：表空间ID</span><br><span class="line">block_id:开始块的ID</span><br><span class="line">bytes:表示空闲的字节数</span><br><span class="line">blocks:表示空闲的数据块数</span><br><span class="line">relative_fno:相对文件的id</span><br><span class="line">#查看表空间总容量和剩余容量和使用量。</span><br><span class="line"><span class="keyword">select</span> ds.tablespace_name,<span class="built_in">sum</span>(ds.bytes)<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> total,<span class="built_in">sum</span>(fs.bytes)<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> <span class="keyword">free</span>,<span class="built_in">sum</span>(ds.bytes)<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span><span class="operator">-</span><span class="built_in">sum</span>(fs.bytes)<span class="operator">/</span><span class="number">1024</span><span class="operator">/</span><span class="number">1024</span> used <span class="keyword">from</span> dba_data_files ds,dba_free_space fs <span class="keyword">where</span> ds.tablespace_name<span class="operator">=</span>fs.tablespace_name <span class="keyword">group</span> <span class="keyword">by</span> ds.tablespace_name;</span><br></pre></td></tr></table></figure><h2 id="7、视图"><a href="#7、视图" class="headerlink" title="7、视图"></a>7、视图</h2><p>概念：视图是一种数据库对象，是从一个或者多个数据表或视图中导出的虚表，视图所对应的数据并不真正地存储在视图中，而是存储在所引用的数据表中，视图的结构和数据是对数据表进行查询的结果。</p><p>优点：</p><ul><li>简化数据操作：视图可以简化用户处理数据的方式。</li><li>着重于特定数据：不必要的数据或敏感数据可以不出现在视图中。</li><li>视图提供了一个简单而有效的安全机制，可以定制不同用户对数据的访问权限。</li><li>提供向后兼容性：视图使用户能够在表的架构更改时为表创建向后兼容接口。</li></ul><h4 id="创建和修改视图"><a href="#创建和修改视图" class="headerlink" title="创建和修改视图"></a>创建和修改视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> [<span class="keyword">or</span> replace] [force] <span class="keyword">view</span> view_name</span><br><span class="line"><span class="keyword">as</span> subquery</span><br><span class="line">[<span class="keyword">with</span> <span class="keyword">check</span> option]</span><br><span class="line">[<span class="keyword">with</span> read <span class="keyword">only</span>]</span><br><span class="line"></span><br><span class="line">[<span class="keyword">or</span> replace]:若已经存在该视图，oracle自动重构该视图</span><br><span class="line">[force]:不管基表是否存在，oracle都会自动创建该视图</span><br><span class="line">suquery:子查询</span><br><span class="line">[<span class="keyword">with</span> <span class="keyword">check</span> option]:插入和修改的数据行必须满足定义视图的约束</span><br><span class="line">[<span class="keyword">with</span> read <span class="keyword">only</span>]:该视图上不能进行任何 DML 操作。</span><br><span class="line"></span><br><span class="line">#<span class="keyword">create</span> <span class="keyword">view</span> dba_data_files_v1 <span class="keyword">as</span> <span class="keyword">select</span> file_name,tablespace_name, <span class="keyword">from</span> dba_data_files;</span><br><span class="line"><span class="keyword">create</span> [<span class="keyword">or</span> replace] <span class="keyword">view</span> t_account_v1 <span class="keyword">as</span> <span class="keyword">select</span> id,ownerid,ownertypeid,areaid <span class="keyword">from</span> t_account;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_account_v1;</span><br><span class="line">#简单视图，可以进行增删改查记录</span><br><span class="line">#<span class="keyword">update</span> view_name <span class="keyword">set</span> <span class="keyword">column</span><span class="operator">=</span>新值 <span class="keyword">where</span> 条件</span><br><span class="line"><span class="keyword">update</span> t_account_v1 <span class="keyword">set</span> areaid<span class="operator">=</span><span class="number">1002</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">5</span>;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_account_v1;</span><br></pre></td></tr></table></figure><p>视图其实是一个虚拟的表，它的数据其实来自于表。如果更改了视图的数据，表的数据也自然会变化，更改了<br>表的数据，视图也自然会变化。</p><h4 id="删除视图"><a href="#删除视图" class="headerlink" title="删除视图"></a>删除视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">drop</span> <span class="keyword">view</span> view_name;</span><br></pre></td></tr></table></figure><h4 id="带检查约束的视图"><a href="#带检查约束的视图" class="headerlink" title="带检查约束的视图"></a>带检查约束的视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> t_account_v2 </span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> id,ownerid,ownertypeid,areaid <span class="keyword">from</span> t_account <span class="keyword">where</span> areaid<span class="operator">=</span><span class="number">1001</span></span><br><span class="line"><span class="keyword">with</span> <span class="keyword">check</span> option;</span><br><span class="line"></span><br><span class="line">#<span class="keyword">update</span> t_account_v2 <span class="keyword">set</span> areaid<span class="operator">=</span><span class="number">1002</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">#会报错<span class="keyword">view</span> <span class="keyword">WITH</span> <span class="keyword">CHECK</span> OPTION <span class="keyword">where</span><span class="operator">-</span>clause violation</span><br></pre></td></tr></table></figure><h4 id="只读视图的创建与使用"><a href="#只读视图的创建与使用" class="headerlink" title="只读视图的创建与使用"></a>只读视图的创建与使用</h4><p>指定 WITH READ ONLY 选项，这样创建的视图就是一个只读视图</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">view</span> t_account_v2</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> id,ownerid,ownertypeid,areaid <span class="keyword">from</span> t_account <span class="keyword">where</span> areaid<span class="operator">=</span><span class="number">1001</span></span><br><span class="line"><span class="keyword">with</span> read <span class="keyword">only</span>;</span><br><span class="line"><span class="keyword">update</span> t_account_v2 <span class="keyword">set</span> areaid<span class="operator">=</span><span class="number">1002</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">#修改只读视图出现：cannot perform a DML operation <span class="keyword">on</span> a read<span class="operator">-</span><span class="keyword">only</span> <span class="keyword">view</span></span><br></pre></td></tr></table></figure><h4 id="创建不存在基表的视图"><a href="#创建不存在基表的视图" class="headerlink" title="创建不存在基表的视图"></a>创建不存在基表的视图</h4><p>有的时候，创建视图时的表可能并不存在，但是以后可能会存在，此时需要创建这样的视图，需要添加 FORCE 选项</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace force <span class="keyword">view</span> t_temp_vi </span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_temp;</span><br></pre></td></tr></table></figure><h4 id="查询所有的视图"><a href="#查询所有的视图" class="headerlink" title="查询所有的视图"></a>查询所有的视图</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> user_views;</span><br></pre></td></tr></table></figure><h4 id="复杂视图的创建与使用"><a href="#复杂视图的创建与使用" class="headerlink" title="复杂视图的创建与使用"></a>复杂视图的创建与使用</h4><p>复杂视图，就是视图的 SQL 语句中，有聚合函数或多表关联查询。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#<span class="number">1</span>、多表关联查询的视图</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace force <span class="keyword">view</span> twn_tt_v1</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> twn.<span class="operator">*</span>,tt.name <span class="keyword">as</span> ownertypename <span class="keyword">from</span> t_owners twn,t_ownertype tt <span class="keyword">where</span> twn.ownertypeid<span class="operator">=</span>tt.id(<span class="operator">+</span>)</span><br><span class="line"><span class="keyword">with</span> <span class="keyword">check</span> option;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> twn_tt_v1;</span><br><span class="line"><span class="keyword">update</span> twn_tt_v1 <span class="keyword">set</span> name<span class="operator">=</span><span class="string">&#x27;suhe&#x27;</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1002</span>;</span><br><span class="line">#可以修改主表的数据不可以修改关联表的数据</span><br><span class="line">#<span class="number">2</span>、分组聚合统计查询的视图</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_account;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace force <span class="keyword">view</span> month_per_num_2023</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> <span class="keyword">year</span>,<span class="keyword">month</span>,<span class="built_in">sum</span>(usenum) sumuse <span class="keyword">from</span> t_account <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">year</span>,<span class="keyword">month</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="keyword">year</span>,<span class="keyword">month</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> month_per_num_2023;</span><br></pre></td></tr></table></figure><h4 id="物化视图"><a href="#物化视图" class="headerlink" title="物化视图"></a>物化视图</h4><p>​视图是一个虚拟表（也可以认为是一条语句），基于它创建时指定的查询语句返回的结果集。每次访问它都会导致这个查询语句被执行一次。为了避免每次访问都执行这个查询，可以将这个查询结果集存储到一个物化视图（也叫实体化视图）。物化视图与普通的视图相比的区别是物化视图是建立的副本，它类似于一张表，需要占用存储空间。而对一个物化视图查询的执行效率与查询一个表是一样的。</p><ul><li>创建物化视图语法</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> meterialized <span class="keyword">view</span> view_name</span><br><span class="line">[build immediate <span class="operator">|</span> build deferred]</span><br><span class="line">refresh [fast <span class="operator">|</span> complete <span class="operator">|</span> force]</span><br><span class="line">[</span><br><span class="line"> <span class="keyword">on</span> [<span class="keyword">commit</span> <span class="operator">|</span> demand]    <span class="operator">|</span> <span class="keyword">start</span> <span class="keyword">with</span> (start_time) next (next_time)</span><br><span class="line">]</span><br><span class="line"><span class="keyword">as</span></span><br><span class="line">subquery</span><br><span class="line"></span><br><span class="line">build immediate:是在创建物化视图的时候就生成数据。</span><br><span class="line">build dererred:则在创建时不生成数据，以后根据需要再生成数据。默认为 build immediate。</span><br><span class="line">refresh:指当基表发生了 DML 操作后，物化视图何时采用哪种方式和基表进行同步。[fast <span class="operator">|</span> complete<span class="operator">|</span>force] fast采用增量刷新，只刷新自上次刷新以后进行的修改。complete刷新对整个物化视图进行完全的刷新。force方式，则 Oracle 在刷新时会去判断是否可以进行快速刷新，如果可以则采用 fast 方式，否则采用 complete的方式，force 是默认的方式。</span><br><span class="line">刷新模式：<span class="keyword">on</span> <span class="keyword">commit</span>和<span class="keyword">on</span> demand两种， <span class="keyword">on</span> demand指需要手动刷新物化视图（默认）。<span class="keyword">on</span> <span class="keyword">commit</span>指在基表发生<span class="keyword">commit</span>操作时自动刷新.</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>创建手动刷新的物化视图</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> meterialized <span class="keyword">view</span> mv_v1</span><br><span class="line">[build immediate</span><br><span class="line">refresh force <span class="keyword">on</span> demand]</span><br><span class="line"><span class="keyword">as</span> </span><br><span class="line"><span class="keyword">select</span> twn.<span class="operator">*</span>,ta.name <span class="keyword">as</span> addressname <span class="keyword">from</span> t_owners twn,t_address ta <span class="keyword">where</span> twn.addressid<span class="operator">=</span>ta.id(<span class="operator">+</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_owners <span class="keyword">VALUES</span> (<span class="number">1004</span>,<span class="string">&#x27;lili&#x27;</span>,<span class="number">1003</span>,<span class="string">&#x27;6-1&#x27;</span>,<span class="string">&#x27;7895&#x27;</span>,sysdate,<span class="number">1002</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mv_v2;</span><br><span class="line">#物化视图中没有新插入的数据。</span><br><span class="line">#PL<span class="operator">/</span><span class="keyword">SQL</span>执行</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">DBMS_MVIEW.refresh(<span class="string">&#x27;mv_v2&#x27;</span>,<span class="string">&#x27;C&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">#或者在命令行执行</span><br><span class="line"><span class="keyword">EXEC</span> DBMS_MVIEW.refresh(<span class="string">&#x27;mv_v2&#x27;</span>,<span class="string">&#x27;C&#x27;</span>);</span><br><span class="line">#DBMS_MVIEW.refresh 实际上是系统内置的存储过程</span><br></pre></td></tr></table></figure><ul><li>创建自动刷新的物化视图</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> materialized <span class="keyword">view</span> mv_v3</span><br><span class="line">build immediate</span><br><span class="line">refresh force</span><br><span class="line"><span class="keyword">on</span> <span class="keyword">commit</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> twn.<span class="operator">*</span>,ta.name <span class="keyword">as</span> addressname <span class="keyword">from</span> t_owners twn,t_address ta <span class="keyword">where</span> twn.addressid<span class="operator">=</span>ta.id(<span class="operator">+</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_owners <span class="keyword">VALUES</span> (<span class="number">1005</span>,<span class="string">&#x27;longlong&#x27;</span>,<span class="number">1002</span>,<span class="string">&#x27;6-2&#x27;</span>,<span class="string">&#x27;1234&#x27;</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mv_v3;</span><br></pre></td></tr></table></figure><ul><li>创建时不生成数据的物化视图</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> materailized <span class="keyword">view</span> mv_v4</span><br><span class="line">build deferred</span><br><span class="line">refresh force <span class="keyword">on</span> <span class="keyword">commit</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> twn.<span class="operator">*</span>,ta.name <span class="keyword">as</span> addressname <span class="keyword">from</span> t_owners twn,t_address ta <span class="keyword">where</span> twn.addressid<span class="operator">=</span>ta.id(<span class="operator">+</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mv_v4;</span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">DBMS_MVIEW.refresh(<span class="string">&#x27;mv_v4&#x27;</span>,<span class="string">&#x27;C&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_owners <span class="keyword">VALUES</span> (<span class="number">1006</span>,<span class="string">&#x27;chuan&#x27;</span>,<span class="number">1001</span>,<span class="string">&#x27;7-2&#x27;</span>,<span class="string">&#x27;7534&#x27;</span>,sysdate,<span class="number">1003</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> mv_v4;</span><br></pre></td></tr></table></figure><ul><li>删除物化视图</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop materialized view view_name;</span><br></pre></td></tr></table></figure><ul><li>创建增量刷新的物化视图</li></ul><p>如果创建增量刷新的物化视图，必须首先创建物化视图日志</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#创建物化视图日志</span><br><span class="line"><span class="keyword">create</span> materialized <span class="keyword">view</span> log <span class="keyword">on</span> t_owners <span class="keyword">with</span> rowid;</span><br><span class="line"><span class="keyword">create</span> materialized <span class="keyword">view</span> log <span class="keyword">on</span> t_address <span class="keyword">with</span> rowid;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> materialized <span class="keyword">view</span> mv_v5</span><br><span class="line">build immediate</span><br><span class="line">refresh fast</span><br><span class="line"><span class="keyword">on</span> <span class="keyword">commit</span></span><br><span class="line"><span class="keyword">as</span></span><br><span class="line"><span class="keyword">select</span> twn.<span class="operator">*</span>,twn.rowid <span class="keyword">as</span> twnrowid,ta.rowid <span class="keyword">as</span> tarowid,ta.name <span class="keyword">as</span> addressname <span class="keyword">from</span> t_owners twn,t_address ta <span class="keyword">where</span> twn.addressid<span class="operator">=</span>ta.id(<span class="operator">+</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_owners <span class="keyword">VALUES</span> (<span class="number">1007</span>,<span class="string">&#x27;su&#x27;</span>,<span class="number">1002</span>,<span class="string">&#x27;8-2&#x27;</span>,<span class="string">&#x27;3455&#x27;</span>,sysdate,<span class="number">1002</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line">#创建增量刷新的物化视图，必须：</span><br><span class="line">#<span class="number">1</span>、创建物化视图中涉及表的物化视图日志。</span><br><span class="line">#<span class="number">2</span>、在查询语句中，必须包含所有表的rowid(以rowid方式建立物化视图日志)</span><br></pre></td></tr></table></figure><h2 id="8、序列"><a href="#8、序列" class="headerlink" title="8、序列"></a>8、序列</h2><p>序列是 ORACLE 提供的用于产生一系列唯一数字的数据库对象。</p><h4 id="创建序列语法"><a href="#创建序列语法" class="headerlink" title="创建序列语法"></a>创建序列语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> sequence sequence_name;</span><br></pre></td></tr></table></figure><p>通过序列的伪列来访问序列的值,NEXTVAL 返回序列的下一个值,CURRVAL 返回序列的当前值</p><blockquote><p>注意：我们在刚建立序列后，无法提取当前值，只有先提取下一个值时才能再次提取当前值。</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> sequence sequence_one;</span><br><span class="line"><span class="keyword">select</span> sequence_one.nextval <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">select</span> sequence_one.currval <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><h4 id="创建复杂序列"><a href="#创建复杂序列" class="headerlink" title="创建复杂序列"></a>创建复杂序列</h4><ul><li>语法：</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> sequence sequence_one</span><br><span class="line">[increment <span class="keyword">by</span> n] #递增的序列值是n 如果n是正数就递增,如果是负数就递减 默认是<span class="number">1</span></span><br><span class="line">[<span class="keyword">start</span> <span class="keyword">with</span> n] #开始的值,递增默认是 minvalue 递减是 maxvalue</span><br><span class="line">[&#123;maxvalue n<span class="operator">|</span>nomaxvalue&#125;] #最大值</span><br><span class="line">[&#123;minvalue n<span class="operator">|</span>nominvalue&#125;]#最小值</span><br><span class="line">[&#123;<span class="keyword">cycle</span> <span class="operator">|</span> nocycle&#125;] #循环</span><br><span class="line">[&#123;cache n <span class="operator">|</span> nocache&#125;] #分配并存入到内存中</span><br></pre></td></tr></table></figure><ul><li>创建有最大值的非循环序列</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> sequence seq_1</span><br><span class="line">increment <span class="keyword">by</span> <span class="number">20</span></span><br><span class="line">maxvalue <span class="number">100</span></span><br><span class="line">minvalue <span class="number">20</span></span><br><span class="line">nocycle;</span><br><span class="line"><span class="keyword">select</span> seq_1.nextval <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><ul><li>有最大值的循环序列</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> sequence seq_2</span><br><span class="line">increment <span class="keyword">by</span> <span class="number">20</span></span><br><span class="line">maxvalue <span class="number">100</span></span><br><span class="line">minvalue <span class="number">20</span></span><br><span class="line"><span class="keyword">cycle</span></span><br><span class="line">cache <span class="number">4</span>;</span><br></pre></td></tr></table></figure><blockquote><p>注意：CACHE &lt;&#x3D; CEIL((MAXVALUE - MINVALUE) &#x2F; ABS(INCREMENT))<br>例如：cache &lt;&#x3D;ceil(100-20)&#x2F;abs(20)</p></blockquote><h4 id="修改和删除序列"><a href="#修改和删除序列" class="headerlink" title="修改和删除序列"></a>修改和删除序列</h4><p>修改序列：使用 ALTER SEQUENCE 语句修改序列，不能更改序列的 STARTWITH 参数</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> SEQUENCE 序列名称 MAXVALUE <span class="number">5000</span> <span class="keyword">CYCLE</span>;</span><br><span class="line"><span class="keyword">alter</span> sequence seq_1 maxvalue <span class="number">300</span> <span class="keyword">cycle</span> cache <span class="number">14</span>;</span><br></pre></td></tr></table></figure><p>删除序列</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">DROP</span> SEQUENCE 序列名称;</span><br><span class="line"><span class="keyword">drop</span> sequence seq_1;</span><br></pre></td></tr></table></figure><h2 id="9、同义词"><a href="#9、同义词" class="headerlink" title="9、同义词"></a>9、同义词</h2><p>​同义词实质上是指定方案对象的一个别名。通过屏蔽对象的名称和所有者以及对分布式数据库的远程对象提供位置透明性，同义词可以提供一定程度的安全性。同时，同义词的易用性较好，降低了数据库用户的 SQL 语句复杂度。</p><p>​同义词允许基对象重命名或者移动，这时，只需对同义词进行重定义，基于同义词的应用程序可以继续运行而无需修改。</p><p>​同义词本身不涉及安全，当你赋予一个同义词对象权限时，你实质上是在给同义词的基对象赋予权限，同义词只是基对象的一个别名。</p><h4 id="创建与使用同义词"><a href="#创建与使用同义词" class="headerlink" title="创建与使用同义词"></a>创建与使用同义词</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> [public] SYNONYM synonym <span class="keyword">for</span> object</span><br><span class="line">synonym:创建的同义词的名称</span><br><span class="line">object:表示表，视图，序列等我们要创建同义词的对象的名称.创建共有的同义词，以另外的用户登陆，也可以使用公有同义词</span><br><span class="line"><span class="keyword">create</span> public SYNONYM twn <span class="keyword">for</span> t_owners;</span><br><span class="line">创建私有的同义词</span><br><span class="line"><span class="keyword">create</span> SYNONYM twn1 <span class="keyword">for</span> t_owners;</span><br></pre></td></tr></table></figure><h2 id="10、索引"><a href="#10、索引" class="headerlink" title="10、索引"></a>10、索引</h2><p>索引是用于加速数据存取的数据对象。合理的使用索引可以大大降低 i&#x2F;o 次数,从而提高数据访问性能。</p><p>索引是需要占据存储空间的，也可以理解为是一种特殊的数据。形式类似于下图的一棵“树”，而树的节点存储的就是每条记录的物理地址，也就是我们提到的伪列（ROWID）</p><h4 id="普通索引"><a href="#普通索引" class="headerlink" title="普通索引"></a>普通索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> index index_name <span class="keyword">on</span> table_name(column_name);#根据某张表的某列来创建索引。</span><br><span class="line"><span class="keyword">create</span> index t_owners_name <span class="keyword">on</span> t_owners(name);</span><br><span class="line"></span><br><span class="line">#索引性能测试</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> T_INDEXTEST (</span><br><span class="line">ID NUMBER,</span><br><span class="line">NAME VARCHAR2(<span class="number">30</span>)</span><br><span class="line">);</span><br><span class="line"><span class="keyword">BEGIN</span></span><br><span class="line"><span class="keyword">FOR</span> i <span class="keyword">in</span> <span class="number">1.</span><span class="number">.1000000</span></span><br><span class="line">loop</span><br><span class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> T_INDEXTEST <span class="keyword">VALUES</span>(i,<span class="string">&#x27;AA&#x27;</span><span class="operator">||</span>i);</span><br><span class="line"><span class="keyword">end</span> loop;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">END</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> index t_indextest_name <span class="keyword">on</span> t_indextest(name);</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_indextest <span class="keyword">where</span> id<span class="operator">=</span><span class="number">765432</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_indextest <span class="keyword">where</span> name<span class="operator">=</span><span class="string">&#x27;AA765432&#x27;</span>;</span><br></pre></td></tr></table></figure><h4 id="唯一索引"><a href="#唯一索引" class="headerlink" title="唯一索引"></a>唯一索引</h4><p>如果我们需要在某个表某个列创建索引，而这列的值是不会重复的。这是我们可以创建唯一索引。</p><p>语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">unique</span> index index_name <span class="keyword">on</span> table_name(column_name);</span><br></pre></td></tr></table></figure><h4 id="复合索引"><a href="#复合索引" class="headerlink" title="复合索引"></a>复合索引</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> index index_name <span class="keyword">on</span> table_name(column_name,column_name);</span><br></pre></td></tr></table></figure><h4 id="反向键索引"><a href="#反向键索引" class="headerlink" title="反向键索引"></a>反向键索引</h4><p>​应用场景：当某个字段的值为连续增长的值，如果构建标准索引，会形成歪脖子树。这样会增加查询的层数，性能会下降。建立反向键索引，可以使索引的值变得不规则，从而使索引树能够均匀分布。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> index 索引名称 <span class="keyword">on</span> 表名(列名) reverse;</span><br><span class="line"><span class="keyword">create</span> index t_indextest_name_reverse <span class="keyword">on</span> t_indextest(id) reverse;</span><br></pre></td></tr></table></figure><h4 id="位图索引"><a href="#位图索引" class="headerlink" title="位图索引"></a>位图索引</h4><ul><li>使用场景：位图索引适合创建在低基数列上</li><li>位图索引不直接存储 ROWID，而是存储字节位到 ROWID 的映射</li><li>优点：减少响应时间，节省空间占用</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> bitmap index index_name table_name(column_name);</span><br></pre></td></tr></table></figure><h2 id="11、PL-SQL"><a href="#11、PL-SQL" class="headerlink" title="11、PL&#x2F;SQL"></a>11、PL&#x2F;SQL</h2><p>PL&#x2F;SQL（Procedure Language&#x2F;SQL）是 Oracle 对 sql 语言的过程化扩展，指在 SQL 命令语言中增加了过程处理语句（如分支、循环等），使 SQL 语言具有过程处理能力。把 SQL 语言的数据操纵能力与过程语言的数据处理能力结合起来，使得 PLSQL 面向过程但比过程语言简单、高效、灵活和实用。</p><h4 id="基本语法结构"><a href="#基本语法结构" class="headerlink" title="基本语法结构"></a>基本语法结构</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">declare</span>  <span class="comment">--声明变量]</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">逻辑代码</span><br><span class="line">[exception <span class="comment">--异常处理]</span></span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h4 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">声明变量的语法</span><br><span class="line">变量名 类型(长度)</span><br><span class="line">变量赋值语法</span><br><span class="line">变量名:<span class="operator">=</span>变量值</span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">v_price number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_usenum number;</span><br><span class="line">v_usenum2 number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_money(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">v_price:<span class="operator">=</span><span class="number">2.45</span>;</span><br><span class="line">v_usenum:<span class="operator">=</span><span class="number">8012</span>;</span><br><span class="line">v_usenum2:<span class="operator">=</span>round(v_usenum<span class="operator">/</span><span class="number">1000</span>,<span class="number">2</span>);</span><br><span class="line">v_money:<span class="operator">=</span>round(v_price<span class="operator">*</span>v_usenum2,<span class="number">2</span>);</span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;单价：&#x27;</span><span class="operator">||</span>v_price<span class="operator">||</span><span class="string">&#x27;吨数:&#x27;</span><span class="operator">||</span>v_usenum2<span class="operator">||</span><span class="string">&#x27;金额：&#x27;</span><span class="operator">||</span>v_money);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>select into方式赋值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> 列名 <span class="keyword">into</span> 变量名 <span class="keyword">from</span> 表名 <span class="keyword">where</span> 条件;</span><br></pre></td></tr></table></figure><blockquote><p>注意：结果必须是一条记录 ，有多条记录和没有记录都会报错</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> usenum,num0,num1 <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">year</span><span class="operator">=</span><span class="number">2023</span> <span class="keyword">and</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">v_price number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_usenum number;</span><br><span class="line">v_usenum2 number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_num0 number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_num1 number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_money number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">v_price:<span class="operator">=</span><span class="number">2.45</span>;</span><br><span class="line"><span class="keyword">select</span> usenum,num0,num1 <span class="keyword">into</span> v_usenum,v_num0,v_num1 <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">year</span><span class="operator">=</span><span class="number">2023</span> <span class="keyword">and</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">v_usenum2:<span class="operator">=</span>round(v_usenum<span class="operator">/</span><span class="number">1000</span>,<span class="number">2</span>);</span><br><span class="line">v_money:<span class="operator">=</span>round(v_price<span class="operator">*</span>v_usenum2,<span class="number">2</span>);</span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;单价：&#x27;</span><span class="operator">||</span>v_price<span class="operator">||</span><span class="string">&#x27;吨数：&#x27;</span><span class="operator">||</span>v_usenum2<span class="operator">||</span><span class="string">&#x27;金额：&#x27;</span><span class="operator">||</span>v_money<span class="operator">||</span><span class="string">&#x27;上月字数：&#x27;</span><span class="operator">||</span>v_num0<span class="operator">||</span><span class="string">&#x27;本月字数&#x27;</span><span class="operator">||</span>v_num1);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h4 id="属性类型"><a href="#属性类型" class="headerlink" title="属性类型"></a>属性类型</h4><p>%TYPE 引用型  作用：引用某表某列的字段类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span></span><br><span class="line">v_price number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_usenum t_account.usenum<span class="operator">%</span>TYPE;</span><br><span class="line">v_num0 t_account.num0<span class="operator">%</span>TYPE;</span><br><span class="line">v_num1 t_account.num1<span class="operator">%</span>TYPE;</span><br><span class="line">v_usenum2 number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_money number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">v_price:<span class="operator">=</span><span class="number">2.55</span>;</span><br><span class="line"><span class="keyword">select</span> usenum,num0,num1 <span class="keyword">into</span> v_usenum,v_num0,v_num1 <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">year</span><span class="operator">=</span><span class="number">2023</span> <span class="keyword">and</span> id<span class="operator">=</span><span class="number">3</span>;</span><br><span class="line">v_usenum2:<span class="operator">=</span>round(v_usenum<span class="operator">/</span><span class="number">1000</span>,<span class="number">2</span>);</span><br><span class="line">v_money:<span class="operator">=</span>v_price<span class="operator">*</span>v_usenum2;</span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;单价：&#x27;</span><span class="operator">||</span>v_price<span class="operator">||</span><span class="string">&#x27;吨数：&#x27;</span><span class="operator">||</span>v_usenum2<span class="operator">||</span><span class="string">&#x27;金额：&#x27;</span><span class="operator">||</span>v_money<span class="operator">||</span><span class="string">&#x27;上月字数：&#x27;</span><span class="operator">||</span>v_num0<span class="operator">||</span><span class="string">&#x27;本月字数&#x27;</span><span class="operator">||</span>v_num1);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>%ROWTYPE 记录型 ，上例中的例子可以用下面的代码代替作用: 标识某个表的行记录类型</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span></span><br><span class="line">v_price number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_account t_account<span class="operator">%</span>ROWTYPE;</span><br><span class="line">v_usenum2 number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_money number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">v_price:<span class="operator">=</span><span class="number">3.14</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> v_account <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">year</span><span class="operator">=</span><span class="number">2023</span> <span class="keyword">and</span> id<span class="operator">=</span><span class="number">3</span>;</span><br><span class="line">v_usenum2:<span class="operator">=</span>round(v_account.usenum<span class="operator">/</span><span class="number">1000</span>,<span class="number">2</span>);</span><br><span class="line">v_money:<span class="operator">=</span>v_price<span class="operator">*</span>v_usenum2;</span><br><span class="line">DBMS_OUTPUT.put_line(<span class="string">&#x27;单价：&#x27;</span><span class="operator">||</span>v_price<span class="operator">||</span><span class="string">&#x27;吨数：&#x27;</span><span class="operator">||</span>v_usenum2<span class="operator">||</span><span class="string">&#x27;金额：&#x27;</span><span class="operator">||</span>v_money<span class="operator">||</span><span class="string">&#x27;上月字数：&#x27;</span><span class="operator">||</span>v_account.num0<span class="operator">||</span><span class="string">&#x27;本月字数&#x27;</span><span class="operator">||</span>v_account.num1);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h4 id="异常"><a href="#异常" class="headerlink" title="异常"></a>异常</h4><p>在运行程序时出现的错误叫做异常，发生异常后，语句将停止执行，控制权转移到 PL&#x2F;SQL 块的异常处理部分</p><p>异常有两种类型：</p><ul><li>预定义异常 - 当 PL&#x2F;SQL 程序违反 Oracle 规则或超越系统限制时隐式引发。</li><li>用户定义异常 - 用户可以在 PL&#x2F;SQL 块的声明部分定义异常，自定义的异常通过 RAISE 语句显式引发。</li></ul><p>oracle预定义的异常21个</p><table><thead><tr><th>系统异常</th><th>产生原因</th></tr></thead><tbody><tr><td>ACCESS_INTO_NULL</td><td>未定义对象</td></tr><tr><td>CASE_NOT_FOUND</td><td>CASE 中若未包含相应的 WHEN ，并且没有设置 ELSE 时</td></tr><tr><td>COLLECTION_IS_NULL</td><td>集合元素未初始化</td></tr><tr><td>CURSER_ALREADY_OPEN</td><td>游标已经打开</td></tr><tr><td>DUP_VAL_ON_INDEX</td><td>唯一索引对应的列上有重复值</td></tr><tr><td>INVALID_CURSOR</td><td>在不合法的游标上进行操作</td></tr><tr><td>INVALID_NUMBER</td><td>内置的SQL语句不能将字符转化为数字</td></tr><tr><td><em><strong>NO_DATA_FOUND</strong></em></td><td><em><strong>使用select into 没有行返回行</strong></em></td></tr><tr><td><em><strong>TOO_MANY_ROWS</strong></em></td><td><em><strong>使用select into 有多行数据返回</strong></em></td></tr><tr><td>ZERO_DIVIDE</td><td>除数为0</td></tr><tr><td>SUBSCRIPT_BEYOND_COUNT</td><td>元素下标超过嵌套表或 VARRAY 的最大值</td></tr><tr><td>SUBSCRIPT_OUTSIDE_LIMIT</td><td>使用嵌套表或 VARRAY 时，将下标指定为负数</td></tr><tr><td>VALUE_ERROR</td><td>赋值时，变量长度不足以容纳实际数据</td></tr><tr><td>LOGIN_DENIED</td><td>PL&#x2F;SQL 应用程序连接到 oracle 数据库时，提供了不正确的用户名或密码</td></tr><tr><td>NOT_LOGGED_ON</td><td>PL&#x2F;SQL 应用程序在没有连接 oralce 数据库的情况下访问数据</td></tr><tr><td>PROGRAM_ERROR</td><td>PL&#x2F;SQL 内部问题，可能需要重装数据字典＆ PL&#x2F;SQL 系统包</td></tr><tr><td>ROWTYPE_MISMATCH</td><td>宿主游标变量与 PL&#x2F;SQL 游标变量的返回类型不兼容</td></tr><tr><td>SELF_IS_NULL</td><td>使用对象类型时，在 NULL对象上调用对象方法</td></tr><tr><td>STORAGE_ERROR</td><td>运行 PL&#x2F;SQL 时，超出内存空间</td></tr><tr><td>SYS_INVALID_ID</td><td>无效的 ROWID 字符串</td></tr><tr><td>TIMEOUT_ON_RESOURCE</td><td>Oracle 在等待资源时超时</td></tr><tr><td></td><td></td></tr></tbody></table><p>语法结构：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">exception</span><br><span class="line"><span class="keyword">when</span> 异常类型 <span class="keyword">then</span></span><br><span class="line">异常处理逻辑</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span></span><br><span class="line">v_price number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_usenum t_account.usenum<span class="operator">%</span>TYPE;</span><br><span class="line">v_usenum2 number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_money number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">v_price:<span class="operator">=</span><span class="number">3.55</span>;</span><br><span class="line"><span class="keyword">select</span> usenum <span class="keyword">into</span> v_usenum <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">year</span><span class="operator">=</span><span class="number">2023</span> <span class="keyword">and</span> id<span class="operator">=</span><span class="number">1</span>;</span><br><span class="line">v_usenum2:<span class="operator">=</span>round(v_usenum<span class="operator">/</span><span class="number">1000</span>,<span class="number">2</span>);</span><br><span class="line">v_money:<span class="operator">=</span>v_price<span class="operator">*</span>v_usenum2;</span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;单价：&#x27;</span><span class="operator">||</span>v_price<span class="operator">||</span><span class="string">&#x27;吨数:&#x27;</span><span class="operator">||</span>v_usenum2<span class="operator">||</span><span class="string">&#x27;金额：&#x27;</span><span class="operator">||</span>v_money);</span><br><span class="line">exception</span><br><span class="line"><span class="keyword">when</span> NO_DATA_FOUND <span class="keyword">then</span></span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;未找到数据，请核实&#x27;</span>);</span><br><span class="line"><span class="keyword">when</span> TOO_MANY_ROWS <span class="keyword">then</span></span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;查询条件有误，返回多条信息，请核实&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h4 id="条件判断"><a href="#条件判断" class="headerlink" title="条件判断"></a>条件判断</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#基本语法<span class="number">1</span></span><br><span class="line">if 条件 <span class="keyword">then</span></span><br><span class="line"> 业务逻辑</span><br><span class="line"><span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">#基本语法<span class="number">2</span></span><br><span class="line">if 条件 <span class="keyword">then</span></span><br><span class="line">业务逻辑</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">业务逻辑</span><br><span class="line"><span class="keyword">end</span> if;</span><br><span class="line"></span><br><span class="line">#基本语法<span class="number">3</span></span><br><span class="line">if 条件 <span class="keyword">then</span></span><br><span class="line">业务逻辑</span><br><span class="line">elseif 条件 <span class="keyword">then</span></span><br><span class="line">业务逻辑</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">业务逻辑</span><br><span class="line"><span class="keyword">end</span> if;</span><br></pre></td></tr></table></figure><p>需求：设置三个等级的水费 5 吨以下 2.45 元&#x2F;吨 5 吨到 10 吨部分 3.45 元&#x2F;吨 ，超过 10 吨部分 4.45 ，根据使用水费的量来计算阶梯水费。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span></span><br><span class="line">v_price1 number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_price2 number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_price3 number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_account t_account<span class="operator">%</span>ROWTYPE;</span><br><span class="line">v_usenum2 number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line">v_money number(<span class="number">10</span>,<span class="number">2</span>);</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">into</span> v_account <span class="keyword">from</span> t_account <span class="keyword">where</span> <span class="keyword">year</span><span class="operator">=</span><span class="number">2023</span> <span class="keyword">and</span> id<span class="operator">=</span><span class="number">3</span>;</span><br><span class="line">v_usenum2:<span class="operator">=</span>round(v_account.usenum<span class="operator">/</span><span class="number">1000</span>,<span class="number">2</span>);</span><br><span class="line">v_price1:<span class="operator">=</span><span class="number">2.45</span>;</span><br><span class="line">v_price2:<span class="operator">=</span><span class="number">3.45</span>;</span><br><span class="line">v_price3:<span class="operator">=</span><span class="number">4.45</span>;</span><br><span class="line">if v_usenum2<span class="operator">&lt;</span><span class="number">5</span> <span class="keyword">then</span></span><br><span class="line">v_money:<span class="operator">=</span>v_price1<span class="operator">*</span>v_usenum2;</span><br><span class="line">elsif <span class="number">5</span><span class="operator">&lt;</span>v_usenum2 <span class="keyword">and</span> v_usenum2<span class="operator">&lt;</span><span class="number">10</span> <span class="keyword">then</span></span><br><span class="line">v_money:<span class="operator">=</span>v_price1<span class="operator">*</span><span class="number">5</span><span class="operator">+</span>v_price2<span class="operator">*</span>(v_usenum2<span class="number">-5</span>);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">v_money:<span class="operator">=</span>v_price1<span class="operator">*</span><span class="number">5</span><span class="operator">+</span>v_price2<span class="operator">*</span><span class="number">5</span><span class="operator">+</span>v_price3<span class="operator">*</span>(v_usenum2<span class="number">-5</span>);</span><br><span class="line"><span class="keyword">end</span> if;</span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;吨数：&#x27;</span><span class="operator">||</span>v_usenum2<span class="operator">||</span><span class="string">&#x27;金额：&#x27;</span><span class="operator">||</span>v_money<span class="operator">||</span><span class="string">&#x27;上月字数：&#x27;</span><span class="operator">||</span>v_account.num0<span class="operator">||</span><span class="string">&#x27;本月字数&#x27;</span><span class="operator">||</span>v_account.num1);</span><br><span class="line">exception</span><br><span class="line"><span class="keyword">when</span> NO_DATA_FOUND <span class="keyword">then</span></span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;未找到数据，请核实&#x27;</span>);</span><br><span class="line"><span class="keyword">when</span> TOO_MANY_ROWS <span class="keyword">then</span></span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;有多行数据被查询&#x27;</span>);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h4 id="循环"><a href="#循环" class="headerlink" title="循环"></a>循环</h4><ol><li>无条件循环</li></ol><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">loop</span><br><span class="line">循环语句</span><br><span class="line"><span class="keyword">end</span> loop;</span><br><span class="line"></span><br><span class="line">#例子</span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">v_num number;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">v_num:<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">loop</span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;v_num=&#x27;</span><span class="operator">||</span>v_num);</span><br><span class="line">v_num:<span class="operator">=</span>v_num<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">if v_num<span class="operator">=</span><span class="number">100</span> <span class="keyword">then</span></span><br><span class="line">exit;</span><br><span class="line"><span class="keyword">end</span> if;</span><br><span class="line"><span class="keyword">end</span> loop;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">#循环部分可以改写成</span><br><span class="line">loop</span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;v_num=&#x27;</span><span class="operator">||</span>v_num);</span><br><span class="line">v_num:<span class="operator">=</span>v_num<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line">exit <span class="keyword">when</span> v_num<span class="operator">&gt;</span><span class="number">100</span>;</span><br><span class="line"><span class="keyword">end</span> loop;</span><br></pre></td></tr></table></figure><pre><code> 2.条件循环</code></pre><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">while 条件</span><br><span class="line">loop</span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">end</span> loop;</span><br><span class="line"></span><br><span class="line">#范例：输出从<span class="number">1</span>开始的<span class="number">100</span>个数</span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">v_num number;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">v_num:<span class="operator">=</span><span class="number">0</span>;</span><br><span class="line">while v_num<span class="operator">&lt;</span><span class="number">101</span></span><br><span class="line">loop</span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;v_num=&#x27;</span><span class="operator">||</span>v_num);</span><br><span class="line">v_num:<span class="operator">=</span>v_num<span class="operator">+</span><span class="number">1</span>;</span><br><span class="line"><span class="keyword">end</span> loop;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>​3.for循环</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#基本语法</span><br><span class="line"><span class="keyword">for</span> 变量 <span class="keyword">in</span> 起始值..终值</span><br><span class="line">loop </span><br><span class="line">循环体</span><br><span class="line"><span class="keyword">end</span> loop;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">for</span> v_num <span class="keyword">in</span> <span class="number">0.</span><span class="number">.100</span></span><br><span class="line">loop</span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;v_num=&#x27;</span><span class="operator">||</span>v_num);</span><br><span class="line"><span class="keyword">end</span> loop;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h4 id="游标"><a href="#游标" class="headerlink" title="游标"></a>游标</h4><p>游标是系统为用户开设的一个数据缓冲区,存放 SQL 语句的执行结果。我们可以把游标理解为 PL&#x2F;SQL 中的结果集。</p><p>在声明区声明游标，语法如下：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cursor</span> 游标名称 <span class="keyword">is</span> <span class="keyword">SQL</span> 语句;</span><br></pre></td></tr></table></figure><p>使用游标语法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">open</span> 游标名称</span><br><span class="line">loop</span><br><span class="line"><span class="keyword">fetch</span> 游标名称 <span class="keyword">into</span> 变量;</span><br><span class="line">exit <span class="keyword">when</span> 游标名称<span class="operator">%</span>notfound;</span><br><span class="line"><span class="keyword">end</span> loop;</span><br><span class="line"><span class="keyword">close</span> 游标名称;</span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">curr_jylsh varchar2(<span class="number">50</span>);</span><br><span class="line"><span class="keyword">cursor</span> lyjsh_cursor <span class="keyword">is</span> <span class="keyword">select</span> jylsh <span class="keyword">from</span> jylsh_table;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">open</span> lyjsh_cursor;</span><br><span class="line">loop</span><br><span class="line"><span class="keyword">fetch</span> lyjsh_cursor <span class="keyword">into</span> curr_jylsh;</span><br><span class="line">exit <span class="keyword">when</span> lyjsh_cursor<span class="operator">%</span>notfound;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_sbf_sb_cxjm_sbbc_fail <span class="keyword">values</span>(curr_jylsh,sysdate,<span class="string">&#x27;ljh&#x27;</span>,<span class="string">&#x27;00&#x27;</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">update</span> sbf_sb_cxjmhdxx <span class="keyword">set</span> sjclzt<span class="operator">=</span><span class="string">&#x27;00&#x27;</span>,xgrq<span class="operator">=</span>sysdate,xgr_dm<span class="operator">=</span><span class="string">&#x27;ljh&#x27;</span> <span class="keyword">where</span> cxjmhd_id <span class="keyword">in</span> (<span class="keyword">select</span> lymx_id <span class="keyword">from</span> sbf_sb_wyxx <span class="keyword">where</span> jylsh<span class="operator">=</span>curr_jylsh);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sbf_sb_cxjmwyxx e <span class="keyword">where</span> e.jylsh<span class="operator">=</span>curr_jylsh;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sbf_sb_cxjm_sbwyxx e <span class="keyword">where</span> e.jylsh<span class="operator">=</span>curr_jylsh;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">delete</span> <span class="keyword">from</span> sbf_sb_wyxx e <span class="keyword">where</span> e.jylsh<span class="operator">=</span>curr_jylsh;</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">update</span> sbf_sb </span><br><span class="line"><span class="keyword">end</span> loop;</span><br><span class="line"><span class="keyword">close</span> lyjsh_cursor;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需求：打印业主类型为 1 的价格表</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span> </span><br><span class="line">v_pricetable t_pricetable<span class="operator">%</span>ROWTYPE;</span><br><span class="line"><span class="keyword">cursor</span> cur_pricetable <span class="keyword">is</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_pricetable <span class="keyword">where</span> ownertypeid<span class="operator">=</span><span class="number">1001</span>;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">open</span> cur_pricetable;</span><br><span class="line">loop</span><br><span class="line"><span class="keyword">fetch</span>  cur_pricetable <span class="keyword">into</span> v_pricetable;</span><br><span class="line">exit <span class="keyword">when</span> cur_pricetable<span class="operator">%</span>notfound;</span><br><span class="line">dbms_output.put_line( <span class="string">&#x27;价格:&#x27;</span><span class="operator">||</span>v_pricetable.price <span class="operator">||</span><span class="string">&#x27;吨位：&#x27;</span><span class="operator">||</span>v_pricetable.minnum<span class="operator">||</span><span class="string">&#x27;-&#x27;</span><span class="operator">||</span>v_pricetable.maxnum );</span><br><span class="line"><span class="keyword">end</span> loop;</span><br><span class="line"><span class="keyword">close</span> cur_pricetable;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>带参数的游标</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span></span><br><span class="line">v_pricetable t_pricetable<span class="operator">%</span>ROWTYPE;</span><br><span class="line"><span class="keyword">cursor</span> cur_pricetable(v_ownertypeid number) <span class="keyword">is</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_pricetable <span class="keyword">where</span> ownertypeid<span class="operator">=</span>v_ownertypeid;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">open</span> cur_pricetable(<span class="number">1001</span>);</span><br><span class="line">loop</span><br><span class="line"><span class="keyword">fetch</span> cur_pricetable <span class="keyword">into</span> v_pricetable;</span><br><span class="line">exit <span class="keyword">when</span> cur_pricetable<span class="operator">%</span>notfound;</span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;价格:&#x27;</span><span class="operator">||</span>v_pricetable.price <span class="operator">||</span><span class="string">&#x27;吨位：&#x27;</span><span class="operator">||</span>v_pricetable.minnum<span class="operator">||</span><span class="string">&#x27;-&#x27;</span><span class="operator">||</span>v_pricetable.maxnum );</span><br><span class="line"><span class="keyword">end</span> loop;</span><br><span class="line"><span class="keyword">close</span> cur_pricetable;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><p>for 循环提取游标值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">declare</span></span><br><span class="line"><span class="keyword">cursor</span> cur_pricetable(v_ownertypeid number) <span class="keyword">is</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_pricetable <span class="keyword">where</span> ownertypeid<span class="operator">=</span>v_ownertypeid;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">for</span> cur_pricetable <span class="keyword">in</span> cur_pricetable(<span class="number">1001</span>)</span><br><span class="line">loop</span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;价格:&#x27;</span><span class="operator">||</span>cur_pricetable.price <span class="operator">||</span><span class="string">&#x27;吨位：&#x27;</span><span class="operator">||</span>cur_pricetable.minnum<span class="operator">||</span><span class="string">&#x27;-&#x27;</span><span class="operator">||</span>cur_pricetable.maxnum );</span><br><span class="line"><span class="keyword">end</span> loop;</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h2 id="12、存储函数"><a href="#12、存储函数" class="headerlink" title="12、存储函数"></a>12、存储函数</h2><p>存储函数又称为自定义函数。可以接收一个或多个参数，返回一个结果。在函数中我们可以使用 PL&#x2F;SQL 进行逻辑的处理。</p><h4 id="存储函数语法结构"><a href="#存储函数语法结构" class="headerlink" title="存储函数语法结构"></a>存储函数语法结构</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">function</span> 函数名称(参数名称 参数类型, 参数名称 参数类型, ...)</span><br><span class="line"><span class="keyword">return</span> 结果变量数据类型</span><br><span class="line"><span class="keyword">is</span> 变量声明部分;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">逻辑部分;</span><br><span class="line"><span class="keyword">RETURN</span> 结果变量;</span><br><span class="line">[exception 异常处理部分]</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h4 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span>  <span class="keyword">function</span> pingping(v_name varchar2,v_age number)</span><br><span class="line"><span class="keyword">return</span> varchar2</span><br><span class="line"><span class="keyword">is</span></span><br><span class="line">v_result varchar2(<span class="number">30</span>);</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">v_result:<span class="operator">=</span><span class="string">&#x27;姓名&#x27;</span><span class="operator">||</span>v_name<span class="operator">||</span><span class="string">&#x27;-年龄&#x27;</span><span class="operator">||</span>v_age;</span><br><span class="line">dbms_output.put_line(<span class="string">&#x27;==&#x27;</span><span class="operator">||</span>v_result);</span><br><span class="line"><span class="keyword">return</span> v_result;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line">#调用</span><br><span class="line"><span class="keyword">select</span> pingping(<span class="string">&#x27;suhe&#x27;</span>,<span class="number">18</span>) <span class="keyword">from</span> dual;</span><br></pre></td></tr></table></figure><p>需求：查询业主 ID，业主名称，业主地址，业主地址使用刚才我们创建的函数来实现。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">function</span> ss(v_id number) <span class="keyword">return</span> varchar2</span><br><span class="line"><span class="keyword">is</span></span><br><span class="line">address_name varchar2(<span class="number">100</span>);</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> name <span class="keyword">into</span> address_name <span class="keyword">from</span> t_address <span class="keyword">where</span> id<span class="operator">=</span>v_id;</span><br><span class="line"><span class="keyword">return</span> address_name;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">select</span> id,name,ss(addressid) <span class="keyword">from</span> t_owners;</span><br></pre></td></tr></table></figure><h2 id="13、存储过程"><a href="#13、存储过程" class="headerlink" title="13、存储过程"></a>13、存储过程</h2><h4 id="概念"><a href="#概念" class="headerlink" title="概念"></a>概念</h4><p>存储过程是被命名的 PL&#x2F;SQL 块，存储于数据库中，是数据库对象的一种。应用程序可以调用存储过程，执行相应的逻辑。</p><p>存储过程与存储函数都可以封装一定的业务逻辑并返回结果，存在区别如下：<br>1、存储函数中有返回值，且必须返回；而存储过程没有返回值，可以通过传出参数返回多个值。<br>2、存储函数可以在 select 语句中直接使用，而存储过程不能。过程多数是被应用程序所调用。<br>3、存储函数一般都是封装一个查询结果，而存储过程一般都封装一段事务代码。</p><h4 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">procedure</span> 存储过程名字(参数<span class="number">1</span> 类型,参数<span class="number">2</span> 类型)</span><br><span class="line"><span class="keyword">is</span><span class="operator">|</span><span class="keyword">as</span></span><br><span class="line">变量申明;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">逻辑部分;</span><br><span class="line">[exception 异常处理部分]</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><blockquote><p>参数只指定类型，不指定长度</p></blockquote><p>过程参数的三种模式：IN 传入参数（默认）,OUT 传出参数 ，主要用于返回程序运行结果,IN OUT 传入传出参数</p><h4 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h4><p>1、创建不带传出参数的存储过程：添加业主信息</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> sequence owner_sequence <span class="keyword">start</span> <span class="keyword">with</span> <span class="number">1010</span>;</span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">procedure</span> owners_add(v_name varchar2,v_addressid number,v_housenumber varchar2,v_watermeter varchar2,v_type varchar2)</span><br><span class="line"><span class="keyword">is</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_owners <span class="keyword">values</span>(owner_sequence.nextval,v_name,v_addressid,v_housenumber,v_watermeter,sysdate,v_type);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"><span class="keyword">call</span> owners_add(<span class="string">&#x27;赵伟&#x27;</span>,<span class="number">1001</span>,<span class="string">&#x27;999-3&#x27;</span>,<span class="string">&#x27;132-7&#x27;</span>,<span class="number">1002</span>);</span><br></pre></td></tr></table></figure><p>2、创建带传出参数的存储过程</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">procedure</span> owners_add_with_out(v_name varchar2,v_addressid number,v_housenumber varchar2,v_watermeter varchar2,v_type varchar2,v_id <span class="keyword">out</span> number)</span><br><span class="line"><span class="keyword">is</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">select</span> owner_sequence.nextval <span class="keyword">into</span> v_id <span class="keyword">from</span> dual;</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_owners <span class="keyword">values</span>(v_id,v_name,v_addressid,v_housenumber,v_watermeter,sysdate,v_type);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">declare</span> </span><br><span class="line">v_id number;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">owners_add_with_out(<span class="string">&#x27;王旺旺&#x27;</span>,<span class="number">1</span>,<span class="string">&#x27;922-3&#x27;</span>,<span class="string">&#x27;133-7&#x27;</span>,<span class="number">1</span>,v_id);</span><br><span class="line">DBMS_OUTPUT.put_line(<span class="string">&#x27;增加成功,ID:&#x27;</span><span class="operator">||</span>v_id);</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><h2 id="14、触发器"><a href="#14、触发器" class="headerlink" title="14、触发器"></a>14、触发器</h2><h4 id="概念-1"><a href="#概念-1" class="headerlink" title="概念"></a>概念</h4><p>数据库触发器是一个与表相关联的、存储的 PL&#x2F;SQL 程序。每当一个特定的数据操作语句(Insert,update,delete)在指定的表上发出时，Oracle 自动地执行触发器中定义的语句序列。</p><p>触发器可用于</p><ul><li>数据确认</li><li>实施复杂的安全性检查</li><li>做审计，跟踪表上所做的数据操作等</li><li>数据的备份和同步</li></ul><p>触发器分类</p><ul><li>前置触发器（BEFORE）</li><li>后置触发器（AFTER）</li></ul><h4 id="触发器语法"><a href="#触发器语法" class="headerlink" title="触发器语法"></a>触发器语法</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">trigger</span> 触发器名字</span><br><span class="line">before<span class="operator">|</span>after</span><br><span class="line">[<span class="keyword">delete</span>][[<span class="keyword">or</span>] <span class="keyword">insert</span>][[<span class="keyword">or</span>]<span class="keyword">update</span> [<span class="keyword">of</span> 列名]]</span><br><span class="line"><span class="keyword">on</span> 表名</span><br><span class="line">[<span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span> ] [<span class="keyword">when</span> [条件]]</span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line">变量申明;</span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">PLSQL块</span><br><span class="line"><span class="keyword">end</span>;</span><br></pre></td></tr></table></figure><blockquote><p>作用是标注此触发器是行级触发器还是语句级触发器</p></blockquote><p>在触发器中触发语句与伪记录变量的值</p><table><thead><tr><th>触发语句</th><th>:old</th><th>:new</th></tr></thead><tbody><tr><td>insert</td><td>所有字段都是空的（null）</td><td>将要插入的数据</td></tr><tr><td>update</td><td>更新以前该行的值</td><td>更新后的值</td></tr><tr><td>delete</td><td>删除以前该行的值</td><td>所有字段都是空的（null）</td></tr></tbody></table><h4 id="案例-1"><a href="#案例-1" class="headerlink" title="案例"></a>案例</h4><p>1、前置触发器</p><p>需求：当用户输入本月累计表数后，自动计算出本月使用数 。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">trigger</span> tri_account_update</span><br><span class="line">before</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">of</span> num1</span><br><span class="line"><span class="keyword">on</span> t_account</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line">:new.usenum:<span class="operator">=</span>:new.num1<span class="operator">-</span>:new.num0;</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line">#<span class="keyword">create</span> <span class="keyword">table</span> t_account(id number,ownerid number,ownertypeid number,areaid number,<span class="keyword">year</span> <span class="type">char</span>(<span class="number">4</span>),<span class="keyword">month</span> #<span class="type">char</span>(<span class="number">2</span>),num0 number,num1 number,usenum number,meteruserid number,meterdate <span class="type">date</span>,money number(<span class="number">10</span>,<span class="number">2</span>),isfee #<span class="type">char</span>(<span class="number">1</span>),feedate <span class="type">date</span>,feeuserid number);</span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_account <span class="keyword">values</span>(<span class="number">1</span>,<span class="number">1001</span>,<span class="number">1001</span>,<span class="number">1001</span>,<span class="number">2023</span>,<span class="number">06</span>,<span class="number">43543</span>,<span class="number">46456</span>,<span class="number">3000</span>,<span class="number">1001</span>,sysdate,<span class="number">3232</span>,<span class="number">0</span>,sysdate,<span class="number">1001</span>);</span><br><span class="line"><span class="keyword">commit</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> t_account <span class="keyword">set</span> num1<span class="operator">=</span><span class="number">100000</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>2、后置触发器</p><p>需求：当用户修改了业主信息表的数据时记录修改前与修改后的值</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">table</span> t_owners_log</span><br><span class="line">(</span><br><span class="line">updatetime <span class="type">date</span>,</span><br><span class="line">ownerid number,</span><br><span class="line">oldname varchar2(<span class="number">30</span>),</span><br><span class="line">newname varchar2(<span class="number">30</span>)</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line"><span class="keyword">create</span> <span class="keyword">or</span> replace <span class="keyword">trigger</span> tri_insert_owner</span><br><span class="line">after</span><br><span class="line"><span class="keyword">update</span> <span class="keyword">of</span> name</span><br><span class="line"><span class="keyword">on</span> t_owners</span><br><span class="line"><span class="keyword">for</span> <span class="keyword">each</span> <span class="type">row</span></span><br><span class="line"><span class="keyword">declare</span></span><br><span class="line"><span class="keyword">begin</span></span><br><span class="line"><span class="keyword">insert</span> <span class="keyword">into</span> t_owners_log <span class="keyword">values</span>(sysdate,:old.id,:old.name,:new.name);</span><br><span class="line"><span class="keyword">end</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">update</span> t_owners <span class="keyword">set</span> name<span class="operator">=</span><span class="string">&#x27;lililili&#x27;</span> <span class="keyword">where</span> id<span class="operator">=</span><span class="number">1004</span>;</span><br><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> t_owners_log;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Oracle </tag>
            
            <tag> 关系型数据库 </tag>
            
            <tag> 表 </tag>
            
            <tag> 视图 </tag>
            
            <tag> 表空间 </tag>
            
            <tag> 序列 </tag>
            
            <tag> 函数 </tag>
            
            <tag> 索引 </tag>
            
            <tag> 触发器 </tag>
            
            <tag> 存储函数 </tag>
            
            <tag> 存储过程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Picgo+Typora+SMMS图床配置</title>
      <link href="/posts/532806c/"/>
      <url>/posts/532806c/</url>
      
        <content type="html"><![CDATA[<h1 id="Picgo-Typora-SMMS图床配置"><a href="#Picgo-Typora-SMMS图床配置" class="headerlink" title="Picgo+Typora+SMMS图床配置"></a>Picgo+Typora+SMMS图床配置</h1><p>​由于每次写学习笔记都会有相应的图片。之前有使用过<em><strong>阿里云的OSS</strong></em>。使用起来也是相当不错的，但是OSS是收费的。其<em><strong>付费模式</strong></em>可以包月，也可以按访问流量来付费，虽然便宜，但是对于还在学习的小伙伴来说也是没必要的。使用<em><strong>免费的图床</strong></em>也可以实现相同的功能。比如sm.ms图床，有免费版本和付费版本，免费容量是5G。访问速度来说也还算是OK。所以本次配置的图床选择sm.ms。</p><p>​写这篇配置教程的<em><strong>目的</strong></em>是，将自己以前的学习做一个<em><strong>记录</strong></em>，就是想帮助一下<em><strong>更多的</strong></em>，想要实现相同功能的朋友。其次也是帮助一下特别好的朋友配置图床。</p><h2 id="一、Picgo"><a href="#一、Picgo" class="headerlink" title="一、Picgo"></a>一、Picgo</h2><h3 id="Picgo简介："><a href="#Picgo简介：" class="headerlink" title="Picgo简介："></a>Picgo简介：</h3><ol><li><p>应用概述：一个用于快速上传图片并获取图片 URL 链接的工具。</p></li><li><p>picgo本身支持：<code>七牛图床</code> v1.0、<code>腾讯云 COS v4\v5 版本</code> v1.1 &amp; v1.5.0、<code>又拍云</code> v1.2.0、<code>GitHub</code> v1.5.0、<code>SM.MS V2</code> v2.3.0-beta.0、<code>阿里云 OSS</code> v1.6.0、<code>Imgur</code> v1.6.0等。还可以通过插件扩展其他图床。</p></li><li><p>应用界面：</p><p><img src="https://bitiful.hudi.space/posts/image-20241020140658220.png" alt="image-20241020140658220"></p></li></ol><h3 id="Picgo安装配置："><a href="#Picgo安装配置：" class="headerlink" title="Picgo安装配置："></a>Picgo安装配置：</h3><ol><li><p>下载地址： <a href="https://github.com/Molunerfinn/PicGo">https://github.com/Molunerfinn/PicGo</a> ，或者选择其他镜像源下载也可。下载已经打包好的exe程序，安装直接点击exe可执行程序，点击下一步即可。</p></li><li><p>下载完成后。配置sm.ms图床。配置sm.ms图床前需要注册图床的账户。图床地址 <a href="https://smms.app/">https://smms.app/</a> 。</p><blockquote><p>这里使用picgo-plugin-smms-user插件，插件下载地址 <a href="https://github.com/xlzy520/picgo-plugin-smms-user">https://github.com/xlzy520/picgo-plugin-smms-user</a> 。可以使用git或者直接点击下载压缩包。</p><ul><li><p>在线安装直接在插件设置界面搜索：<strong>smms-user</strong>安装，安装完成后重启应用</p></li><li><p>离线安装，下载插件包，将插件包移动到picgo的安装目录下执行以下命令。这里使用本地插件导入的方式使用。</p></li></ul> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install ./picgo-plugin-smms-user</span><br></pre></td></tr></table></figure></blockquote><p><img src="https://bitiful.hudi.space/posts/image-20241020142806786.png" alt="image-20241020142806786"></p></li><li><p>安装使用导入本地插件的方式如上图。导入后就会在《插件设置》菜单显示。</p></li><li><p>点击插件的设置按钮，选择最后一项《配置uploader-smms-user》配置smms-user的auth值，auth通过<a href="https://smms.app/">smms官网</a>的API-Token获取即可。</p><p><img src="https://bitiful.hudi.space/posts/sm_msauth.png" alt="image-20241020145626017"></p></li><li><p>配置完成后在《上传区》图片上传勾选SM.MS-登录用户就完成了picgo和sm.ms的配置。和上述picgo简介应用图片位置一致。将图片拖入相应位置就可以直接将图片上传到sm.ms图床上了。登录 <a href="https://smms.app/">https://smms.app/</a> 即可查看。</p></li><li><p>对于picgo的其他配置可以在设置模块查看，建议开启上传前重命名功能。此项功能方便以后管理sm.ms图床的图片。</p></li></ol><h2 id="二、Typora"><a href="#二、Typora" class="headerlink" title="二、Typora"></a>二、Typora</h2><h3 id="功能需求："><a href="#功能需求：" class="headerlink" title="功能需求："></a>功能需求：</h3><blockquote><p>将typora笔记中的图片，利用picgo工具直接上传到sm.ms图床上并返回图片地址供typora笔记所使用。</p></blockquote><h3 id="Typora配置："><a href="#Typora配置：" class="headerlink" title="Typora配置："></a>Typora配置：</h3><p>Typora本软件不再做介绍，直接给出配置步骤。</p><ol><li>点击菜单栏的《文件》选项。</li><li>选择《偏好设置》。</li><li>选择《图像设置》，插入图片时-&gt;<em><strong>上传图片。</strong></em></li><li>勾选☑️对本地位置的图片应用上述规则。</li><li>上传服务选择<em><strong>Picgo(app)</strong></em></li><li>picgo的路径选择picgo的安装路径中的picgo.exe可执行程序即可如下图。</li></ol><p><img src="https://bitiful.hudi.space/posts/smms_typora_config.png" alt="image-20241020151951062"></p><p>完成以上的配置，你的typora就实现了插入图片自动上传到smms的图床的功能啦。🎉🎉🎉</p><h2 id="三、扩展"><a href="#三、扩展" class="headerlink" title="三、扩展"></a>三、扩展</h2><p>当然你也可以使用其他的图床或者是云存储的服务。大部分的云存储服务都是收费的，比例***<a href="https://www.aliyun.com/product/oss">阿里云OSS</a><em><strong>，</strong></em><a href="https://cloud.tencent.com/product/cos">腾讯云COS</a><em><strong>，</strong></em><a href="https://www.qiniu.com/products/kodo">七牛云</a><em><strong>，<a href="https://www.upyun.com/"><em><strong>又拍云</strong></em></a>等，可以根据自己的经济情况选择一款云存储服务，当然用免费的不是更好吗。毕竟白嫖的就是香，但是便宜的免费的可能会面临就是</strong></em>服务提供商跑路***了，图片就可能找不到。选择大厂的虽说付费，也不算太贵不是。至少不太可能出现跑路的情况。</p><p>这里以<a href="https://www.upyun.com/">又拍云</a>为例。</p><p>这里没有广告！没有广告！没有广告！重要的事情说三遍。</p><h3 id="又拍云"><a href="#又拍云" class="headerlink" title="又拍云"></a>又拍云</h3><ol><li><p>登录<a href="https://www.upyun.com/">又拍云官方网站</a>，注册账号。</p></li><li><p>进入又拍云控制台，在云服务列表，创建服务。服务名称就是bucket。在后续picgo配置中会使用到，应用场景-填写网页图片，存储类型-选择标准类型，这里授权账号可以先不授权。也可以直接授权已有的操作员，或者新建授权操作员。然后点击下方的创建。服务创建完成后，点击进入配置。</p><p><img src="https://bitiful.hudi.space/posts/upyun-bucket-create.png" alt="image-20241020162956667"></p></li><li><p>在功能配置的域名管理模块，域名加速模块绑定域名。这里注意，在绑定域名时，域名需要<em><strong>备案</strong></em>，不然<em><strong>审核不通过</strong></em>，然后去域名提供商网站增加域名解析记录。这里以<em><strong>阿里云为例</strong></em>。</p><ul><li><p>在域名解析控制台，点击已有的域名进入解析设置。</p></li><li><p>点击添加记录，记录类型选择***<a href="https://www.aliyun.com/">CNAME</a>***。CNAME的意思是从一个域名指向另一个域名，主机记录值可以随意填写，如下图表示的内容。一般来说设置二级域名更加合适。</p></li><li><p>解析请求来源设置默认即可。</p><p>记录值填写在又拍云云存储服务的CNAME就可以了。该值的查找方式，又拍云控制台-&gt;云存储服务-&gt;服务管理 云存储（在该页面中点击服务名称）-&gt;域名管理页面的CNAME。</p></li></ul><p><img src="https://bitiful.hudi.space/posts/alyun_dns_e.png" alt="image-20241020165402733"></p></li><li><p>存储管理模块的<em><strong>操作员授权</strong></em>。点击授权按钮，有操作员就直接勾选☑️，没有操作员的点击新建授权操作员。输入操作员名称，密码项只能点击系统生成。生成完成后复制该密码，保存起来后续在配置picgo中使用。然后权限勾选☑️可读取，可写入，可删除。根据实际用途勾选权限。点击创建即可，如下图。</p><p><img src="https://bitiful.hudi.space/posts/auth_upyun_bucket.png" alt="image-20241020164210706"></p></li><li><p>完成上述步骤，你的又拍云云存储服务就创建好了。🎉🎉🎉</p></li></ol><h3 id="Picgo配置"><a href="#Picgo配置" class="headerlink" title="Picgo配置"></a>Picgo配置</h3><ol><li>在picgo的界面找到图床设置。在图床设置中选择<em><strong>又拍云</strong></em>配置。</li><li>在又拍云的设置界面填写相关的配置即可。</li><li>设定Bucket,这里的<em><strong>bucket</strong></em>就是前面创建的<em><strong>云存储服务的名称。</strong></em></li><li>设定操作员就是你给云服务授权的操作人名称</li><li>设定<em><strong>操作员密码</strong></em>，这个密码就是在创建操作员的时候生成的密码。</li><li>设定加速域名，该项值是在又拍云控制台-&gt;云存储服务-&gt;服务管理 云存储（在该页面中点击服务名称）-&gt;域名管理页面的加速域名</li><li>设定网址后缀（选填），可以不填不影响使用。</li><li>设定<em><strong>存储路径</strong></em>，就是你在bucket(云存储服务)中的<em><strong>文件夹路径</strong></em>。也可以不填，这样图片会上传到你的bucket的根目录下。</li><li>完成以上设置以后，点击保存，在上传区域选择又拍云。就可以完成图片通过picgo上传又拍云云存储了。</li><li>这时在typora写文章图片同样也会上传又拍云。</li></ol><p>其他云存储服务和图床的配置基本上大致相同。这里就不展开描述了。后续可能会添加其他的免费的图床配置的内容。</p><p>完结</p>]]></content>
      
      
      <categories>
          
          <category> 工具 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> 图床配置 </tag>
            
            <tag> Picgo </tag>
            
            <tag> 云存储服务 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
